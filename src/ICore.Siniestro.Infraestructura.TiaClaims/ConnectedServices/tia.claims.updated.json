{
  "openapi": "3.0.1",
  "info": {
    "title": "Claim API",
    "description": "Enterprise RESTful API for Claim",
    "license": {
      "name": "Sapiens International",
      "url": "https://sapiens.com/"
    },
    "version": "2.9.0-cd20e5f"
  },
  "servers": [
    {
      "url": "/claim/api"
    }
  ],
  "tags": [
    {
      "name": "Claim item type combination endpoints",
      "description": "Claim Item Type Combination Controller"
    },
    {
      "name": "Third Party endpoints",
      "description": "Third Party Controller"
    },
    {
      "name": "Claim case subobjects endpoint",
      "description": "Claim Case Subobject Controller"
    },
    {
      "name": "Claim Questions endpoints",
      "description": "Question Controller"
    },
    {
      "name": "Claim item endpoints",
      "description": "Claim Item Controller"
    },
    {
      "name": "Claim payment endpoints",
      "description": "Payment Controller"
    },
    {
      "name": "Claim tasklist endpoints",
      "description": "Tasklist Controller"
    },
    {
      "name": "Claim Case endpoints",
      "description": "Claim Case Controller"
    },
    {
      "name": "Claim Subcase endpoints",
      "description": "Claim Subcase Controller"
    },
    {
      "name": "Claim type combination endpoints",
      "description": "Claim Type Combination Controller"
    },
    {
      "name": "Bulk API operations endpoint",
      "description": "Bulk API Operations Controller"
    },
    {
      "name": "Claim timeline resource endpoints",
      "description": "Timeline Controller"
    },
    {
      "name": "Receiver endpoints",
      "description": "Receiver Controller"
    },
    {
      "name": "Claim transaction resource endpoints",
      "description": "Transaction Controller"
    },
    {
      "name": "Claim payment item endpoints",
      "description": "Payment Item Controller"
    },
    {
      "name": "Overview endpoints",
      "description": "Overview Controller"
    },
    {
      "name": "Claim event resource endpoints",
      "description": "Claim Event Controller"
    }
  ],
  "paths": {
    "/v1/third-parties": {
      "get": {
        "tags": [
          "Third Party endpoints"
        ],
        "summary": "Get third parties of claim case.",
        "operationId": "getThirdParties",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "partyId",
            "in": "query",
            "description": "Party id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimThirdParty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Third Party endpoints"
        ],
        "summary": "Create given third party for claim case.",
        "operationId": "createThirdParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimThirdParty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "Link to created resource",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimThirdParty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/tasklists": {
      "get": {
        "tags": [
          "Claim tasklist endpoints"
        ],
        "summary": "Find claim tasklist for a given case or subcase",
        "operationId": "getTasklists",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimSubcaseNo",
            "in": "query",
            "description": "Claim subcase number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseTasklist"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Claim tasklist endpoints"
        ],
        "summary": "Create claim tasklist for the claim case/subcase",
        "operationId": "postTasklist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tasklist_TaskListPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "Link to created resource",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseTasklist_TaskListPost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/perform-transaction": {
      "post": {
        "tags": [
          "Claim transaction resource endpoints"
        ],
        "summary": "Execute claim transactions. Returns the resulting claim event as a response object",
        "description": "## The Transaction resource supports the following scenarios:\n\nScenario                            | Action\n---------------------------------   | -----------------\nCreate a claim event                | 'New Event'\nUpdate a claim event                | 'Adjust Event'\nCreate a claim case                 | 'New Case'\nUpdate a claim case                 | 'Adjust Case'\nUpdate a claim question             | 'Adjust Answer'\nCreate a claim case item            | 'New Item'\nUpdate a claim case item            | 'Adjust Item'\nCreate a claim subcase item         | 'New SubClaim Item'\nUpdate a claim subcase item         | 'Adjust Item'\nCreate a claim subcase              | 'New SubCase'\nUpdate a claim subcase              | 'Adjust SubCase'\nHandle custom action                | 'Custom Action'\nAll scenarios uses the POST method with a payload that must follow this structure:   \n```json\n{ /* List of actions to perform during transaction. */\n    \"actions\": [\n        {\n            /* Action to be performed - for example: */\n            /* 'New Event', 'Adjust Event', 'New Case', 'New Item' */\n            \"action\": \"string\", \n          \n            /* List of values to use, when performing an action. */\n            \"values\": [\n                {\n                    /* Name of the property, that is valid for particular action type */\n                    \"name\": \"string\",\n\n                    /* The actual property value */\n                    \"value\": \"string\"\n(default values null)                }\n            ]\n        }\n    ]\n}\n```\n\n### Examples: \n```json\n{ \"actions\" : [ { \"action\" : \"New Event\",\n                     \"values\" : [ { \"name\" : \"eventType\", \"value\" : \"PE4\" },      // required\n                                  { \"name\" : \"causeType\", \"value\" : \"PC6\" },\n                                  { \"name\" : \"subcauseType\", \"value\" : \"PS7\" },\n                                  { \"name\" : \"incidentDate\", \"value\": \"2017-02-01\" },      // required\n                                  { \"name\" : \"incidentDescription\", \"value\": \"Cat ate ring.\" },\n                                  { \"name\" : \"isExactIncidentDate\", \"value\": \"N\" } ] },\n                   { \"action\" : \"New Case\",\n                     \"values\" : [ { \"name\" : \"informerType\", \"value\" : \"IN\" },      //required\n                                   { \"name\" : \"notificationDate\", \"value\": \"2017-02-01\" },     //required\n                                   { \"name\" : \"policyLineNo\", \"value\": \"5031689\" },\n                                  { \"name\" : \"policyLineId\", \"value\": \"77642\" },       //required\n                                  { \"name\" : \"objectNo\", \"value\": \"53416\" },\n                                  { \"name\" : \"policyObjectId\", \"value\": \"77107\" },       //required \n                                  { \"name\" : \"status\", \"value\": \"OP\" },       //required \n                                  { \"name\" : \"lossOfBonus\", \"value\": \"N\" },   //required\n                                  { \"name\" : \"description\", \"value\": \"Never underestimate\" },\n                                  { \"name\" : \"riskNo\", \"value\": \"2\" },       //required\n                                  { \"name\" : \"subriskNo\", \"value\": \"0\" },       //required\n                                  { \"name\" : \"handler\", \"value\": \"PPM\" },\n                                  { \"name\" : \"partyId\", \"value\": \"45616\" } ] },       //required\n                   { \"action\" : \"New Item\",\n                     \"values\" : [ { \"name\" : \"description\", \"value\" : \"Ring outer case.\" },\n                                  { \"name\" : \"objectNo\", \"value\": \"53416\" },\n                                  { \"name\" : \"policyObjectId\", \"value\": \"77107\" },       //required\n                                  { \"name\" : \"riskNo\", \"value\": \"2\" },       //required\n                                  { \"name\" : \"subriskNo\", \"value\": \"0\" },       //required\n                                  { \"name\" : \"status\", \"value\": \"OP\" },       //required\n                                  { \"name\" : \"handler\", \"value\": \"PPM\" },       //required\n                                  { \"name\" : \"itemType\", \"value\": \"CO\" },       //required\n                                  { \"name\" : \"subitemType\", \"value\": \"100\" },\n                                  { \"name\" : \"currencyCode\", \"value\": \"EUR\" },      //required\n                                  { \"name\" : \"currencyEstimate\", \"value\": \"100\" },\n                                  { \"name\" : \"estimate\", \"value\": \"1000\" } ] },      //required\n                   { \"action\" : \"New SubCase\",\n                     \"values\" : [ { \"name\" : \"status\", \"value\": \"OP\" },      //required\n                                  { \"name\" : \"handler\", \"value\": \"PPM\" },      //required\n                                  { \"name\" : \"coverDecision\", \"value\": \"Y\" },  //required\n                                  { \"name\" : \"description\", \"value\": \"Cat is still alive.\" },\n                                  { \"name\" : \"subcaseType\", \"value\": \"002\" } ] },      //required\n                   { \"action\" : \"New SubClaim Item\",\n                     \"values\" : [ { \"name\" : \"description\", \"value\" : \"Ring inner case.\" },\n                                  { \"name\" : \"objectNo\", \"value\": \"53416\" },\n                                  { \"name\" : \"policyObjectId\", \"value\": \"77107\" },      //required\n                                  { \"name\" : \"riskNo\", \"value\": \"2\" },      //required\n                                  { \"name\" : \"subriskNo\", \"value\": \"0\" },      //required\n                                  { \"name\" : \"status\", \"value\": \"OP\" },      //required\n                                  { \"name\" : \"handler\", \"value\": \"PPM\" },      //required\n                                  { \"name\" : \"itemType\", \"value\": \"CO\" },      //required\n                                  { \"name\" : \"subitemType\", \"value\": \"100\" },\n                                  { \"name\" : \"currencyCode\", \"value\": \"EUR\" },      //required\n                                  { \"name\" : \"currencyEstimate\", \"value\": \"1320\" },\n                                  { \"name\" : \"estimate\", \"value\": \"1320\" } ] } ] }      //required\n```\n```json\n{ \"actions\" : [ { \"action\" : \"Adjust Event\",\n                     \"values\" : [ { \"name\" : \"claimEventNo\", \"value\" : \"1768\" },\n                                  { \"name\" : \"incidentDescription\", \"value\" : \"Destroyed house\" }] },\n                   { \"action\" : \"Adjust Case\",\n                     \"values\" : [ { \"name\" : \"claimCaseNo\", \"value\" : \"1848\" },\n                                  { \"name\" : \"lossOfBonus\", \"value\": \"Y\" } ] },\n                   { \"action\" : \"Adjust SubCase\",\n                     \"values\" : [ { \"name\" : \"claimCaseNo\", \"value\" : \"3800\" },\n                                  { \"name\" : \"claimSubcaseNo\", \"value\": \"1277\" },\n                                  { \"name\" : \"description\", \"value\": \"Cat is happy.\" } ] },\n                   { \"action\" : \"Adjust Item\",\n                     \"values\" : [ { \"name\" : \"claimItemNo\", \"value\" : \"2579\" },\n                                  { \"name\" : \"description\", \"value\": \"Diamond necklace.\" } ] },\n                   { \"action\" : \"Adjust Answer\",\n                     \"values\" : [ { \"name\" : \"claimCaseNo\", \"value\" : \"1848\" },\n                                  { \"name\" : \"claimSubcaseNo\", \"value\" : \"203\" },\n                                  { \"name\" : \"questionCode\", \"value\" : \"32\" },\n                                  { \"name\" : \"answerValue\", \"value\": \"2\" } ] } ] }\n                   { \"action\" : \"Custom Action\",\n                     \"values\" : [ { \"name\" : \"claimEventNo\", \"value\" : \"1582\" },\n                                  { \"name\" : \"customField\", \"value\": \"Custom value.\" } ] },\n```\n\n\n",
        "operationId": "postTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest_TransControl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "description": "Link to created resource",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimEvent_TransControl"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-payments": {
      "get": {
        "tags": [
          "Claim payment endpoints"
        ],
        "summary": "Get claim payments",
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimSubcaseNo",
            "in": "query",
            "description": "Claim subcase number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponsePayment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Claim payment endpoints"
        ],
        "summary": "Create claim payment with payment items",
        "operationId": "createPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment_PaymentPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "Link to created resource",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponsePayment_PaymentPost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-payments/generate-bulk": {
      "post": {
        "tags": [
          "Claim payment endpoints"
        ],
        "summary": "Create payments for a specific claim case/subcase number.",
        "description": "Uses the claim case or subcase number to find the relevant information like account no, payment method, payment instruction. \nPayments are made to the receiver on the claim item. In case of receiver not added on the claim item, the payment will be defaulted to the claimant. \nThe payment method & payment instruction added on the account is used for the quick payment. In case these values are not available for the account,the payment information is taken from the site preference.",
        "operationId": "generatePayments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePaymentsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponsePayment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-items": {
      "get": {
        "tags": [
          "Claim item endpoints"
        ],
        "summary": "Find claim items for a given claim case or subcase",
        "operationId": "getClaimItems",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimSubcaseNo",
            "in": "query",
            "description": "Claim subcase number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Claim item endpoints"
        ],
        "summary": "Create claim item for the claim case / subcase",
        "operationId": "postClaimItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimItem_ClaimItemPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "Link to created resource",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimItem_ClaimItemPost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-cases/{claimCaseNo}/close": {
      "post": {
        "tags": [
          "Claim Case endpoints"
        ],
        "summary": "Close claim for a specific claim case number.",
        "description": "Uses the claim case number to find the relevant information like open sub claims and open service supplier cases. \nClaim is not closed if there are open sub claims or open service supplier cases. \nIn case of paid claim items on the claim, the claim is closed. \nIn case of open item, the estimate is updated to 0 and the item is closed before closing the claim. \nClaim is closed even if third party exists.",
        "operationId": "closeClaimCase",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimCase_ClaimCasePost"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/bulk": {
      "post": {
        "tags": [
          "Bulk API operations endpoint"
        ],
        "summary": "API for bulk operations ",
        "operationId": "performBulkOperations",
        "requestBody": {
          "description": "Bulk operations payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkApiRequestPayloadMain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "Link to created resource",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseBulkApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/tasklists/{id}": {
      "get": {
        "tags": [
          "Claim tasklist endpoints"
        ],
        "summary": "Finds the specific claim tasklist based on the id",
        "operationId": "getTasklist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tasklist id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseTasklist"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Claim tasklist endpoints"
        ],
        "summary": "Update only specified fields of tasklist resource.",
        "operationId": "patchTasklist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "type": "object",
                "description": "Fields with values to be updated"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/timeline": {
      "get": {
        "tags": [
          "Claim timeline resource endpoints"
        ],
        "summary": "Finds claim timeline for a given case and/or sub-case",
        "operationId": "getTimelines",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimSubcaseNo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "timelineType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseTimeline"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/third-parties/{id}": {
      "get": {
        "tags": [
          "Third Party endpoints"
        ],
        "summary": "Get third party of claim case by id.",
        "operationId": "getThirdParty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of third party",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimThirdParty"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/third-parties/metadata": {
      "get": {
        "tags": [
          "Third Party endpoints"
        ],
        "summary": "Returns links to various metadata to be used when working with third parties of claim.",
        "operationId": "getMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseThirdPartyMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/tasklists/metadata": {
      "get": {
        "tags": [
          "Claim tasklist endpoints"
        ],
        "summary": "Returns links to various Metadata to be used when working with claim tasklist",
        "operationId": "getMetadata_1",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseTasklistMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/receivers": {
      "get": {
        "tags": [
          "Receiver endpoints"
        ],
        "summary": "Get claim receivers for a given case and/or sub-case based on the role",
        "operationId": "getReceivers",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case no",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimSubcaseNo",
            "in": "query",
            "description": "Claim subcase No",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Claim role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseReceiver"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/questions": {
      "get": {
        "tags": [
          "Claim Questions endpoints"
        ],
        "summary": "Finds claim questions for a given case and/or subcase",
        "operationId": "getClaimQuestions",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimSubcaseNo",
            "in": "query",
            "description": "Claim subcase number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseQuestion"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/questions/references": {
      "get": {
        "tags": [
          "Claim Questions endpoints"
        ],
        "summary": "Finds claim question references using table name and code",
        "operationId": "getClaimQuestionReferences",
        "parameters": [
          {
            "name": "tableName",
            "in": "query",
            "description": "Table name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimQuestionReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/questions/metadata": {
      "get": {
        "tags": [
          "Claim Questions endpoints"
        ],
        "summary": "Returns links to various metadata to be used when working with claim questions.",
        "operationId": "getMetadata_2",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseQuestionMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/overview": {
      "get": {
        "tags": [
          "Overview endpoints"
        ],
        "summary": "Get overview of claims for a given household or party",
        "operationId": "getOverview",
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party id. Can be household or party id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "currencyCode",
            "in": "query",
            "description": "Currency code, e.g. EUR. Used to convert total money amounts to expected currency.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rateType",
            "in": "query",
            "description": "Rate type for a center code. Optional parameter. Default is 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Format: property(:asc|desc). Default order is ascending.\nUsage example: ...?sort=status:desc,claimCaseNo:asc\n",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": ""
              }
            }
          },
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Identification number for Claim Case. Exact number search.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimCaseNoAlt",
            "in": "query",
            "description": "Identification number for Claim Case Alt. Partial text search.",
            "required": false,
            "schema": {
              "maxLength": 30,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "incidentDate",
            "in": "query",
            "description": "The date and time the event took place. Used to find claim cases that took place around the same time and to link claim events together into a major event (catastrophe). Searches on date; time portion is ignored/optional.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "claimClass",
            "in": "query",
            "description": "Classification code for claim. This code  will be used to determine what kind of questions that should be set up for this claim and what tasks to perform. The value of this code is defaulted by a user(site specific), but can be overwritten. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "claimClassDescription",
            "in": "query",
            "description": "Classification for claim. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsibilityPercent",
            "in": "query",
            "description": "Responsibility percent. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responsibilityPercentDescription",
            "in": "query",
            "description": "Responsibility percent description. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Identification of the status of the claim case.  This code indicates whether the claim case is 'notified', 'open', 'closed', 'reopened', 'declined  and closed' or 'opened in error and closed'. This is a system code that can not be extended with new types. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusDescription",
            "in": "query",
            "description": "Description of the status of the claim case. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productLineDescription",
            "in": "query",
            "description": "Product line description. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyObjectDescription",
            "in": "query",
            "description": "Short policy object description. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyHolderName",
            "in": "query",
            "description": "Constructed from forename, middle name and surname, to be used for internal displays. Partial text search.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaim"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/overview/profile": {
      "get": {
        "tags": [
          "Overview endpoints"
        ],
        "summary": "Get claim profile for a given household or party",
        "operationId": "getOverviewProfile",
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party id. Can be household or party id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "currencyCode",
            "in": "query",
            "description": "Currency code, e.g. EUR. Used to convert total money amounts to expected currency.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rateType",
            "in": "query",
            "description": "Rate type for a center code",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimsProfile"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/overview/payments": {
      "get": {
        "tags": [
          "Overview endpoints"
        ],
        "summary": "Get overview of claims payments for a given household or party",
        "operationId": "getOverviewPayments",
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Customer id. Can be household or party id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimPayment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/me/claim-cases": {
      "get": {
        "tags": [
          "Claim Case endpoints"
        ],
        "summary": "Get own claim cases by claim event.",
        "operationId": "getMyClaimCases",
        "parameters": [
          {
            "name": "claimEventNo",
            "in": "query",
            "description": "Claim event No",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimCase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/me/claim-cases/{claimCaseNo}": {
      "get": {
        "tags": [
          "Claim Case endpoints"
        ],
        "summary": "Get own claim case by claim case number.",
        "operationId": "getMyClaimCase",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "path",
            "description": "Claim case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimCase"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-type-combinations": {
      "get": {
        "tags": [
          "Claim type combination endpoints"
        ],
        "summary": "Find claim type combinations",
        "operationId": "getClaimTypeCombinations",
        "parameters": [
          {
            "name": "productLineId",
            "in": "query",
            "description": "Product line id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Event type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "causeType",
            "in": "query",
            "description": "Cause type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subcauseType",
            "in": "query",
            "description": "Subcause type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimTypeCombinations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-subcases": {
      "get": {
        "tags": [
          "Claim Subcase endpoints"
        ],
        "summary": "Get claim subcases for a given claim case number.",
        "operationId": "getClaimSubcases",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimSubcase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-subcases/{claimSubcaseNo}": {
      "get": {
        "tags": [
          "Claim Subcase endpoints"
        ],
        "summary": "Get claim subcase by claim subcase number.",
        "operationId": "getClaimSubcase",
        "parameters": [
          {
            "name": "claimSubcaseNo",
            "in": "path",
            "description": "Claim subcase number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimSubcase"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-subcases/metadata": {
      "get": {
        "tags": [
          "Claim Subcase endpoints"
        ],
        "summary": "Returns links to various metadata to be used when working with claim subcases.",
        "operationId": "getMetadata_3",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseClaimSubcaseMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-payments/{claimPaymentNo}": {
      "get": {
        "tags": [
          "Claim payment endpoints"
        ],
        "summary": "Get claim payment",
        "operationId": "getPayment",
        "parameters": [
          {
            "name": "claimPaymentNo",
            "in": "path",
            "description": "Claim payment number (account item number)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponsePayment"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-payments/metadata": {
      "get": {
        "tags": [
          "Claim payment endpoints"
        ],
        "summary": "Returns links to various metadata to be used when working with claim payment.",
        "operationId": "getMetadata_4",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponsePaymentMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-payment-items": {
      "get": {
        "tags": [
          "Claim payment item endpoints"
        ],
        "summary": "Get items of claim payment",
        "operationId": "getPaymentItems",
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "description": "Id that links payment (account item) to payment items.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponsePaymentItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-items/metadata": {
      "get": {
        "tags": [
          "Claim item endpoints"
        ],
        "summary": "Returns links to various Metadata to be used when working with claim items.",
        "operationId": "getMetadata_5",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseClaimItemMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-item-type-combinations": {
      "get": {
        "tags": [
          "Claim item type combination endpoints"
        ],
        "summary": "Find claim item type combinations",
        "operationId": "getClaimItemTypeCombinations",
        "parameters": [
          {
            "name": "claimClass",
            "in": "query",
            "description": "Claim class to search for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemType",
            "in": "query",
            "description": "Item type to search for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subitemType",
            "in": "query",
            "description": "Sub item type to search for",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimItemTypeCombinations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-events/{claimEventNo}": {
      "get": {
        "tags": [
          "Claim event resource endpoints"
        ],
        "summary": "Get claim event by claim event number",
        "operationId": "getClaimEvent",
        "parameters": [
          {
            "name": "claimEventNo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimEvent"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-events/metadata": {
      "get": {
        "tags": [
          "Claim event resource endpoints"
        ],
        "summary": "returns links to various metadata to be used when working with claim events",
        "operationId": "getMetadata_6",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseClaimEventMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-cases": {
      "get": {
        "tags": [
          "Claim Case endpoints"
        ],
        "summary": "Get claim cases for a given party and/or claim event.",
        "operationId": "getClaimCases",
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "claimEventNo",
            "in": "query",
            "description": "Claim event No",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Result page you want to retrieve (1..N)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 25
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimCase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-cases/{claimCaseNo}": {
      "get": {
        "tags": [
          "Claim Case endpoints"
        ],
        "summary": "Get claim case by claim case number.",
        "operationId": "getClaimCase",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "path",
            "description": "Claim case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "ETag": {
                "description": "Version tag",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleResultResponseClaimCase"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-cases/metadata": {
      "get": {
        "tags": [
          "Claim Case endpoints"
        ],
        "summary": "Returns links to various metadata to be used when working with claim cases.",
        "operationId": "getMetadata_7",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponseClaimCaseMetadataLinks"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/claim-case-subobjects": {
      "get": {
        "tags": [
          "Claim case subobjects endpoint"
        ],
        "summary": "Get claim case subobjects by claim case number",
        "operationId": "getClaimCaseSubobjects",
        "parameters": [
          {
            "name": "claimCaseNo",
            "in": "query",
            "description": "Claim case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Cache-Control": {
                "description": "max-age=60",
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseClaimCaseSubobject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BulkApiOperationRequestPayload": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation Id, is useful to identify the response of this operation in the entire bulk operations response. Recommended to be unique."
          },
          "method": {
            "type": "string",
            "description": "HTTP request method, the supported request methods are POST, PUT, PATCH, and DELETE."
          },
          "path": {
            "type": "string",
            "description": "Path, it should be the same URI on individual REST endpoint which is given in the REST documentation."
          },
          "pathParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Path Parameters, are key value pairs. Value to the path variables available in the individual endpoint URI should be given here."
            },
            "description": "Path Parameters, are key value pairs. Value to the path variables available in the individual endpoint URI should be given here."
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "description": "Model documentation for Bulk API operation payload."
      },
      "BulkApiOperationResponse": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id, which is the same operation id given on individual operation in the request payload."
          },
          "response": {
            "type": "object",
            "description": "Individual operation response."
          },
          "statusCode": {
            "type": "integer",
            "description": "Http status code.",
            "format": "int32"
          },
          "etag": {
            "type": "string"
          }
        },
        "description": "Model documentation for Bulk API operation response."
      },
      "BulkApiRequestPayloadMain": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "description": "List of operations.",
            "items": {
              "$ref": "#/components/schemas/BulkApiOperationRequestPayload"
            }
          }
        },
        "description": "Model documentation for Bulk API operations payload."
      },
      "BulkApiResponse": {
        "type": "object",
        "properties": {
          "successfulOperationCount": {
            "type": "integer",
            "description": "Successful operations count.",
            "format": "int32"
          },
          "unsuccessfulOperationCount": {
            "type": "integer",
            "description": "Unsuccessful operations count.",
            "format": "int32"
          },
          "operations": {
            "type": "array",
            "description": "Bulk operation response.",
            "items": {
              "$ref": "#/components/schemas/BulkApiOperationResponse"
            }
          }
        },
        "description": "Model documentation for Bulk API operations response."
      },
      "Claim": {
        "required": [
          "claimCaseNo",
          "claimCaseNoAlt"
        ],
        "type": "object",
        "properties": {
          "claimCaseNo": {
            "type": "integer",
            "description": "Identification number for Claim Case",
            "format": "int64"
          },
          "claimCaseNoAlt": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "1662"
          },
          "partyId": {
            "type": "integer",
            "description": "Identification of the party.",
            "format": "int64"
          },
          "incidentDate": {
            "type": "string",
            "description": "The date and time the event took place. Used  to find claim cases that took place around the  same time and to link claim events together  into a major event (catastrophe).",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "claimClass": {
            "type": "string",
            "description": "Classification code for claim. This code  will be used to determine what kind of questions that should be set up for this claim and what tasks to perform. The value of this code is defaulted by a user(site specific), but can be overwritten",
            "example": "PET2"
          },
          "claimClassDescription": {
            "type": "string",
            "description": "Classification for claim."
          },
          "responsibilityPercent": {
            "type": "string"
          },
          "responsibilityPercentDescription": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Identification of the status of the claim case.  This code indicates whether the claim case is 'notified', 'open', 'closed', 'reopened', 'declined  and closed' or 'opened in error and closed'. This is a system code that can not be extended with new types.",
            "example": "OP"
          },
          "statusDescription": {
            "type": "string",
            "description": "Description of the status of the claim case."
          },
          "description": {
            "type": "string",
            "description": "Free text describing the claim case.",
            "example": "Dog pet sickness"
          },
          "declineReason": {
            "type": "string",
            "description": "Why the claim is declined. Free text describing the reason for the declinature."
          },
          "productLineDescription": {
            "type": "string",
            "description": "Product line description"
          },
          "policyObjectDescription": {
            "type": "string",
            "description": "Short policy object description"
          },
          "policyHolderName": {
            "type": "string",
            "description": "Constructed from forename, middlename and surname, to be used for internal displays. "
          },
          "amount": {
            "type": "number",
            "description": "Sum of payments and remaining estimate for claim case.",
            "example": 100
          },
          "Claim Event No": {
            "type": "integer",
            "description": "Identification number for Claim Event.",
            "format": "int64"
          }
        },
        "description": "Claim model documentation for customer service workbench"
      },
      "ClaimCase": {
        "required": [
          "claimCaseNo",
          "claimCaseNoAlt",
          "claimCaseNoSort",
          "claimEventNo",
          "handler",
          "informerType",
          "lossOfBonus",
          "notificationDate",
          "partyId",
          "policyLineId",
          "policyLineNo",
          "riskNo",
          "status",
          "subriskNo"
        ],
        "type": "object",
        "properties": {
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique key for Claim Case No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Reference to a unique claim event. The event holds information about incident date and place",
            "format": "int64",
            "example": 1582
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the claim case.",
            "example": "Dog pet sickness"
          },
          "partyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a customer. This number is  the unique key for a customer registered in the  central name/customer entities. This number is  used through out the TIA application to show the total business (correspondence) with a person  or company.",
            "format": "int64",
            "example": 45241
          },
          "policyLineNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a policy line. This is a  reference to a specific policy line (policy or cover) that the customer has written with  the insurance company. This could (depending  on how products are designed/setup in the",
            "format": "int64",
            "example": 5031669
          },
          "policyLineId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique identification of a policy_line (current or  historical). The version might beobsolete due to changes made to the policy line after this item  was created.",
            "format": "int64",
            "example": 77622
          },
          "riskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the main risk that covers this  claim case. This is a reference to a specific risk  defined in the product editor for the chosen policy  line. This could be eg liability, theft, fire,  content, cargo, crew, etc.",
            "format": "int64",
            "example": 2
          },
          "subriskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the main subrisk that covers this claim case. This is a reference to a specific  subrisk defined in the product editor for  the chosen policy line. This could be e.g. liability, theft, fire, content, cargo, crew, etc.",
            "format": "int64",
            "example": 1
          },
          "claimClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for claim. This code  will be used to determine what kind of questions that should be set up for this claim and what tasks to perform. The value of this code is defaulted by a user(site specific), but can be overwritten",
            "example": "PET2"
          },
          "questionClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for questions. This code  will be used to determine what kind of questions, that is needed to asked for this claim case. The  value of this code is defaulted by the cla_class,  but can be overwritten by the user.",
            "example": "PQ2"
          },
          "questionStatus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code indicating whether the series of question has  been completed. If a mandatory question has not been  answered, this status is set to NC (not completed)  otherwise OK. Payments can not be made on a case  when this status is NC.",
            "example": "OK"
          },
          "tasklistClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for tasklist. This code  will be used to determine what kind of tasks needs  to be performed for this claim case. The value of  this code is defaulted by the claim_class, but can  be overwritten by the user.",
            "example": "PT2"
          },
          "customerStatus": {
            "maximum": 99,
            "type": "integer",
            "description": "Status of customer on this claim case. Can be used  as fraud detection level, etc. The value of this  field is typically set from a business function.",
            "format": "int64",
            "example": 1
          },
          "status": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the status of the claim case.  This code indicates whether the claim case is 'notified', 'open', 'closed', 'reopened', 'declined  and closed' or 'opened in error and closed'. This is a system code that can not be extended with new types.",
            "example": "OP"
          },
          "informerType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code which identifies the type of informer. This  could be 'the insured', 'family', 'third party', etc. The code is user defined and set up in the  general reference table.",
            "example": "IP"
          },
          "informerName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Name of the informer. Used to register the name of  the informer if the informer is not the insured. This could be a person or a company.",
            "example": "xxx"
          },
          "informerContact": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Who and how to contact. If informer is a company, this field could be used to register name of  contact person, phone no., extension, best contact form and period of time, etc.",
            "example": "99999999"
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the person who is handling the claim case. This is the main responsible person. Lower parts of the claim case (claim items,  estimates) might be delegated to other users.",
            "example": "CCH"
          },
          "statisticalCode1": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 1 used for statistical purpose for reporting to DTI or other authorities. The code is user defined  and set up in the general reference table."
          },
          "statisticalCode2": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 2 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table."
          },
          "statisticalCode3": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 3 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table."
          },
          "reinsuranceNo": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Reference to facultative reinsurance program(s), this claim case is to be covered by. The value of this field is defaulted by the system and can hold more reinsurance programs separated by ;"
          },
          "lossOfBonus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Does this claim have any effect on the renewal of  the policy line in the matter of bonus loss? Y (checked) = Loss of bonus. N (unchecked) = No loss of bonus. This field should be seen together with the responsibility.",
            "example": "Y"
          },
          "declineStatus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Indicates if a claim case has been declined and the way of declining the claim case."
          },
          "declineReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Why the claim is declined. Free text describing the reason for the declinature."
          },
          "notificationDate": {
            "type": "string",
            "description": "The date and time the claim case was notified (reported to the insurance company). By default this field is set to today's day but it can be overwritten. The date can not be in future but can be in the part (because of handling errors",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "claimReasonDiscoverDate": {
            "type": "string",
            "description": "The date and time the incident was discovered by the customer. This date can not be part of notification. It can not be in the future.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "firstOpenDate": {
            "type": "string",
            "description": "The date the claim case was opened for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "firstCloseDate": {
            "type": "string",
            "description": "The date the claim case was closed for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenDate": {
            "type": "string",
            "description": "The last date the claim case was reopened. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Reason why claim case was reopened. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "example": "1"
          },
          "recloseDate": {
            "type": "string",
            "description": "The date the claim case was (re-)closed the last time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "hoursSpendOnClaimCaseHandling": {
            "type": "number",
            "description": "Time spend on handling this claim case. This is a field that the claim handler can update as the claim case is worked with. The field is used for statistical purpose for monitoring internal service levels/targets."
          },
          "claimType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "CRG"
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "responsibilityPercent": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string"
          },
          "objectNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 51231
          },
          "policyObjectId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 74922
          },
          "objectId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "CAT2213459"
          },
          "itemClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "PI1"
          },
          "closeCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "AUT"
          },
          "claimCaseNoAlt": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "1662"
          },
          "claimCaseNoSort": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "000000000000000000000000001682"
          },
          "scorecardId": {
            "maximum": 1000000000000000000,
            "type": "integer",
            "format": "int64",
            "example": 123456789012345680
          },
          "scorecardScore": {
            "type": "number",
            "example": 10
          },
          "investigation": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "ONGOING"
          },
          "categoryResult": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "MEDIUM"
          },
          "processName": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "AUTOMATIC"
          },
          "assignProfileId": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "example": "CLAIM"
          },
          "coiAgreementId": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Coinsurance agreement ID"
          },
          "coiLeadCaseNo": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "Coinsurance followers agreement leader case number"
          },
          "recoveryPotential": {
            "type": "boolean",
            "description": "True if claim has recovery potential. False if claim does not have recovery potential. NULL if recovery potential is undefined or not applicable.",
            "example": true
          },
          "deductible": {
            "type": "number",
            "description": "Excess amount for policy object.",
            "example": 100
          },
          "filedBy": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "The communication channel used to notify insurer about the loss.",
            "example": "PHO"
          }
        },
        "description": "Model documentation for Claim Case"
      },
      "ClaimCaseMetadataLinks": {
        "type": "object",
        "properties": {
          "claimClasses": {
            "type": "string"
          },
          "questionClasses": {
            "type": "string"
          },
          "taskListClasses": {
            "type": "string"
          },
          "statusTypes": {
            "type": "string"
          },
          "informerTypes": {
            "type": "string"
          },
          "statisticalCodes1": {
            "type": "string"
          },
          "statisticalCodes2": {
            "type": "string"
          },
          "statisticalCodes3": {
            "type": "string"
          },
          "lossOfBonusTypes": {
            "type": "string"
          },
          "declineCodes": {
            "type": "string"
          },
          "responsibilityPercents": {
            "type": "string"
          },
          "itemClasses": {
            "type": "string"
          },
          "closeCodes": {
            "type": "string"
          },
          "investigations": {
            "type": "string"
          },
          "scorecardCategoryResults": {
            "type": "string"
          },
          "filedByTypes": {
            "type": "string"
          }
        }
      },
      "ClaimCaseSubobject": {
        "required": [
          "claimCaseNo",
          "id",
          "policyObjectId",
          "policySubobjectNo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim case subobject, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "A unique identification of a claim case.",
            "format": "int64",
            "example": 3882
          },
          "policyObjectId": {
            "type": "integer",
            "description": "Identification of the set of policy subobject columns belonging to a version of an policy object.",
            "format": "int64",
            "example": 76126
          },
          "policySubobjectNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Policy subobject number, fixed across versions.",
            "format": "int64",
            "example": 21
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "subobjectName": {
            "type": "string"
          },
          "subobjectTypeId": {
            "type": "string"
          }
        },
        "description": "Model documentation for claim case subobject"
      },
      "ClaimCase_ClaimCasePost": {
        "required": [
          "claimCaseNo",
          "claimCaseNoAlt",
          "claimCaseNoSort",
          "claimEventNo",
          "handler",
          "informerType",
          "lossOfBonus",
          "notificationDate",
          "partyId",
          "policyLineId",
          "policyLineNo",
          "riskNo",
          "status",
          "subriskNo"
        ],
        "type": "object",
        "properties": {
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique key for Claim Case No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Reference to a unique claim event. The event holds information about incident date and place",
            "format": "int64",
            "example": 1582
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the claim case.",
            "example": "Dog pet sickness"
          },
          "partyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a customer. This number is  the unique key for a customer registered in the  central name/customer entities. This number is  used through out the TIA application to show the total business (correspondence) with a person  or company.",
            "format": "int64",
            "example": 45241
          },
          "policyLineNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a policy line. This is a  reference to a specific policy line (policy or cover) that the customer has written with  the insurance company. This could (depending  on how products are designed/setup in the",
            "format": "int64",
            "example": 5031669
          },
          "policyLineId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique identification of a policy_line (current or  historical). The version might beobsolete due to changes made to the policy line after this item  was created.",
            "format": "int64",
            "example": 77622
          },
          "riskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the main risk that covers this  claim case. This is a reference to a specific risk  defined in the product editor for the chosen policy  line. This could be eg liability, theft, fire,  content, cargo, crew, etc.",
            "format": "int64",
            "example": 2
          },
          "subriskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the main subrisk that covers this claim case. This is a reference to a specific  subrisk defined in the product editor for  the chosen policy line. This could be e.g. liability, theft, fire, content, cargo, crew, etc.",
            "format": "int64",
            "example": 1
          },
          "claimClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for claim. This code  will be used to determine what kind of questions that should be set up for this claim and what tasks to perform. The value of this code is defaulted by a user(site specific), but can be overwritten",
            "example": "PET2"
          },
          "questionClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for questions. This code  will be used to determine what kind of questions, that is needed to asked for this claim case. The  value of this code is defaulted by the cla_class,  but can be overwritten by the user.",
            "example": "PQ2"
          },
          "questionStatus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code indicating whether the series of question has  been completed. If a mandatory question has not been  answered, this status is set to NC (not completed)  otherwise OK. Payments can not be made on a case  when this status is NC.",
            "example": "OK"
          },
          "tasklistClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for tasklist. This code  will be used to determine what kind of tasks needs  to be performed for this claim case. The value of  this code is defaulted by the claim_class, but can  be overwritten by the user.",
            "example": "PT2"
          },
          "customerStatus": {
            "maximum": 99,
            "type": "integer",
            "description": "Status of customer on this claim case. Can be used  as fraud detection level, etc. The value of this  field is typically set from a business function.",
            "format": "int64",
            "example": 1
          },
          "status": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the status of the claim case.  This code indicates whether the claim case is 'notified', 'open', 'closed', 'reopened', 'declined  and closed' or 'opened in error and closed'. This is a system code that can not be extended with new types.",
            "example": "OP"
          },
          "informerType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code which identifies the type of informer. This  could be 'the insured', 'family', 'third party', etc. The code is user defined and set up in the  general reference table.",
            "example": "IP"
          },
          "informerName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Name of the informer. Used to register the name of  the informer if the informer is not the insured. This could be a person or a company.",
            "example": "xxx"
          },
          "informerContact": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Who and how to contact. If informer is a company, this field could be used to register name of  contact person, phone no., extension, best contact form and period of time, etc.",
            "example": "99999999"
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the person who is handling the claim case. This is the main responsible person. Lower parts of the claim case (claim items,  estimates) might be delegated to other users.",
            "example": "CCH"
          },
          "statisticalCode1": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 1 used for statistical purpose for reporting to DTI or other authorities. The code is user defined  and set up in the general reference table."
          },
          "statisticalCode2": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 2 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table."
          },
          "statisticalCode3": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 3 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table."
          },
          "reinsuranceNo": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Reference to facultative reinsurance program(s), this claim case is to be covered by. The value of this field is defaulted by the system and can hold more reinsurance programs separated by ;"
          },
          "lossOfBonus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Does this claim have any effect on the renewal of  the policy line in the matter of bonus loss? Y (checked) = Loss of bonus. N (unchecked) = No loss of bonus. This field should be seen together with the responsibility.",
            "example": "Y"
          },
          "declineStatus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Indicates if a claim case has been declined and the way of declining the claim case."
          },
          "declineReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Why the claim is declined. Free text describing the reason for the declinature."
          },
          "notificationDate": {
            "type": "string",
            "description": "The date and time the claim case was notified (reported to the insurance company). By default this field is set to today's day but it can be overwritten. The date can not be in future but can be in the part (because of handling errors",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "claimReasonDiscoverDate": {
            "type": "string",
            "description": "The date and time the incident was discovered by the customer. This date can not be part of notification. It can not be in the future.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "firstOpenDate": {
            "type": "string",
            "description": "The date the claim case was opened for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "firstCloseDate": {
            "type": "string",
            "description": "The date the claim case was closed for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenDate": {
            "type": "string",
            "description": "The last date the claim case was reopened. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Reason why claim case was reopened. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "example": "1"
          },
          "recloseDate": {
            "type": "string",
            "description": "The date the claim case was (re-)closed the last time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "hoursSpendOnClaimCaseHandling": {
            "type": "number",
            "description": "Time spend on handling this claim case. This is a field that the claim handler can update as the claim case is worked with. The field is used for statistical purpose for monitoring internal service levels/targets."
          },
          "claimType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "CRG"
          },
          "responsibilityPercent": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string"
          },
          "objectNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 51231
          },
          "policyObjectId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 74922
          },
          "objectId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "CAT2213459"
          },
          "itemClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "PI1"
          },
          "closeCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "AUT"
          },
          "claimCaseNoAlt": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "1662"
          },
          "claimCaseNoSort": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "example": "000000000000000000000000001682"
          },
          "scorecardId": {
            "maximum": 1000000000000000000,
            "type": "integer",
            "format": "int64",
            "example": 123456789012345680
          },
          "scorecardScore": {
            "type": "number",
            "example": 10
          },
          "investigation": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "ONGOING"
          },
          "categoryResult": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "MEDIUM"
          },
          "processName": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "AUTOMATIC"
          },
          "assignProfileId": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "example": "CLAIM"
          },
          "coiAgreementId": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Coinsurance agreement ID"
          },
          "coiLeadCaseNo": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "Coinsurance followers agreement leader case number"
          },
          "recoveryPotential": {
            "type": "boolean",
            "description": "True if claim has recovery potential. False if claim does not have recovery potential. NULL if recovery potential is undefined or not applicable.",
            "example": true
          },
          "deductible": {
            "type": "number",
            "description": "Excess amount for policy object.",
            "example": 100
          },
          "filedBy": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "The communication channel used to notify insurer about the loss.",
            "example": "PHO"
          }
        },
        "description": "Model documentation for Claim Case"
      },
      "ClaimEvent": {
        "required": [
          "claimEventNo",
          "eventType",
          "incidentDate"
        ],
        "type": "object",
        "properties": {
          "claimEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique key for Cla Event No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimMajorEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a major event (catastrophe).  If the claim event is part of a greather  event like storm, flod or earthquake it  could be linked togehter with other events  via this major event number.",
            "format": "int64",
            "example": 348
          },
          "eventType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "This code identifies the type of event that  took place. This could be 'accidental damage',  'motor breakdown', 'fire', 'personal accident',  'theft', etc. The code is userdefined and set up  in the general reference table.",
            "example": "PE2"
          },
          "causeType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify the causetype. What was  the cause or reason for the event to take place.  What was it that initiated the event. This could  be 'lightning', 'earthquake', 'explosion', 'frost',  'mugging', etc. The code is userdefined and set",
            "example": "PC3"
          },
          "subcauseType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify a subcausetype. This is  a secondary causetype used to identified what  caused the event. The code is userdefined and set  up in the general reference table.  This code together with event_type and cause_type",
            "example": "PS3"
          },
          "incidentDate": {
            "type": "string",
            "description": "The date and time the event took place. Used  to find claim cases that took place around the  same time and to link claim events together  into a major event (catastrophe).",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "isExactIncidentDate": {
            "type": "boolean",
            "description": "Is the incident date an exact date?",
            "example": true
          },
          "incidentDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Short description (free text) on what happend  at the time and place of the event.",
            "example": "Dog pet sickness"
          },
          "placeType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify the type of incident place.  This could be 'on the motorway', 'in a carpark',  'at home', 'at sea', 'in habour', etc. The code  is userdefined and set up in the general reference  table.",
            "example": "CAR"
          },
          "placeId": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "An identification code of the place of the incident.  This could be used for unique identification of  roads, crossings, buildings, post area, etc."
          },
          "placeDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the place where the incident  took place. This could be an address, a geographical  area (land or sea), etc.",
            "example": "vvvvv"
          },
          "longitude": {
            "type": "number",
            "description": "Geographic coordinate - longitude.",
            "example": 79101562500
          },
          "latitude": {
            "type": "number",
            "description": "Geographic coordinate - latitude.",
            "example": 206327842504
          },
          "address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A string representing an address returned by the map.",
            "example": "Arlit, Niger"
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "expectedFinishDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "lockedBy": {
            "maxLength": 269,
            "minLength": 0,
            "type": "string",
            "example": "TIA,hFSdhrhZxRkGzhC8vC4NKMhG3PysCnv58FHBZxNh17Z0L0Pm0ry4!30440767!1516968697528DefaultServer7101"
          },
          "claimNetRetentionCatastropheEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a Net Retention Catastrophe event. This is used to identify which claims are connected in a Net Retention Catastrophe event, and is used in the reinsurance module.",
            "format": "int64",
            "example": 62
          },
          "lockedDate": {
            "type": "string",
            "description": "the timestamp when the event was locked.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "cashCall": {
            "type": "boolean",
            "description": "Flag to mark the reinsurance cash call limit breach.",
            "example": true
          }
        },
        "description": "Model documentation for ClaimEvents"
      },
      "ClaimEventMetadataLinks": {
        "type": "object",
        "properties": {
          "eventTypes": {
            "type": "string"
          },
          "causeTypes": {
            "type": "string"
          },
          "subcauseTypes": {
            "type": "string"
          },
          "placeTypes": {
            "type": "string"
          }
        }
      },
      "ClaimEvent_TransControl": {
        "required": [
          "claimEventNo",
          "eventType",
          "incidentDate"
        ],
        "type": "object",
        "properties": {
          "claimEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique key for Cla Event No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimMajorEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a major event (catastrophe).  If the claim event is part of a greather  event like storm, flod or earthquake it  could be linked togehter with other events  via this major event number.",
            "format": "int64",
            "example": 348
          },
          "eventType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "This code identifies the type of event that  took place. This could be 'accidental damage',  'motor breakdown', 'fire', 'personal accident',  'theft', etc. The code is userdefined and set up  in the general reference table.",
            "example": "PE2"
          },
          "causeType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify the causetype. What was  the cause or reason for the event to take place.  What was it that initiated the event. This could  be 'lightning', 'earthquake', 'explosion', 'frost',  'mugging', etc. The code is userdefined and set",
            "example": "PC3"
          },
          "subcauseType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify a subcausetype. This is  a secondary causetype used to identified what  caused the event. The code is userdefined and set  up in the general reference table.  This code together with event_type and cause_type",
            "example": "PS3"
          },
          "incidentDate": {
            "type": "string",
            "description": "The date and time the event took place. Used  to find claim cases that took place around the  same time and to link claim events together  into a major event (catastrophe).",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "isExactIncidentDate": {
            "type": "boolean",
            "description": "Is the incident date an exact date?",
            "example": true
          },
          "incidentDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Short description (free text) on what happend  at the time and place of the event.",
            "example": "Dog pet sickness"
          },
          "placeType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify the type of incident place.  This could be 'on the motorway', 'in a carpark',  'at home', 'at sea', 'in habour', etc. The code  is userdefined and set up in the general reference  table.",
            "example": "CAR"
          },
          "placeId": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "An identification code of the place of the incident.  This could be used for unique identification of  roads, crossings, buildings, post area, etc."
          },
          "placeDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the place where the incident  took place. This could be an address, a geographical  area (land or sea), etc.",
            "example": "vvvvv"
          },
          "longitude": {
            "type": "number",
            "description": "Geographic coordinate - longitude.",
            "example": 79101562500
          },
          "latitude": {
            "type": "number",
            "description": "Geographic coordinate - latitude.",
            "example": 206327842504
          },
          "address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A string representing an address returned by the map.",
            "example": "Arlit, Niger"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "expectedFinishDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "lockedBy": {
            "maxLength": 269,
            "minLength": 0,
            "type": "string",
            "example": "TIA,hFSdhrhZxRkGzhC8vC4NKMhG3PysCnv58FHBZxNh17Z0L0Pm0ry4!30440767!1516968697528DefaultServer7101"
          },
          "claimNetRetentionCatastropheEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a Net Retention Catastrophe event. This is used to identify which claims are connected in a Net Retention Catastrophe event, and is used in the reinsurance module.",
            "format": "int64",
            "example": 62
          },
          "lockedDate": {
            "type": "string",
            "description": "the timestamp when the event was locked.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "cashCall": {
            "type": "boolean",
            "description": "Flag to mark the reinsurance cash call limit breach.",
            "example": true
          }
        },
        "description": "Model documentation for ClaimEvents"
      },
      "ClaimItem": {
        "required": [
          "claimCaseNo",
          "claimEventNo",
          "handler",
          "itemType",
          "riskNo",
          "status",
          "subriskNo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for Seq No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Reference to a unique claim event. The event holds information about incident date and place",
            "format": "int64",
            "example": 6210
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a claim case.",
            "format": "int64",
            "example": 6117
          },
          "claimSubcaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a claim subcase.",
            "format": "int64",
            "example": 2614
          },
          "claimItemNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification of item record. The Number is generated by the system and is used as reference to a single specific item. All historical data for the same item are held together by this number",
            "format": "int64",
            "example": 6657
          },
          "masterItemNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of the master item record corresponding to the leader's claim item no. It is used for automatically generating the claim items for the followers whenever the policy line behind the claim case has a coinsurance agreement attached to it. The reserves generated will not be editable by users.",
            "format": "int64",
            "example": 7128423423
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing an item or internal message for the use of the handlers involved in the case.",
            "example": "Veterinary fee"
          },
          "receiverPartyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a receiver this estimate (payment). This Number is the unique key for a person or  company registred in the central name entity. This Number is used through out the TIA application to",
            "format": "int64",
            "example": 150657
          },
          "objectNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a object. This is a reference to a specific insured object (a car FIAT PANDA 1000 registration Number ABC123, a house on Mainstreet, a ship 'The Good Hope', etc.) registred on a policy line. This is ofcause depended on how the product",
            "format": "int64",
            "example": 58777
          },
          "policyObjectId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique identification of a object (current or historical). The version might be obsolete due to changes made to the object after this item was created.",
            "format": "int64",
            "example": 84330
          },
          "objectId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Identification of an object eg registration no for a car, a house, a ship, civil registration code for a person or company, etc.",
            "example": "TIATIA"
          },
          "objectPrice": {
            "type": "number",
            "description": "This field can be used for calculating the estimate as new price depreciated over X Number of years. In that case this field could hold the new price or repair price.",
            "example": 100
          },
          "objectAge": {
            "type": "number",
            "description": "This field can be used for calculating the estimate as new price depreciated over X Number of years. In that case this field could hold the age of the item.",
            "example": 1
          },
          "riskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the risk that covers this claim item (estimate). This is a reference to a specific risk defined in the product editor for the chosen policy line. This could be eg liability, theft, fire, content, cargo, crew, etc.",
            "format": "int64",
            "example": 2
          },
          "subriskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the subrisk that covers this claim item (estimate). This is a reference to a specific subrisk defined in the product editor for the chosen policy line. This could be eg liability, theft, fire, content, cargo, crew, etc.",
            "format": "int64",
            "example": 0
          },
          "status": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the status of the claim item. This code indicates whether the claim item is 'notified', 'open', 'closed', 'reopened', 'declined and closed' or 'opened in error and closed'. This is a system code that can not be extented with new types.",
            "example": "NO"
          },
          "firstOpenDate": {
            "type": "string",
            "description": "The date the claim case was opened for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2019-11-11T19:32:28Z"
          },
          "firstCloseDate": {
            "type": "string",
            "description": "The date the claim case was closed for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2019-11-11T19:32:28Z"
          },
          "reopenDate": {
            "type": "string",
            "description": "The last date the claim case was reopened. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Why the claim case was reopened. Free text describing the reason for reopening the claim case. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "example": "Need more investigation"
          },
          "recloseDate": {
            "type": "string",
            "description": "The date the claim case was (re-)closed the last time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "hoursSpendOnClaimCaseHandling": {
            "type": "number",
            "description": "Time spend on handling this claim case. This is a field that the claim handler can update as the claim case is worked with. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "example": 1
          },
          "workgroup": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "FOR FUTURE USE !!! Identification of the department who is handling the claim item. This is the main responsible department.",
            "example": "A"
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the person who is handling the claim item. This is the main responsible person.",
            "example": "TIA"
          },
          "estimateDate": {
            "type": "string",
            "description": "The date from which the estimate has value (accounting or billing date). This date is defaulted with todays and cannot be overwritten by the user.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "newest": {
            "type": "boolean",
            "description": "Indicates if this record is the newest (current estimate) or a history record.",
            "example": true
          },
          "statisticalCode1": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 1 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table.",
            "example": "7"
          },
          "statisticalCode2": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 2 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table.",
            "example": "9"
          },
          "statisticalCode3": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 3 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table.",
            "example": "13"
          },
          "itemType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Type of item (estimate). Indicates what kind of amount the record contains eg 'replace', 'excess' (deductible), 'recovery', 'salvage', etc.",
            "example": "CO"
          },
          "subitemType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Type of subitem. Used for break-down of estimates eg 'painting', 'labour', 'specified items', 'injury code', etc.",
            "example": "012"
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency code that defines in what currency the item (estimate) is given e.g. USD, DEM, DKK, GBP, etc.",
            "example": "EUR"
          },
          "currencyEstimate": {
            "type": "number",
            "description": "The current estimate in currency. This field holds the estimate status of the item. The value of this field is entered by the user. If empty, the default value is 0.",
            "example": 100
          },
          "estimate": {
            "type": "number",
            "description": "The current estimate exchanged to functional currency. This field holds the estimate status of the item. The value of this field is calculated by the system on the basis of currency_estimate and exchange_rate.",
            "example": 100
          },
          "currencyDifference": {
            "type": "number",
            "description": "The diffence in currency estimate, this item from the previous one. This difference is used for booking in the General Ledger. The value of this field is calculated by the system.",
            "example": 100
          },
          "difference": {
            "type": "number",
            "description": "The diffence in estimate exchanged to functional currency, this item from the previous one. This difference is used for booking in the General Ledger. The value of this field is calculated by the system.",
            "example": 100
          },
          "exchangeRate": {
            "type": "number",
            "description": "Exchange rate used for calculating the difference in functional currency. The value of this field is set by a user function that determines which date should be used as basis for fetching the exchange rate from",
            "example": 100
          },
          "authorisedBy": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "This field is filled with the user id of the user who has authorised the item. If a user exceeds his/hers limit this field is not filled out. Only when this field is filled out it can be paid. The field is set be a user function that is called when",
            "example": "TIA"
          },
          "generalLedgerBatchNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "General Ledger (GL) batch Number. If this field is null, then the estimate has not yet been handled by the program that transfers estimate to the GL. When the estimate has been send to GL, this field is updated with",
            "format": "int64",
            "example": 0
          },
          "autoPaymentSetUp": {
            "type": "boolean",
            "description": "Code used for indicating to the payment function that this item should be set up automatically when creating a new payment. Temporary code that is cleaned by the payment function. Values are true and false.",
            "example": true
          },
          "role": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "1"
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "suppressReinsurance": {
            "type": "boolean",
            "example": true
          },
          "objectPercent": {
            "type": "number",
            "example": 3
          },
          "itemStartDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "itemEndDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "example": "2019-11-11T17:32:28Z"
          },
          "accountInterestMethod": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Interest calculation method used for interest calculations",
            "format": "int64",
            "example": 7128423423
          },
          "documentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "policyLineId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 89272
          }
        },
        "description": "Model documentation for Claim Items"
      },
      "ClaimItemMetadataLinks": {
        "type": "object",
        "properties": {
          "statusTypes": {
            "type": "string"
          },
          "statisticalCodes1": {
            "type": "string"
          },
          "statisticalCodes2": {
            "type": "string"
          },
          "statisticalCodes3": {
            "type": "string"
          },
          "itemTypes": {
            "type": "string"
          },
          "subitemTypes": {
            "type": "string"
          },
          "currencyCodes": {
            "type": "string"
          },
          "accountInterestMethods": {
            "type": "string"
          }
        }
      },
      "ClaimItemTypeCombinations": {
        "type": "object",
        "properties": {
          "claimClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for subCase. This code will be used to determine what kind of item types and subItem type that can be made for this subCase.",
            "example": "70"
          },
          "itemType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Type of item (estimate). Indicates what kind  of amount the record contains eg 'replace',  'excess' (deductible), 'recovery', 'salvage', etc.",
            "example": "RE"
          },
          "subitemType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Type of subitem. Used for break-down of estimates  eg 'painting', 'labour', 'specified items', 'injury code',  etc.",
            "example": "INI"
          },
          "siteId": {
            "type": "integer",
            "description": "The id of the site",
            "format": "int64",
            "example": 1
          }
        },
        "description": "Model documentation for ClaimItemTypeCombinations"
      },
      "ClaimItem_ClaimItemPost": {
        "required": [
          "claimCaseNo",
          "claimEventNo",
          "handler",
          "itemType",
          "riskNo",
          "status",
          "subriskNo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for Seq No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimEventNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Reference to a unique claim event. The event holds information about incident date and place",
            "format": "int64",
            "example": 6210
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a claim case.",
            "format": "int64",
            "example": 6117
          },
          "claimSubcaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a claim subcase.",
            "format": "int64",
            "example": 2614
          },
          "claimItemNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification of item record. The Number is generated by the system and is used as reference to a single specific item. All historical data for the same item are held together by this number",
            "format": "int64",
            "example": 6657
          },
          "masterItemNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of the master item record corresponding to the leader's claim item no. It is used for automatically generating the claim items for the followers whenever the policy line behind the claim case has a coinsurance agreement attached to it. The reserves generated will not be editable by users.",
            "format": "int64",
            "example": 7128423423
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing an item or internal message for the use of the handlers involved in the case.",
            "example": "Veterinary fee"
          },
          "receiverPartyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a receiver this estimate (payment). This Number is the unique key for a person or  company registred in the central name entity. This Number is used through out the TIA application to",
            "format": "int64",
            "example": 150657
          },
          "objectNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a object. This is a reference to a specific insured object (a car FIAT PANDA 1000 registration Number ABC123, a house on Mainstreet, a ship 'The Good Hope', etc.) registred on a policy line. This is ofcause depended on how the product",
            "format": "int64",
            "example": 58777
          },
          "policyObjectId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique identification of a object (current or historical). The version might be obsolete due to changes made to the object after this item was created.",
            "format": "int64",
            "example": 84330
          },
          "objectId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Identification of an object eg registration no for a car, a house, a ship, civil registration code for a person or company, etc.",
            "example": "TIATIA"
          },
          "objectPrice": {
            "type": "number",
            "description": "This field can be used for calculating the estimate as new price depreciated over X Number of years. In that case this field could hold the new price or repair price.",
            "example": 100
          },
          "objectAge": {
            "type": "number",
            "description": "This field can be used for calculating the estimate as new price depreciated over X Number of years. In that case this field could hold the age of the item.",
            "example": 1
          },
          "riskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the risk that covers this claim item (estimate). This is a reference to a specific risk defined in the product editor for the chosen policy line. This could be eg liability, theft, fire, content, cargo, crew, etc.",
            "format": "int64",
            "example": 2
          },
          "subriskNo": {
            "maximum": 999,
            "type": "integer",
            "description": "Identification of the subrisk that covers this claim item (estimate). This is a reference to a specific subrisk defined in the product editor for the chosen policy line. This could be eg liability, theft, fire, content, cargo, crew, etc.",
            "format": "int64",
            "example": 0
          },
          "status": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the status of the claim item. This code indicates whether the claim item is 'notified', 'open', 'closed', 'reopened', 'declined and closed' or 'opened in error and closed'. This is a system code that can not be extented with new types.",
            "example": "NO"
          },
          "firstOpenDate": {
            "type": "string",
            "description": "The date the claim case was opened for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2019-11-11T19:32:28Z"
          },
          "firstCloseDate": {
            "type": "string",
            "description": "The date the claim case was closed for the first time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2019-11-11T19:32:28Z"
          },
          "reopenDate": {
            "type": "string",
            "description": "The last date the claim case was reopened. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Why the claim case was reopened. Free text describing the reason for reopening the claim case. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "example": "Need more investigation"
          },
          "recloseDate": {
            "type": "string",
            "description": "The date the claim case was (re-)closed the last time. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "hoursSpendOnClaimCaseHandling": {
            "type": "number",
            "description": "Time spend on handling this claim case. This is a field that the claim handler can update as the claim case is worked with. The field is used for statistical purpose for monitoring internal service levels/targets.",
            "example": 1
          },
          "workgroup": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "FOR FUTURE USE !!! Identification of the department who is handling the claim item. This is the main responsible department.",
            "example": "A"
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the person who is handling the claim item. This is the main responsible person.",
            "example": "TIA"
          },
          "estimateDate": {
            "type": "string",
            "description": "The date from which the estimate has value (accounting or billing date). This date is defaulted with todays and cannot be overwritten by the user.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "newest": {
            "type": "boolean",
            "description": "Indicates if this record is the newest (current estimate) or a history record.",
            "example": true
          },
          "statisticalCode1": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 1 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table.",
            "example": "7"
          },
          "statisticalCode2": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 2 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table.",
            "example": "9"
          },
          "statisticalCode3": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 3 used for statistical purpose for reporting to DTI or other authorities. The code is user defined and set up in the general reference table.",
            "example": "13"
          },
          "itemType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Type of item (estimate). Indicates what kind of amount the record contains eg 'replace', 'excess' (deductible), 'recovery', 'salvage', etc.",
            "example": "CO"
          },
          "subitemType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Type of subitem. Used for break-down of estimates eg 'painting', 'labour', 'specified items', 'injury code', etc.",
            "example": "012"
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency code that defines in what currency the item (estimate) is given e.g. USD, DEM, DKK, GBP, etc.",
            "example": "EUR"
          },
          "currencyEstimate": {
            "type": "number",
            "description": "The current estimate in currency. This field holds the estimate status of the item. The value of this field is entered by the user. If empty, the default value is 0.",
            "example": 100
          },
          "estimate": {
            "type": "number",
            "description": "The current estimate exchanged to functional currency. This field holds the estimate status of the item. The value of this field is calculated by the system on the basis of currency_estimate and exchange_rate.",
            "example": 100
          },
          "currencyDifference": {
            "type": "number",
            "description": "The diffence in currency estimate, this item from the previous one. This difference is used for booking in the General Ledger. The value of this field is calculated by the system.",
            "example": 100
          },
          "difference": {
            "type": "number",
            "description": "The diffence in estimate exchanged to functional currency, this item from the previous one. This difference is used for booking in the General Ledger. The value of this field is calculated by the system.",
            "example": 100
          },
          "exchangeRate": {
            "type": "number",
            "description": "Exchange rate used for calculating the difference in functional currency. The value of this field is set by a user function that determines which date should be used as basis for fetching the exchange rate from",
            "example": 100
          },
          "authorisedBy": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "This field is filled with the user id of the user who has authorised the item. If a user exceeds his/hers limit this field is not filled out. Only when this field is filled out it can be paid. The field is set be a user function that is called when",
            "example": "TIA"
          },
          "generalLedgerBatchNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "General Ledger (GL) batch Number. If this field is null, then the estimate has not yet been handled by the program that transfers estimate to the GL. When the estimate has been send to GL, this field is updated with",
            "format": "int64",
            "example": 0
          },
          "autoPaymentSetUp": {
            "type": "boolean",
            "description": "Code used for indicating to the payment function that this item should be set up automatically when creating a new payment. Temporary code that is cleaned by the payment function. Values are true and false.",
            "example": true
          },
          "role": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "1"
          },
          "suppressReinsurance": {
            "type": "boolean",
            "example": true
          },
          "objectPercent": {
            "type": "number",
            "example": 3
          },
          "itemStartDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "itemEndDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time",
            "example": "2019-11-11T17:32:28Z"
          },
          "accountInterestMethod": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Interest calculation method used for interest calculations",
            "format": "int64",
            "example": 7128423423
          },
          "documentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "policyLineId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 89272
          }
        },
        "description": "Content for claim item to insert"
      },
      "ClaimPayment": {
        "required": [
          "claimCaseNo",
          "claimCaseNoAlt"
        ],
        "type": "object",
        "properties": {
          "partyId": {
            "type": "integer",
            "description": "Identification number for claimant/household.",
            "format": "int64"
          },
          "transactionDate": {
            "type": "string",
            "description": "The transaction date of payment.",
            "format": "date-time"
          },
          "claimCaseNo": {
            "type": "integer",
            "description": "Identification number for Claim Case.",
            "format": "int64"
          },
          "claimCaseNoAlt": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Alternative identification number for Claim Case."
          },
          "claimType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Claim type code value."
          },
          "claimTypeDescription": {
            "type": "string",
            "description": "Claim type description."
          },
          "productLineId": {
            "type": "string",
            "description": "Identification of a product line linked to claim case.",
            "example": "ZC"
          },
          "productLineDescription": {
            "type": "string",
            "description": "Product line description linked to claim case."
          },
          "objectDescription": {
            "type": "string",
            "description": "Object description linked to claim case."
          },
          "policyHolderId": {
            "type": "integer",
            "description": "Holder identification of policy linked to claim case.",
            "format": "int64"
          },
          "policyHolder": {
            "type": "string",
            "description": "Holder name of policy linked to claim case."
          },
          "paymentStatus": {
            "type": "integer",
            "description": "Claim payment status identification",
            "format": "int64"
          },
          "claimPayout": {
            "type": "number",
            "description": "Claim payout amount in invoice currency."
          },
          "taxDeductible": {
            "type": "number",
            "description": "Claim payout tax deductible amount in invoice currency."
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Claim payout currency.",
            "example": "EUR"
          }
        },
        "description": "Claim Payment model documentation for customer service workbench"
      },
      "ClaimQuestionReference": {
        "type": "object",
        "properties": {
          "translationClass": {
            "type": "string",
            "description": "Translation class identifying what kind of translation this is. Values are CODETABLE or QUESTION.",
            "example": "CODETABLE"
          },
          "tableName": {
            "type": "string",
            "description": "Identification of a code table or a question class.",
            "example": "COURSE_DAMAGE"
          },
          "language": {
            "type": "string",
            "description": "Identification of a language.",
            "example": "da"
          },
          "code": {
            "type": "string",
            "description": "Identification of a code or question (database value).",
            "example": "3"
          },
          "displayCode": {
            "type": "string",
            "description": "Identification of a code or question in language.",
            "example": "3"
          },
          "description": {
            "type": "string",
            "description": "Free text used for describing the code or question in the given language.",
            "example": "Mangelfuldt arbejde"
          },
          "helpText": {
            "type": "string",
            "description": "Help text.",
            "example": "Help text"
          }
        },
        "description": "Model documentation for ClaimQuestionReference"
      },
      "ClaimSubcase": {
        "required": [
          "claimCaseNo",
          "claimSubcaseNo",
          "coverDecision",
          "handler",
          "status",
          "subcaseType"
        ],
        "type": "object",
        "properties": {
          "claimSubcaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique key for Claim Subcase No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of the claim case to which this subcase is related.",
            "format": "int64",
            "example": 1684
          },
          "thirdPartyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a third party if this subcase is related to a third party. If not filled out the subcase is related to the claim case (policy holder).",
            "format": "int64",
            "example": 613
          },
          "subcaseType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Identification of an subcase type. This is  a code defining what kind of subcase this is. This could be 'car', 'hifi', 'bicycle', 'personal  injury', 'cost', 'contents', 'ship', 'cargo', etc.",
            "example": "002"
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "A description of the subcase (item). Free text containing e.g. model no, colour, size, etc.",
            "example": "Cat wants rings for dinner."
          },
          "claimClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for subcase. This code  will be used to determine what kind of questions, that should be set up for this subcase and what tasks to perform. The value of this code is defaulted by a userexit (site specific), but can be overwritten",
            "example": "004"
          },
          "questionClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for questions. This code  will be used to determine what kind of questions, that is needed to asked for this claim subcase. The  value of this code is defaulted by the cla_class,  but can be overwritten by the user.",
            "example": "004"
          },
          "questionStatus": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code indicating whether the series of question has  been completed. If a mandatory question has not been  answered, this status is set to NC (not completed)  otherwise OK. Payments can not be made on a subcase  when this status is NC.",
            "example": "OK"
          },
          "tasklistClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for tasklist. This code  will be used to determine what kind of tasks needs  to be performed for this claim subcase. The value of  this code is defaulted by the claim class, but can be overwritten by the user.",
            "example": "001"
          },
          "itemClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for claim items (estimates). This  code will be used to determine what items that will  be generated for this claim subcase. The value of  this code is defaulted by the claim class, but can  be overwritten by the user.",
            "example": "1"
          },
          "objectNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a object. This is a reference  to a specific insured object (a car FIAT PANDA 1000  registration Number ABC123, a house on Mainstreet,  a ship 'The Good Hope', etc.) registered on a policy  line.",
            "format": "int64",
            "example": 54366
          },
          "policyObjectId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Unique identification of a object (current or  historical). The version might be obsolete due  to changes made to the object after this item  was created.",
            "format": "int64",
            "example": 78361
          },
          "objectId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Identification of an object eg registration no for  a car, a house, a ship, civil registration code for  a person or company, etc.",
            "example": "CAT2773377"
          },
          "coverDecision": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Defines whether the subclaim is covered or not. This  code indicates whether we want to cover the damages  to this item or group of items. The value can be  'yes', 'no' or 'exgratia'. Whether exgratia is possible  is controlled by a site preference."
          },
          "coverDecisionDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Describes the reason for choosen cover decision e.g.  why is the damages covered exgratia. Free text can  be entered.",
            "example": "Random description"
          },
          "statisticalCode1": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 1 used for statistical purpose for reporting  to DTI or other authorities. The code is userdefined  and set up in the general reference table."
          },
          "statisticalCode2": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 2 used for statistical purpose for reporting  to DTI or other authorities. The code is userdefined  and set up in the general reference table."
          },
          "statisticalCode3": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code 3 used for statistical purpose for reporting  to DTI or other authorities. The code is userdefined  and set up in the general reference table."
          },
          "status": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the status of the claim case.  This code indicates whether the claim case is  'notified', 'open', 'closed', 'reopened', 'declined  and closed' or 'opened in error and closed'.  This is a system code that can not be extented with  new types.",
            "example": "RO"
          },
          "firstOpenDate": {
            "type": "string",
            "description": "The date the subcase was opened for the first  time.  The field is used for statistical purpose for  monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "firstCloseDate": {
            "type": "string",
            "description": "The date the subcase was closed for the first  time.  The field is used for statistical purpose for  monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenDate": {
            "type": "string",
            "description": "The last date the subcase was reopened.  The field is used for statistical purpose for  monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "reopenReason": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Why the subcase was reopened. Free text describing  the reason for reopening the subcase. The field is used for statistical purpose for  monitoring internal service levels/targets."
          },
          "recloseDate": {
            "type": "string",
            "description": "The date the subcase was (re-)closed the last time.  The field is used for statistical purpose for  monitoring internal service levels/targets.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "hoursSpendOnClaimSubcaseHandling": {
            "type": "number",
            "description": "Time spend on handling this subcase. This is a  field that the claim handler can update as the  subcase is worked with.  The field is used for statistical purpose for  monitoring internal service levels/targets."
          },
          "workgroup": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "FOR FUTURE USE !!!  Identification of the department who is handling the  claim subcase. This is the main responsible department.  Lower parts of the claim subcase (item estimates)  might be delegated to other departments."
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "Identification of the person who is handling the claim subcase. This is the main responsible person.  Lower parts of the claim subcase (item estimates)  might be delegated to other users.",
            "example": "LBV"
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "scorecardId": {
            "maximum": 1000000000000000000,
            "type": "integer",
            "format": "int64",
            "example": 123456789012345680
          },
          "scorecardScore": {
            "type": "number",
            "example": 10
          },
          "investigation": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "ONGOING"
          },
          "categoryResult": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "MEDIUM"
          },
          "processName": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "example": "AUTOMATIC"
          },
          "assignProfileId": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "example": "CLAIM"
          }
        },
        "description": "Model documentation for Claim Subcase"
      },
      "ClaimSubcaseMetadataLinks": {
        "type": "object",
        "properties": {
          "subcaseTypes": {
            "type": "string"
          },
          "claimClasses": {
            "type": "string"
          },
          "questionClasses": {
            "type": "string"
          },
          "itemClasses": {
            "type": "string"
          },
          "tasklistClasses": {
            "type": "string"
          },
          "coverDecisions": {
            "type": "string"
          },
          "statusTypes": {
            "type": "string"
          },
          "investigations": {
            "type": "string"
          },
          "categoryResults": {
            "type": "string"
          },
          "statisticalCodes1": {
            "type": "string"
          },
          "statisticalCodes2": {
            "type": "string"
          },
          "statisticalCodes3": {
            "type": "string"
          }
        }
      },
      "ClaimThirdParty": {
        "required": [
          "claimCaseNo",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for Third Party No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "A unique identification of a claim case.",
            "format": "int64",
            "example": 1824
          },
          "partyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a third party. This number is  the unique key for a name regisetred in the  central name entity. This field is not filled  out if no name or address of the third party is  known (until later in the claim case processing).",
            "format": "int64",
            "example": 45403
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text used for other information than name  and address. Used if nothing is known about the  third party  (until later in the claim case  processing).",
            "example": "Passenger"
          },
          "type": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Type of role that the third party plays in this  specific claim case. Examples could be  'person with an accident', 'cyclist', 'third  party driver', 'passenger', etc.  The code is user defined and set up in the general reference table.",
            "example": "001"
          },
          "ownClaimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of the claim case under which  the third party has made a claim. This is a  link between two customers of the insurance  company that have been involved in the same  accident.",
            "format": "int64",
            "example": 7128423423
          },
          "responsibilityPercent": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "75"
          },
          "thirdPartyResponsibilityPercent": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "example": "50"
          },
          "obsoleteTimestamp": {
            "type": "string",
            "description": "Date and Time when third party becomes obsolete",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          }
        },
        "description": "Third party content"
      },
      "ClaimTypeCombinations": {
        "type": "object",
        "properties": {
          "productLineId": {
            "type": "string",
            "description": "Identification of a product line defined in the product editor.",
            "example": "ZC"
          },
          "eventType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "This code identifies the type of event. This could be 'accidental damage',  'motor breakdown', 'fire', 'personal accident',  'theft', etc. The code is user defined and set up  in the general reference table.",
            "example": "ROA"
          },
          "causeType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify the cause type. What was the cause or reason for the event to take place.  What was it that initiated the event. This could  be 'lightning', 'earthquake', 'explosion', 'frost',  'mugging', etc. The code is user defined and set",
            "example": "SOA"
          },
          "subcauseType": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Code used to identify a subcause type. This is  a secondary cause type used to identify what caused the event. The code is user defined and set up in the general reference table. This code together with event_type and cause_type",
            "example": "GLA"
          },
          "siteId": {
            "type": "integer",
            "description": "The id of the site",
            "format": "int64",
            "example": 1
          }
        },
        "description": "Model documentation for ClaimTypeCombinations"
      },
      "ClaimsProfile": {
        "type": "object",
        "properties": {
          "daysSinceFirstPolicy": {
            "type": "integer",
            "description": "Number of days since first policy start date",
            "format": "int64"
          },
          "claimsFrequency": {
            "type": "number",
            "description": "No of claim cases/number of years (since first policy First Cover Start date)"
          },
          "claimsPercentage": {
            "type": "number",
            "description": "Claim ratio (total claim paid amount / collected premium)"
          },
          "claimsCountInPastYears": {
            "type": "integer",
            "description": "Number of claims where incident date is in the past 3 years (sysdate - 3 years)",
            "format": "int64"
          },
          "payoutInPastYears": {
            "type": "number",
            "description": "Sum of the payments for the claims where payment date is in the past 3 years (sysdate - 3 years)"
          },
          "claimsCountTotal": {
            "type": "integer",
            "description": "Total number of claims",
            "format": "int64"
          },
          "payoutTotal": {
            "type": "number",
            "description": "Sum of the payments for all the claims"
          },
          "atFaultClaims": {
            "type": "integer",
            "description": "No of claims where responsibility percentage is not null",
            "format": "int64"
          }
        },
        "description": "Model documentation for claims profile"
      },
      "GeneratePaymentsBody": {
        "type": "object",
        "properties": {
          "claimCaseNo": {
            "type": "integer",
            "description": "Claim case number for which payments should be generated",
            "format": "int64",
            "example": 11225
          },
          "claimSubcaseNo": {
            "type": "integer",
            "description": "Claim subcase number for which payments should be generated",
            "format": "int64",
            "example": 11225
          }
        },
        "description": "Content for claim payment to insert"
      },
      "JsonNode": {
        "type": "object",
        "description": "Payload."
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        },
        "description": "Informational or warning messages"
      },
      "MessageResponse_ClaimCasePost": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        },
        "description": "Informational or warning messages"
      },
      "MessageResponse_ClaimItemPost": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        },
        "description": "Informational or warning messages"
      },
      "MessageResponse_PaymentPost": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        },
        "description": "Informational or warning messages"
      },
      "MessageResponse_TaskListPost": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        },
        "description": "Informational or warning messages"
      },
      "MessageResponse_TransControl": {
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        },
        "description": "Informational or warning messages"
      },
      "MetadataResponseClaimCaseMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/ClaimCaseMetadataLinks"
          }
        }
      },
      "MetadataResponseClaimEventMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/ClaimEventMetadataLinks"
          }
        }
      },
      "MetadataResponseClaimItemMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/ClaimItemMetadataLinks"
          }
        }
      },
      "MetadataResponseClaimSubcaseMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/ClaimSubcaseMetadataLinks"
          }
        }
      },
      "MetadataResponsePaymentMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/PaymentMetadataLinks"
          }
        }
      },
      "MetadataResponseQuestionMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/QuestionMetadataLinks"
          }
        }
      },
      "MetadataResponseTasklistMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/TasklistMetadataLinks"
          }
        }
      },
      "MetadataResponseThirdPartyMetadataLinks": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/ThirdPartyMetadataLinks"
          }
        }
      },
      "PageInfo": {
        "type": "object",
        "properties": {
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageResponseClaim": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimCase": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimCase"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimCaseSubobject": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimCaseSubobject"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimItem": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimItem"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimItemTypeCombinations": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimItemTypeCombinations"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimPayment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimPayment"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimQuestionReference": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimQuestionReference"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimSubcase": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimSubcase"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimThirdParty": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimThirdParty"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseClaimTypeCombinations": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimTypeCombinations"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponsePayment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponsePaymentItem": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentItem"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseQuestion": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseReceiver": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Receiver"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseTasklist": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tasklist"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "PageResponseTimeline": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Timeline"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim payment (account item), value is automatically assigned during creation",
            "format": "int64"
          },
          "createDate": {
            "type": "string",
            "description": "date created for the first time",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "creator": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "original creator of item",
            "example": "TIA"
          },
          "transactionDate": {
            "type": "string",
            "description": "the value date for general ledger, will only be posted when not null.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "itemReference": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "External reference, eg. cheque number, bank reference no, etc."
          },
          "itemText": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "This text identifies the item for various display purposes. The text is either entered from the work pad or automatic constructed from data in the delivering system. When creating payment or collection follow letter then this is the header text for",
            "example": "01 PET 5031689BW"
          },
          "accountNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "The account p/r. The specified amount will be added to the account with implied sign (minus amount will be subtracted). (For item class = 9 then account_no is the same as gl_account_code.)",
            "format": "int64",
            "example": 3008
          },
          "amount": {
            "type": "number",
            "description": "Amount in local currency (+/-)."
          },
          "amountBalance": {
            "type": "number",
            "description": "Balance in functional currency, when zero then item is closed. positive = balance in our favour."
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "always filled in with currency.",
            "example": "EUR"
          },
          "currencyAmount": {
            "type": "number",
            "description": "currency amount (+/-)."
          },
          "currencyBalance": {
            "type": "number",
            "description": "Balance in currency, when zero then item is closed. positive = balance in our  favour."
          },
          "dueDate": {
            "type": "string",
            "description": "For Invoices (item form 1,2) - The date where the amount is due. For Payments (item_type 3) - The date where a payment is posted on the bank account. Is used when the bank statement is balanced with own recordings.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "paymentMethod": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "how must invoice be collected or payment advice paid.",
            "example": "BANK"
          },
          "paymentChannel": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "example": "GIRO"
          },
          "paymentComment": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "meansPayNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 2097
          },
          "payee": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Only filled in for payments, where the receiver is different from the account holder and a name id is not wanted. Eg. one off payments, incoming payments not possible to place on the  correct account etc.",
            "example": "46310"
          },
          "paymentStatus": {
            "maximum": 999,
            "type": "integer",
            "description": "Shows payment status for automatic collection/payment of invoice. When null then payment request not issued. Collections: 0  (or null) Not requested for payment 1  Selected for payment. The payment system will",
            "format": "int64",
            "example": 0
          },
          "onHold": {
            "type": "boolean",
            "example": true
          },
          "releaseBy": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "The user who must release the item (on hold = Y) The user who released the item (on hold = N Only the userid from the currently logged in user can change on_hold from Y to N. There is history on this field for audit purposes."
          },
          "referralCode": {
            "maximum": 9999,
            "type": "integer",
            "description": "Referral code, which can only be removed by a person with the correct authorisation profile. If filled in then on_hold will be = Y.",
            "format": "int64",
            "example": 7128
          },
          "specification": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Specifies the invoice or the outgoing payments to the receiver. The text is used when creating collections or payment advices. The text is supplied from the policy, commission, claim system or via the workpad, and conforms to format for standard",
            "example": "New Policy Line"
          },
          "internalNote": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Notes about the transaction manually entered by users from work pad, or entered on  an posted item. eg. invoice paid twice, send to customer by cheque. Can be entered thru workpad  or on posted items.",
            "example": "Reversal of instalment with instl_plan_item_no=2021"
          },
          "partyId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 45802
          },
          "policyNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 97721
          },
          "policyLineNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 5031669
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 1722
          },
          "itemId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "This value is used as connection between claim payment (account item) and claim payment items.",
            "format": "int64",
            "example": 62878
          },
          "startDate": {
            "type": "string",
            "description": "Premium Inv: min cover start date.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "endDate": {
            "type": "string",
            "description": "Premium Inv: max cover_end_date.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "yearOfOrigin": {
            "maximum": 9999,
            "type": "integer",
            "description": "policy year (both premium, claims etc). only used on invoices.",
            "format": "int64",
            "example": 2017
          },
          "approvedBy": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "example": "TIA"
          },
          "holdUntilPaid": {
            "type": "boolean",
            "example": true
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "externalPaymentId": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "claimSubcaseNo": {
            "maximum": 1000000000000000000,
            "type": "integer",
            "format": "int64",
            "example": 123456789012345680
          },
          "role": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "What role does the receiver play on this item eg. policy holder, service supplier, etc. Used when defaulting information to payment",
            "example": "1"
          },
          "paymentItems": {
            "type": "array",
            "description": "Claim payment items matching itemId",
            "items": {
              "$ref": "#/components/schemas/PaymentItem"
            }
          }
        },
        "description": "Model documentation for claim payment (account item)"
      },
      "PaymentItem": {
        "required": [
          "claimItemId",
          "claimItemNo",
          "currencyAmount",
          "currencyCode",
          "id",
          "itemId",
          "paymentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim payment item, value is automatically assigned during creation",
            "format": "int64"
          },
          "itemId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "This is the id used to map claim payment (account item) and claim payment items. This id groups together all the items in this entity into an invoice.",
            "format": "int64",
            "example": 62643
          },
          "claimItemNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 1619
          },
          "itemType": {
            "type": "string"
          },
          "subitemType": {
            "type": "string"
          },
          "paymentType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Subtype of payment. Specifies break-down payments like 'painting', 'labour', 'injury codes', 'specified items', etc. This code refers to a more detailed specification of an amount.",
            "example": "0"
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency code that defines in what currency the payment item is given e.g. USD, DEM, DKK, GBP, etc.",
            "example": "EUR"
          },
          "currencyAmount": {
            "type": "number",
            "description": "Net amount to pay in currency.",
            "example": 90
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the payment item. This could be used for printing detailed specification to the receiver of the payment."
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          },
          "taxPercent": {
            "type": "number",
            "example": 3
          },
          "taxDeductibles": {
            "type": "number",
            "example": 2
          },
          "taxAmount": {
            "type": "number"
          },
          "claimItemId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 2011
          },
          "automaticCloseClaimItem": {
            "type": "boolean",
            "example": true
          },
          "currencyEstimate": {
            "type": "number",
            "description": "Current estimate amount in currency. Can be used for setting a new estimate. Default valueis 0.",
            "example": 40
          }
        },
        "description": "Model documentation for claim payment item"
      },
      "PaymentItem_PaymentPost": {
        "required": [
          "claimItemId",
          "claimItemNo",
          "currencyAmount",
          "currencyCode",
          "id",
          "itemId",
          "paymentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim payment item, value is automatically assigned during creation",
            "format": "int64"
          },
          "itemId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "This is the id used to map claim payment (account item) and claim payment items. This id groups together all the items in this entity into an invoice.",
            "format": "int64",
            "example": 62643
          },
          "claimItemNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 1619
          },
          "itemType": {
            "type": "string"
          },
          "subitemType": {
            "type": "string"
          },
          "paymentType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Subtype of payment. Specifies break-down payments like 'painting', 'labour', 'injury codes', 'specified items', etc. This code refers to a more detailed specification of an amount.",
            "example": "0"
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency code that defines in what currency the payment item is given e.g. USD, DEM, DKK, GBP, etc.",
            "example": "EUR"
          },
          "currencyAmount": {
            "type": "number",
            "description": "Net amount to pay in currency.",
            "example": 90
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the payment item. This could be used for printing detailed specification to the receiver of the payment."
          },
          "taxPercent": {
            "type": "number",
            "example": 3
          },
          "taxDeductibles": {
            "type": "number",
            "example": 2
          },
          "taxAmount": {
            "type": "number"
          },
          "claimItemId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 2011
          },
          "automaticCloseClaimItem": {
            "type": "boolean",
            "example": true
          },
          "currencyEstimate": {
            "type": "number",
            "description": "Current estimate amount in currency. Can be used for setting a new estimate. Default valueis 0.",
            "example": 40
          }
        },
        "description": "Model documentation for claim payment item"
      },
      "PaymentMetadataLinks": {
        "type": "object",
        "properties": {
          "currencyCodes": {
            "type": "string"
          },
          "paymentChannels": {
            "type": "string"
          },
          "paymentMethods": {
            "type": "string"
          },
          "paymentStatuses": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          }
        }
      },
      "Payment_PaymentPost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim payment (account item), value is automatically assigned during creation",
            "format": "int64"
          },
          "createDate": {
            "type": "string",
            "description": "date created for the first time",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "creator": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "original creator of item",
            "example": "TIA"
          },
          "transactionDate": {
            "type": "string",
            "description": "the value date for general ledger, will only be posted when not null.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "itemReference": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "External reference, eg. cheque number, bank reference no, etc."
          },
          "itemText": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "This text identifies the item for various display purposes. The text is either entered from the work pad or automatic constructed from data in the delivering system. When creating payment or collection follow letter then this is the header text for",
            "example": "01 PET 5031689BW"
          },
          "accountNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "The account p/r. The specified amount will be added to the account with implied sign (minus amount will be subtracted). (For item class = 9 then account_no is the same as gl_account_code.)",
            "format": "int64",
            "example": 3008
          },
          "amount": {
            "type": "number",
            "description": "Amount in local currency (+/-)."
          },
          "amountBalance": {
            "type": "number",
            "description": "Balance in functional currency, when zero then item is closed. positive = balance in our favour."
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "always filled in with currency.",
            "example": "EUR"
          },
          "currencyAmount": {
            "type": "number",
            "description": "currency amount (+/-)."
          },
          "currencyBalance": {
            "type": "number",
            "description": "Balance in currency, when zero then item is closed. positive = balance in our  favour."
          },
          "dueDate": {
            "type": "string",
            "description": "For Invoices (item form 1,2) - The date where the amount is due. For Payments (item_type 3) - The date where a payment is posted on the bank account. Is used when the bank statement is balanced with own recordings.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "paymentMethod": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "how must invoice be collected or payment advice paid.",
            "example": "BANK"
          },
          "paymentChannel": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "example": "GIRO"
          },
          "paymentComment": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "meansPayNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 2097
          },
          "payee": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Only filled in for payments, where the receiver is different from the account holder and a name id is not wanted. Eg. one off payments, incoming payments not possible to place on the  correct account etc.",
            "example": "46310"
          },
          "paymentStatus": {
            "maximum": 999,
            "type": "integer",
            "description": "Shows payment status for automatic collection/payment of invoice. When null then payment request not issued. Collections: 0  (or null) Not requested for payment 1  Selected for payment. The payment system will",
            "format": "int64",
            "example": 0
          },
          "onHold": {
            "type": "boolean",
            "example": true
          },
          "releaseBy": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "The user who must release the item (on hold = Y) The user who released the item (on hold = N Only the userid from the currently logged in user can change on_hold from Y to N. There is history on this field for audit purposes."
          },
          "referralCode": {
            "maximum": 9999,
            "type": "integer",
            "description": "Referral code, which can only be removed by a person with the correct authorisation profile. If filled in then on_hold will be = Y.",
            "format": "int64",
            "example": 7128
          },
          "specification": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Specifies the invoice or the outgoing payments to the receiver. The text is used when creating collections or payment advices. The text is supplied from the policy, commission, claim system or via the workpad, and conforms to format for standard",
            "example": "New Policy Line"
          },
          "internalNote": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Notes about the transaction manually entered by users from work pad, or entered on  an posted item. eg. invoice paid twice, send to customer by cheque. Can be entered thru workpad  or on posted items.",
            "example": "Reversal of instalment with instl_plan_item_no=2021"
          },
          "partyId": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 45802
          },
          "policyNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 97721
          },
          "policyLineNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 5031669
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 1722
          },
          "itemId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "This value is used as connection between claim payment (account item) and claim payment items.",
            "format": "int64",
            "example": 62878
          },
          "startDate": {
            "type": "string",
            "description": "Premium Inv: min cover start date.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "endDate": {
            "type": "string",
            "description": "Premium Inv: max cover_end_date.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "yearOfOrigin": {
            "maximum": 9999,
            "type": "integer",
            "description": "policy year (both premium, claims etc). only used on invoices.",
            "format": "int64",
            "example": 2017
          },
          "approvedBy": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "example": "TIA"
          },
          "holdUntilPaid": {
            "type": "boolean",
            "example": true
          },
          "externalPaymentId": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string"
          },
          "claimSubcaseNo": {
            "maximum": 1000000000000000000,
            "type": "integer",
            "format": "int64",
            "example": 123456789012345680
          },
          "role": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "What role does the receiver play on this item eg. policy holder, service supplier, etc. Used when defaulting information to payment",
            "example": "1"
          },
          "paymentItems": {
            "type": "array",
            "description": "Claim payment items matching itemId",
            "items": {
              "$ref": "#/components/schemas/PaymentItem_PaymentPost"
            }
          }
        },
        "description": "Payment with items (if left empty, payment items will default to all claim items, related to claim case/subcase)"
      },
      "Question": {
        "type": "object",
        "properties": {
          "sortNo": {
            "type": "integer",
            "description": "Sort order field used as primary sort criteria in eg list of values.",
            "format": "int64",
            "example": 1
          },
          "language": {
            "type": "string",
            "description": "Identification of a language.",
            "example": "TIA"
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a claim case.",
            "format": "int64",
            "example": 1710
          },
          "claimSubcaseNo": {
            "type": "integer",
            "description": "Identification of a claim subcase.",
            "format": "int64",
            "example": 867
          },
          "questionClass": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Classification code for questions. This code  will be used to determine what kind of questions, that is needed to asked for this claim case. The  value of this code is defaulted by the cla_class,  but can be overwritten by the user.",
            "example": "004"
          },
          "question": {
            "type": "string",
            "description": "Question text",
            "example": "Has the injured person been hospitalized?"
          },
          "referenceTableName": {
            "type": "string",
            "description": "LOV table name",
            "example": "YESNO"
          },
          "questionNo": {
            "type": "string",
            "description": "Question number",
            "example": "39"
          },
          "dataType": {
            "type": "string",
            "description": "Data type",
            "example": "VAR"
          },
          "mandatory": {
            "type": "boolean",
            "description": "If questions are mandatory",
            "example": true
          },
          "defaultValue": {
            "type": "string",
            "description": "Default value"
          },
          "skipCondition": {
            "type": "string",
            "description": "Skip condition",
            "example": "&C01='N'"
          },
          "skipTo": {
            "type": "integer",
            "description": "Skip to",
            "format": "int64",
            "example": 4
          },
          "columnName": {
            "type": "string",
            "description": "Column name",
            "example": "C01"
          },
          "caseRestriction": {
            "type": "string",
            "description": "Case restriction",
            "example": "UPP"
          },
          "callUf1": {
            "type": "boolean",
            "description": "Call UF_1",
            "example": true
          },
          "callUf2": {
            "type": "boolean",
            "description": "Call UF_2",
            "example": true
          },
          "callUf3": {
            "type": "boolean",
            "description": "Call UF_3",
            "example": true
          },
          "lovCallUf": {
            "type": "boolean",
            "description": "Call LOV_UF ",
            "example": true
          },
          "answer": {
            "type": "string",
            "description": "Answer",
            "example": "Y"
          },
          "recordVersion": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          }
        },
        "description": "Model documentation for Claim Questions"
      },
      "QuestionMetadataLinks": {
        "type": "object",
        "properties": {
          "questionClasses": {
            "type": "string"
          },
          "questions": {
            "type": "string"
          },
          "dataTypes": {
            "type": "string"
          },
          "answers": {
            "type": "string"
          }
        }
      },
      "Receiver": {
        "required": [
          "claimItemNo",
          "partyId"
        ],
        "type": "object",
        "properties": {
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a claim case.",
            "format": "int64",
            "example": 1710
          },
          "claimSubcaseNo": {
            "type": "integer",
            "description": "Unique key for Claim Subcase No, value is automatically assigned during creation",
            "format": "int64",
            "example": 861
          },
          "role": {
            "type": "string",
            "description": "What role does the receiver play on this item eg. policy holder, service supplier, etc. Used when defaulting information to payment",
            "example": "1"
          },
          "roleDescription": {
            "type": "string",
            "description": "Role Description",
            "example": "Policy Holder"
          },
          "claimItemNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Identification of item record. The  Number is generated by the system and is used as reference to a single specific item.  All historical data for the same item are  held together by this number",
            "format": "int64",
            "example": 6657
          },
          "partyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a customer. This number is  the unique key for a customer registered in the  central name/customer entities. This number is  used through out the TIA application to show the total business (correspondence) with a person  or company.",
            "format": "int64",
            "example": 45241
          },
          "name": {
            "type": "string",
            "example": "Ramyga Pali"
          },
          "thirdPartyId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Identification of a third party if this subcase is related to a third party. If not filled out the subcase is related to the claim case (policy holder).",
            "format": "int64",
            "example": 613
          },
          "relationTypeDescription": {
            "type": "string",
            "example": "Relation type description"
          },
          "relationDescription": {
            "type": "string",
            "example": "Relation description"
          }
        },
        "description": "Model documentation for Claim receiver"
      },
      "SingleResultResponseBulkApiResponse": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/BulkApiResponse"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponseClaimCase": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimCase"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponseClaimCase_ClaimCasePost": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimCase_ClaimCasePost"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse_ClaimCasePost"
            }
          }
        }
      },
      "SingleResultResponseClaimEvent": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimEvent"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponseClaimEvent_TransControl": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimEvent_TransControl"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse_TransControl"
            }
          }
        }
      },
      "SingleResultResponseClaimItem_ClaimItemPost": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimItem_ClaimItemPost"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse_ClaimItemPost"
            }
          }
        }
      },
      "SingleResultResponseClaimSubcase": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimSubcase"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponseClaimThirdParty": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimThirdParty"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponseClaimsProfile": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimsProfile"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponsePayment": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Payment"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponsePayment_PaymentPost": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Payment_PaymentPost"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse_PaymentPost"
            }
          }
        }
      },
      "SingleResultResponseTasklist": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Tasklist"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          }
        }
      },
      "SingleResultResponseTasklist_TaskListPost": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Tasklist_TaskListPost"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse_TaskListPost"
            }
          }
        }
      },
      "Tasklist": {
        "required": [
          "claimCaseNo",
          "sortNo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim tasklist No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "A unique identification of a claim case.",
            "format": "int64",
            "example": 2263
          },
          "claimSubcaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "A unique identification of a claim subcase. If this field is not filled out, the tasklist  is related to a claim case otherwise a subcase.",
            "format": "int64",
            "example": 973
          },
          "sortNo": {
            "type": "number",
            "description": "Sequence number that defines in what order tasks should be completed. This is just a rough order  since some tasks can be initiated simultaneously  e.g. send several letters and wait for answer.",
            "example": 10
          },
          "taskId": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Identification of a task. This id is a simple reference code that is set up in the general  reference table.",
            "example": "T01"
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the task. This text should be detailed enough for the user to understand  what needs to be done.",
            "example": "Task Description"
          },
          "deadline": {
            "type": "string",
            "description": "Deadline date for completion of task. This is the scheduled completion date. The date is used  for follow up control so that necessary actions  can be taken.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "completionDate": {
            "type": "string",
            "description": "The date of completion of the task. When this field  is filled out, it indicates that the task is completed  and that next task in the task list can be initiated.  Also this date will be used monitoring internal",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "programId": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "The identification of a standard letter that is set up in the print program table. If this field  is filled out, the system will prompt the user to select a receiver and then create an entry in  print request que for online or batch execution.",
            "example": "50"
          },
          "requestId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Request id created when sending out letter or other type of case item. This number is returned by the x_print_request routine when inserting a request for a letter to be printed via online or batch print.  This field can only filled out if program_id is.",
            "format": "int64",
            "example": 7128423423
          },
          "receiverIdNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 78182
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "example": "CCH"
          },
          "companyNo": {
            "maximum": 99999,
            "type": "integer",
            "description": "Action required by company.",
            "format": "int64",
            "example": 1
          },
          "departmentNo": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "Action required by department.",
            "example": "3"
          },
          "workGroupId": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Action required by work group.",
            "example": "GRP1"
          },
          "recordVersion": {
            "type": "integer",
            "description": "Change Indicator",
            "format": "int64"
          }
        },
        "description": "Model documentation for claim tasklist"
      },
      "TasklistMetadataLinks": {
        "type": "object",
        "properties": {
          "statusTypes": {
            "type": "string"
          },
          "programTypes": {
            "type": "string"
          },
          "classes": {
            "type": "string"
          },
          "taskIds": {
            "type": "string"
          }
        }
      },
      "Tasklist_TaskListPost": {
        "required": [
          "claimCaseNo",
          "sortNo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique key for claim tasklist No, value is automatically assigned during creation",
            "format": "int64"
          },
          "claimCaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "A unique identification of a claim case.",
            "format": "int64",
            "example": 2263
          },
          "claimSubcaseNo": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "A unique identification of a claim subcase. If this field is not filled out, the tasklist  is related to a claim case otherwise a subcase.",
            "format": "int64",
            "example": 973
          },
          "sortNo": {
            "type": "number",
            "description": "Sequence number that defines in what order tasks should be completed. This is just a rough order  since some tasks can be initiated simultaneously  e.g. send several letters and wait for answer.",
            "example": 10
          },
          "taskId": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Identification of a task. This id is a simple reference code that is set up in the general  reference table.",
            "example": "T01"
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "description": "Free text describing the task. This text should be detailed enough for the user to understand  what needs to be done.",
            "example": "Task Description"
          },
          "deadline": {
            "type": "string",
            "description": "Deadline date for completion of task. This is the scheduled completion date. The date is used  for follow up control so that necessary actions  can be taken.",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "completionDate": {
            "type": "string",
            "description": "The date of completion of the task. When this field  is filled out, it indicates that the task is completed  and that next task in the task list can be initiated.  Also this date will be used monitoring internal",
            "format": "date-time",
            "example": "2017-07-21T17:32:28Z"
          },
          "programId": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "The identification of a standard letter that is set up in the print program table. If this field  is filled out, the system will prompt the user to select a receiver and then create an entry in  print request que for online or batch execution.",
            "example": "50"
          },
          "requestId": {
            "maximum": 9999999999,
            "type": "integer",
            "description": "Request id created when sending out letter or other type of case item. This number is returned by the x_print_request routine when inserting a request for a letter to be printed via online or batch print.  This field can only filled out if program_id is.",
            "format": "int64",
            "example": 7128423423
          },
          "receiverIdNo": {
            "maximum": 9999999999,
            "type": "integer",
            "format": "int64",
            "example": 78182
          },
          "handler": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "example": "CCH"
          },
          "companyNo": {
            "maximum": 99999,
            "type": "integer",
            "description": "Action required by company.",
            "format": "int64",
            "example": 1
          },
          "departmentNo": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string",
            "description": "Action required by department.",
            "example": "3"
          },
          "workGroupId": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Action required by work group.",
            "example": "GRP1"
          }
        },
        "description": "Content for claim tasklist to insert"
      },
      "ThirdPartyMetadataLinks": {
        "type": "object",
        "properties": {
          "responsibilityPercents": {
            "type": "string"
          },
          "thirdPartyTypes": {
            "type": "string"
          }
        }
      },
      "Timeline": {
        "type": "object",
        "properties": {
          "claimCaseNo": {
            "type": "integer",
            "description": "Reference to a unique Claim Case",
            "format": "int64"
          },
          "claimSubcaseNo": {
            "type": "integer",
            "description": "Reference to a unique Claim Subcase",
            "format": "int64"
          },
          "timelineType": {
            "type": "string",
            "description": "Type of Timeline",
            "example": "CPI"
          },
          "description": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "relativeTime": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "example": "EUR"
          },
          "amount": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Model documentation for Timeline"
      },
      "TransactionAction_TransControl": {
        "required": [
          "action",
          "values"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Specific action to be performed. Usually maps to some specific entity",
            "enum": [
              "New Event",
              "Adjust Event",
              "New Case",
              "Adjust Case",
              "Adjust Answer",
              "New Item",
              "New SubClaim Item",
              "Adjust Item",
              "New SubCase",
              "Adjust SubCase",
              "Custom Action"
            ]
          },
          "values": {
            "type": "array",
            "description": "Set of values to use, when performing an action.",
            "items": {
              "$ref": "#/components/schemas/TransactionValue_TransControl"
            }
          },
          "transactionActionType": {
            "type": "string",
            "enum": [
              "New Event",
              "Adjust Event",
              "New Case",
              "Adjust Case",
              "Adjust Answer",
              "New Item",
              "New SubClaim Item",
              "Adjust Item",
              "New SubCase",
              "Adjust SubCase",
              "Custom Action"
            ]
          }
        },
        "description": "List of claim actions to perform during transaction."
      },
      "TransactionRequest_TransControl": {
        "required": [
          "actions"
        ],
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "List of claim actions to perform during transaction.",
            "items": {
              "$ref": "#/components/schemas/TransactionAction_TransControl"
            }
          }
        },
        "description": "Claim transaction to be executed"
      },
      "TransactionValue_TransControl": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the property, that is valid for particular action type"
          },
          "value": {
            "type": "string",
            "description": "Property value"
          }
        },
        "description": "Set of values to use, when performing an action."
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}