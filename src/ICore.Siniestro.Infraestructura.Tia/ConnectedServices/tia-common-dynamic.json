{
  "openapi": "3.0.1",
  "info": {
    "title": "Description of response structure for Dynamic Output API",
    "description": "## Pagination\r\nPagination is possible for the first query in the dynamic output definition. \r\nWhen pagination is possible, the response will be paginated in order to limit the amount of data received by the client. \r\nNavigational links in the response allows clients to navigate back and forth in the resultset. \r\nWhen pagination is no possible all information will be contained within one page but the generic \r\nstructure of the two scenarios will however stay unchanged. \r\n\r\nAn example of the generic structure for a paginated response is presented below.\r\nE.g. example with pagination:\r\n\r\n```json\r\n{\r\n  \"content\":{\r\n    \"group\": \"PARTY_PAG\",\r\n    \"description\": \"Pagination test on party\",\r\n    \"DEFINITION NAME 1\": {\r\n      \"DEFINITION 1 STRUCTURE\": [\r\n        {\r\n          \"data0\":123,\r\n          \"data7\":\"xyz\"\r\n        },\r\n        {\r\n           \"data0\":432,\r\n           \"data1\":\"def\",\r\n           \"data7\":\"xxx\"\r\n        },\r\n        { \r\n           \"data0\":987,\r\n           \"data1\":\"def\",\r\n           \"data7\":\"xyz\"\r\n        }\r\n      ]\r\n    },\r\n    \"DEFINITION NAME 2\": {\r\n      \"DEFINITION 2 STRUCTURE\": [\r\n        {\r\n          \"data12\":123,\r\n          \"data14\":\"xyz\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"_links\": {\r\n    \"first\":{\r\n      \"href\":\"http://HOST/common/api/v1/dynamic-output/group-data/PARTY_PAG?param1=BAS&page=1&size=3\"},\r\n    \"prev\":{\r\n      \"href\":\"http://HOST/common/api/v1/dynamic-output/group-data/PARTY_PAG?param1=BAS&page=16&size=3\"},\r\n    \"self\":{\r\n      \"href\":\"http://HOST/common/api/v1/dynamic-output/group-data/PARTY_PAG?param1=BAS&page=17&size=3\"},\r\n    \"next\":{\r\n      \"href\":\"http://HOST/common/api/v1/dynamic-output/group-data/PARTY_PAG?param1=BAS&page=18&size=3\"},\r\n    \"last\":{\r\n      \"href\":\"http://HOST/common/api/v1/dynamic-output/group-data/PARTY_PAG?param1=BAS&page=26&size=3\"}\r\n  },\r\n  \"numberOfElements\":3,\r\n  \"totalElements\":77,\r\n  \"totalPages\":26,\r\n  \"size\":3,\r\n  \"page\":\"17\"\r\n}\r\n```\r\nE.g. example without pagination: \r\nNotice that '**page**' and '**size**' values are ignored and metadata is reduced and only contains\r\n'numberOfElements'.\r\n\r\n```json\r\n{\r\n  \"content\":{\r\n    \"group\": \"UT_DOAPI\",\r\n    \"description\": \"DOAPI Unit Test Setup\",\r\n    \"DEFINITION NAME 1\": {\r\n      \"DEFINITION 1 STRUCTURE\": [\r\n        {\r\n          \"data0\":123,\r\n          \"data7\":\"xyz\"\r\n        },\r\n        {\r\n           \"data0\":432,\r\n           \"data1\":\"def\",\r\n           \"data7\":\"xxx\"\r\n        },\r\n        { \r\n           \"data0\":987,\r\n           \"data1\":\"def\",\r\n           \"data7\":\"xyz\"\r\n        }\r\n      ]\r\n    },\r\n    \"DEFINITION NAME 2\": {\r\n      \"DEFINITION 2 STRUCTURE\": [\r\n        {\r\n          \"data12\":123,\r\n          \"data14\":\"xyz\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"_links\": {\r\n    \"self\":{\r\n      \"href\":\"http://HOST/common/api/v1/dynamic-output/group-data/UT_DOAPI?param1=45612&param2=BAS&page=99&size=2\"}\r\n  },\r\n  \"numberOfElements\":3\r\n}\r\n```\r\n##content\r\nIn the Dynamic Output API the content returned will always consist of an object. The object will contain some attributes describing the group \r\non which the extraction is based. \r\nAfter the description of the group, an object for each definition within the group will be present. Each definition will contain an \r\nobjects. It is within those object that data retrieved from the ordinary core system will be present. Independently of the numbers of data retrieved,\r\nthe data retrieved will always be within an array.\r\n\r\n##_links\r\n   **first:** The link will return the response from page one. Page one might be empty     \r\n   **prev:**  Only if a previous page exists the link will be present. The link will return the response from the last valid page with a page number less than the current one.          \r\n   **self:**  The link will return the response from the current page.      \r\n   **next:**  Only if a next page exists the link will be present. The link will return the response from the next page.   \r\n   **last:**  The link will return the response from the last page.\r\nThe default start page is 1 and the max page size is 100, the default page size is 25.\r\nStart page (`page`) and page size (`size`) can be controlled by adding query parameters to the URL, for example:\r\n\r\n```json\r\n/common/api/v1/dynamic-output/group-data/PARTY_PAG?param1=BAS&page=1&size=25\r\n```   \r\n\r\n##MetaData\r\n   **numberOfElements:** Field is stating the count of parent elements for the first definition at the current page.      \r\n   **totalElements:** Field is stating the count of parent elements for the entire query.   \r\n   **totalPages:** Number of pages that contains data.      \r\n   **size:** Is the maximum number of elements on a page   \r\n   **page:** is the number of the current page\r\n\r\n## Errors\r\nWhenever an error occurs an error envelope is attached to the response with the following format:\r\n\r\n```json\r\n{\r\n    \"errors\":[\r\n        {\r\n            \"text\":\" T2000.val name_type has a missing or undefined value.\n\"\r\n        },\r\n        {\r\n            \"id\":\"EIUPRUFSDCLLKOWNJCSG\",\r\n            \"type\":\"E\",\r\n            \"text\":\"name_type has a missing or undefined value.\",\r\n            \"itemName\":\"name_type\",\r\n            \"timestamp\":\"2016-10-24T16:12:48.000\"\r\n        }\r\n    ]\r\n}\r\n```\r\nIn the example two messages are shown - the first without `id` is the original exception caught. Messages with `id` are the messages (errors)\r\nfrom the database. All messages are reported in the Message format. \r\n\r\n## Messages\r\nWhen performing business logic in the database layer, warnings are sometimes generated. These warnings are added to the response in a similar \r\nenvelope as errors:\r\n\r\n```json\r\n{\r\n    \"_messages\":[\r\n        {\r\n            \"id\":\"RQTWVPSFHCECQAOULVCQ\",\r\n            \"type\":\"M\",\r\n            \"text\":\"vcoptbzvgsrs\",\r\n            \"timestamp\":\"2016-10-24T16:22:11.000\"\r\n        }\r\n    ]\r\n}\r\n```\r\n## Flex Fields\r\nFlex field mapping is not supported as a separate feature. The mapping of flex fields must be handled within the setup of \r\nthe dynamic output column.  \r\n\r\n## Response Field Filtering\r\nResponse field filtering is not supported as a separate feature. The fields being exposed must be handled within the setup of \r\nthe dynamic output column.  \r\n\r\n***\r\n## API",
    "version": "v3"
  },
  "servers": [
    {
      "url": "/common/api"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "name": "Dynamic Output resource",
      "description": "Operations exposed for dynamic Output"
    }
  ],
  "paths": {
    "/v1/dynamic-output/group-data/ACC_BANKS": {
      "get": {
        "tags": [
          "ACC_BANKS resource"
        ],
        "description": "LOV for banks",
        "operationId": "getAccBanksObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfAccBanks"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/AGT_PAY": {
      "get": {
        "tags": [
          "AGT_PAY resource"
        ],
        "description": "Get payments",
        "operationId": "getAgtPayObject",
        "parameters": [
          {
            "name": "PARTY_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfAgtPay"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/ARCH_LST": {
      "get": {
        "tags": [
          "ARCH_LST resource"
        ],
        "description": "Get list of archives related to a case item",
        "operationId": "getArchLstObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfArchLst"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/AUTO_PROV": {
      "get": {
        "tags": [
          "AUTO_PROV resource"
        ],
        "description": "Retrieve Ato provider",
        "operationId": "getAutoProvObject",
        "parameters": [
          {
            "name": "AGR_LINE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "REGION",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfAutoProv"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/AWD_SIN": {
      "get": {
        "tags": [
          "AWD_SIN resource"
        ],
        "description": "Get claims for cla_case_no",
        "operationId": "getAwdSinObject",
        "parameters": [
          {
            "name": "NRO_SINIESTRO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfAwdSin"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/BANK_LOVS": {
      "get": {
        "tags": [
          "BANK_LOVS resource"
        ],
        "description": "Get info for Bank LOVs",
        "operationId": "getBankLovsObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfBankLovs"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CASEEVENT": {
      "get": {
        "tags": [
          "CASEEVENT resource"
        ],
        "description": "Case with document details",
        "operationId": "getCaseeventObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCaseevent"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CASE_ARCH": {
      "get": {
        "tags": [
          "CASE_ARCH resource"
        ],
        "description": "Get case item info",
        "operationId": "getCaseArchObject",
        "parameters": [
          {
            "name": "ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCaseArch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CASE_DET": {
      "get": {
        "tags": [
          "CASE_DET resource"
        ],
        "description": "Get Case details with lookups",
        "operationId": "getCaseDetObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCaseDet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CASE_ODP": {
      "get": {
        "tags": [
          "CASE_ODP resource"
        ],
        "description": "Overdue case item tasks with parameter",
        "operationId": "getCaseOdpObject",
        "parameters": [
          {
            "name": "N01",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCaseOdp"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CERTHIST": {
      "get": {
        "tags": [
          "CERTHIST resource"
        ],
        "description": "Certificate history",
        "operationId": "getCerthistObject",
        "parameters": [
          {
            "name": "CERTIFICATE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ACTION",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "COVER_START_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "USERID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCerthist"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CERTINFO": {
      "get": {
        "tags": [
          "CERTINFO resource"
        ],
        "description": "Certificate header info",
        "operationId": "getCertinfoObject",
        "parameters": [
          {
            "name": "CERTIFICATE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCertinfo"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CERTS": {
      "get": {
        "tags": [
          "CERTS resource"
        ],
        "description": "Certificate list with status",
        "operationId": "getCertsObject",
        "parameters": [
          {
            "name": "CERTIFICATE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_EVENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_ITEM_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCerts"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CER_SEARCH": {
      "get": {
        "tags": [
          "CER_SEARCH resource"
        ],
        "description": "Certificate search",
        "operationId": "getCerSearchObject",
        "parameters": [
          {
            "name": "SPONSOR",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CERTIFICATE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PRODUCT_CATEGORY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PRODUCT_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "COVER_START_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EXCL_EXP",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCerSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CI_SEARCH": {
      "get": {
        "tags": [
          "CI_SEARCH resource"
        ],
        "description": "Case item search",
        "operationId": "getCiSearchObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "USERID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LETTER_DESC",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WRITING_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCiSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CJD_POL": {
      "get": {
        "tags": [
          "CJD_POL resource"
        ],
        "description": "CJD Policy details",
        "operationId": "getCjdPolObject",
        "parameters": [
          {
            "name": "P_ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "P_INCIDENT_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCjdPol"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAEDITRES": {
      "get": {
        "tags": [
          "CLAEDITRES resource"
        ],
        "description": "Retrieve claim reserve details for claim no",
        "operationId": "getClaeditresObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaeditres"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_CIU": {
      "get": {
        "tags": [
          "CLAIM_CIU resource"
        ],
        "description": "Claim cover and risk options",
        "operationId": "getClaimCiuObject",
        "parameters": [
          {
            "name": "EVENT_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CAUSE_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SUBCAUSE_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OBJECT_SEQ_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "POLICY_LINE_SEQ_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimCiu"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_ENC": {
      "get": {
        "tags": [
          "CLAIM_ENC resource"
        ],
        "description": "Claims which estimate is not changed over period of time",
        "operationId": "getClaimEncObject",
        "parameters": [
          {
            "name": "N01",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLAIM_ITEMS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimEnc"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_NE": {
      "get": {
        "tags": [
          "CLAIM_NE resource"
        ],
        "description": "List of claims with total negative estimate",
        "operationId": "getClaimNeObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimNe"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_ODT": {
      "get": {
        "tags": [
          "CLAIM_ODT resource"
        ],
        "description": "Claims with overdue tasks over period of time",
        "operationId": "getClaimOdtObject",
        "parameters": [
          {
            "name": "N01",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimOdt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_PR": {
      "get": {
        "tags": [
          "CLAIM_PR resource"
        ],
        "description": "Claim item payments that are received in full",
        "operationId": "getClaimPrObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimPr"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_Q": {
      "get": {
        "tags": [
          "CLAIM_Q resource"
        ],
        "description": "Claim questions",
        "operationId": "getClaimQObject",
        "parameters": [
          {
            "name": "PRODUCT_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EVENT_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CAUSE_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RISK_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimQ"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_REFP": {
      "get": {
        "tags": [
          "CLAIM_REFP resource"
        ],
        "description": "Get all referral payments",
        "operationId": "getClaimRefpObject",
        "parameters": [
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimRefp"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_REFR": {
      "get": {
        "tags": [
          "CLAIM_REFR resource"
        ],
        "description": "Get all referral reservations",
        "operationId": "getClaimRefrObject",
        "parameters": [
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimRefr"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAIM_ZE": {
      "get": {
        "tags": [
          "CLAIM_ZE resource"
        ],
        "description": "List of claims with total zero estimate",
        "operationId": "getClaimZeObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaimZe"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAPAY": {
      "get": {
        "tags": [
          "CLAPAY resource"
        ],
        "description": "Retrieve claim number",
        "operationId": "getClapayObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClapay"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLARESERVE": {
      "get": {
        "tags": [
          "CLARESERVE resource"
        ],
        "description": "Retrieve claim reserves for claim no",
        "operationId": "getClareserveObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClareserve"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLASTATUS": {
      "get": {
        "tags": [
          "CLASTATUS resource"
        ],
        "description": "Get custom claim status",
        "operationId": "getClastatusObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClastatus"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLAVARCONF": {
      "get": {
        "tags": [
          "CLAVARCONF resource"
        ],
        "description": "Claim Variables Configuration",
        "operationId": "getClavarconfObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClavarconf"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLA_DOCS": {
      "get": {
        "tags": [
          "CLA_DOCS resource"
        ],
        "description": "Retrieve case items for claim no",
        "operationId": "getClaDocsObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaDocs"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLA_INFMNT": {
      "get": {
        "tags": [
          "CLA_INFMNT resource"
        ],
        "description": "Retrieve informer details for claim no",
        "operationId": "getClaInfmntObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaInfmnt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLA_PLACE": {
      "get": {
        "tags": [
          "CLA_PLACE resource"
        ],
        "description": "Retrieve place details for claim no",
        "operationId": "getClaPlaceObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaPlace"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLA_POLICY": {
      "get": {
        "tags": [
          "CLA_POLICY resource"
        ],
        "description": "Retrieve policy details for claim no",
        "operationId": "getClaPolicyObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaPolicy"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLA_SEARCH": {
      "get": {
        "tags": [
          "CLA_SEARCH resource"
        ],
        "description": "Search claims for given criteria",
        "operationId": "getClaSearchObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EXTEND_YN",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SEARCH",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VAL",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AGENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PROD_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FNOL",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CR_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CR_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INC_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INC_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NTFY_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NTFY_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLA_VAR": {
      "get": {
        "tags": [
          "CLA_VAR resource"
        ],
        "description": "Claim Variables",
        "operationId": "getClaVarObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClaVar"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLP_SRCH": {
      "get": {
        "tags": [
          "CLP_SRCH resource"
        ],
        "description": "Perform Claim Payments Search",
        "operationId": "getClpSrchObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "POLICY_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RECEIVER",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INVOICE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAY_DATE_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAY_DATE_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CUR_PAY_AMT_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CUR_PAY_AMT_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CUR_PAY_AMT_EXACT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAY_STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAY_AMT_CLP_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAY_AMT_CLP_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAY_AMT_CLP_EXACT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClpSrch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLRISKLOV": {
      "get": {
        "tags": [
          "CLRISKLOV resource"
        ],
        "description": "Retrieve possible covers for specified claim",
        "operationId": "getClrisklovObject",
        "parameters": [
          {
            "name": "CLA_EVENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClrisklov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLR_SEARCH": {
      "get": {
        "tags": [
          "CLR_SEARCH resource"
        ],
        "description": "Receiver search",
        "operationId": "getClrSearchObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ROLE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME_ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClrSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLTYPECOEX": {
      "get": {
        "tags": [
          "CLTYPECOEX resource"
        ],
        "description": "Retrieve item_type_combinations with descriptions for EXWAR",
        "operationId": "getCltypecoexObject",
        "parameters": [
          {
            "name": "PRODUCT_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RISK_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCltypecoex"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CLTYPECOMB": {
      "get": {
        "tags": [
          "CLTYPECOMB resource"
        ],
        "description": "Retrieve item_type_combinations with descriptions",
        "operationId": "getCltypecombObject",
        "parameters": [
          {
            "name": "PRODUCT_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCltypecomb"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_CASEALT": {
      "get": {
        "tags": [
          "CL_CASEALT resource"
        ],
        "description": "Get Claim case number alternate",
        "operationId": "getClCasealtObject",
        "parameters": [
          {
            "name": "CLA_EVENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClCasealt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_CONSUM": {
      "get": {
        "tags": [
          "CL_CONSUM resource"
        ],
        "description": "Get Consumer info",
        "operationId": "getClConsumObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClConsum"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_FRDKEEP": {
      "get": {
        "tags": [
          "CL_FRDKEEP resource"
        ],
        "description": "Get Claim details for FraudKeeper",
        "operationId": "getClFrdkeepObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClFrdkeep"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_HDET": {
      "get": {
        "tags": [
          "CL_HDET resource"
        ],
        "description": "Get claim header details",
        "operationId": "getClHdetObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClHdet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_INTPART": {
      "get": {
        "tags": [
          "CL_INTPART resource"
        ],
        "description": "Get interested parties for claim no",
        "operationId": "getClIntpartObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CIVIL_REG_CODE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ROLE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClIntpart"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_PTASK": {
      "get": {
        "tags": [
          "CL_PTASK resource"
        ],
        "description": "Get Payment task detail",
        "operationId": "getClPtaskObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClPtask"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_REPHIST": {
      "get": {
        "tags": [
          "CL_REPHIST resource"
        ],
        "description": "Get extended warranty repairer history",
        "operationId": "getClRephistObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SPONSOR",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClRephist"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_RTASK": {
      "get": {
        "tags": [
          "CL_RTASK resource"
        ],
        "description": "Get Reserve task detail",
        "operationId": "getClRtaskObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClRtask"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_SSU_SUP": {
      "get": {
        "tags": [
          "CL_SSU_SUP resource"
        ],
        "description": "Get Provider Info",
        "operationId": "getClSsuSupObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClSsuSup"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CL_TIMELN": {
      "get": {
        "tags": [
          "CL_TIMELN resource"
        ],
        "description": "Get claims timeline for claim no",
        "operationId": "getClTimelnObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DESCRIPTION",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "USER_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfClTimeln"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/COMM_PAY": {
      "get": {
        "tags": [
          "COMM_PAY resource"
        ],
        "description": "Get commission payment details",
        "operationId": "getCommPayObject",
        "parameters": [
          {
            "name": "START_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "END_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCommPay"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/COMP_DEPT": {
      "get": {
        "tags": [
          "COMP_DEPT resource"
        ],
        "description": "Companies and departments",
        "operationId": "getCompDeptObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCompDept"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/COMUNA": {
      "get": {
        "tags": [
          "COMUNA resource"
        ],
        "description": "Get list of Comunas for given region",
        "operationId": "getComunaObject",
        "parameters": [
          {
            "name": "REGION_CD",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfComuna"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CUSTSEARCH": {
      "get": {
        "tags": [
          "CUSTSEARCH resource"
        ],
        "description": "Get Customers",
        "operationId": "getCustsearchObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BIRTH_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCustsearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/CUST_DTLS": {
      "get": {
        "tags": [
          "CUST_DTLS resource"
        ],
        "description": "Get Customer details",
        "operationId": "getCustDtlsObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfCustDtls"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/DEV_RUT": {
      "get": {
        "tags": [
          "DEV_RUT resource"
        ],
        "description": "Get RUT for testing",
        "operationId": "getDevRutObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfDevRut"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/DSC_MARK": {
      "get": {
        "tags": [
          "DSC_MARK resource"
        ],
        "description": "Get camp_act_no (policy.campaign) and mark_no for campaign",
        "operationId": "getDscMarkObject",
        "parameters": [
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfDscMark"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EWWB_SRCH": {
      "get": {
        "tags": [
          "EWWB_SRCH resource"
        ],
        "description": "Perform extended warranty workbasket Search",
        "operationId": "getEwwbSrchObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INVOICE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SPONSOR",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "REPAIR",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "YDATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RISK_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EXCLUDE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwwbSrch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_BO_PDTL": {
      "get": {
        "tags": [
          "EW_BO_PDTL resource"
        ],
        "description": "Get Buy order payment details",
        "operationId": "getEwBoPdtlObject",
        "parameters": [
          {
            "name": "RE_CLA_ITEM_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwBoPdtl"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_BO_SUM": {
      "get": {
        "tags": [
          "EW_BO_SUM resource"
        ],
        "description": "Get Buy order summary",
        "operationId": "getEwBoSumObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwBoSum"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_CL_ACT": {
      "get": {
        "tags": [
          "EW_CL_ACT resource"
        ],
        "description": "Get Activities",
        "operationId": "getEwClActObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwClAct"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_CL_DET": {
      "get": {
        "tags": [
          "EW_CL_DET resource"
        ],
        "description": "Get extended header detail",
        "operationId": "getEwClDetObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwClDet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_CL_OBS": {
      "get": {
        "tags": [
          "EW_CL_OBS resource"
        ],
        "description": "Get observation",
        "operationId": "getEwClObsObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "USERID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "USER_COMM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FROMDATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TODATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLAIMITEMNO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SUPPLIERCASEID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwClObs"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_INV_DTL": {
      "get": {
        "tags": [
          "EW_INV_DTL resource"
        ],
        "description": "Get pre billing summary",
        "operationId": "getEwInvDtlObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwInvDtl"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_INV_INF": {
      "get": {
        "tags": [
          "EW_INV_INF resource"
        ],
        "description": "Get billing information for Pre-Invoice Creation",
        "operationId": "getEwInvInfObject",
        "parameters": [
          {
            "name": "INVOICED_COMP",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwInvInf"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_INV_LST": {
      "get": {
        "tags": [
          "EW_INV_LST resource"
        ],
        "description": "Get list of work orders on an invoice",
        "operationId": "getEwInvLstObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WORK_ORDER_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwInvLst"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_INV_TOT": {
      "get": {
        "tags": [
          "EW_INV_TOT resource"
        ],
        "description": "Get total amounts of work orders on an invoice",
        "operationId": "getEwInvTotObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwInvTot"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_OC_AMT": {
      "get": {
        "tags": [
          "EW_OC_AMT resource"
        ],
        "description": "Get Buy order amounts to edit",
        "operationId": "getEwOcAmtObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwOcAmt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_OW_QUO": {
      "get": {
        "tags": [
          "EW_OW_QUO resource"
        ],
        "description": "Get Work Order Quote",
        "operationId": "getEwOwQuoObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QUOTE_VERSION",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QUOTE_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwOwQuo"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_OW_SUM": {
      "get": {
        "tags": [
          "EW_OW_SUM resource"
        ],
        "description": "Get Work Order summary",
        "operationId": "getEwOwSumObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwOwSum"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_PRE_INV": {
      "get": {
        "tags": [
          "EW_PRE_INV resource"
        ],
        "description": "Get pre billing invoices for Extended Warranty",
        "operationId": "getEwPreInvObject",
        "parameters": [
          {
            "name": "INVOICE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SUPPLIER_NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INVOICED_COMP",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwPreInv"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_PROTINV": {
      "get": {
        "tags": [
          "EW_PROTINV resource"
        ],
        "description": "Get totals for provider payment invoice",
        "operationId": "getEwProtinvObject",
        "parameters": [
          {
            "name": "INVOICED_COMP",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwProtinv"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_PRO_INV": {
      "get": {
        "tags": [
          "EW_PRO_INV resource"
        ],
        "description": "Get provider payment invoice",
        "operationId": "getEwProInvObject",
        "parameters": [
          {
            "name": "INVOICED_COMP",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwProInv"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_QT_EDIT": {
      "get": {
        "tags": [
          "EW_QT_EDIT resource"
        ],
        "description": "Get Quote items to edit",
        "operationId": "getEwQtEditObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwQtEdit"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_QT_LOVS": {
      "get": {
        "tags": [
          "EW_QT_LOVS resource"
        ],
        "description": "Get LOVs for EW Quotes",
        "operationId": "getEwQtLovsObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwQtLovs"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EW_SP_PAY": {
      "get": {
        "tags": [
          "EW_SP_PAY resource"
        ],
        "description": "Get Sponsor payment list",
        "operationId": "getEwSpPayObject",
        "parameters": [
          {
            "name": "SPONSOR",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_ITEM_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INVOICEDCOMP",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfEwSpPay"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EXTUSERA": {
      "get": {
        "tags": [
          "EXTUSERA resource"
        ],
        "description": "Get External users including created in digital",
        "operationId": "getExtuseraObject",
        "parameters": [
          {
            "name": "FILTER_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfExtusera"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EXTUSERDET": {
      "get": {
        "tags": [
          "EXTUSERDET resource"
        ],
        "description": "Get user details",
        "operationId": "getExtuserdetObject",
        "parameters": [
          {
            "name": "USER_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfExtuserdet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EXT_USER": {
      "get": {
        "tags": [
          "EXT_USER resource"
        ],
        "description": "Get External users",
        "operationId": "getExtUserObject",
        "parameters": [
          {
            "name": "FILTER_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfExtUser"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/EX_SUBITEM": {
      "get": {
        "tags": [
          "EX_SUBITEM resource"
        ],
        "description": "List of excess subitem types",
        "operationId": "getExSubitemObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfExSubitem"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/FAL_WO_UPD": {
      "get": {
        "tags": [
          "FAL_WO_UPD resource"
        ],
        "description": "Get WorkOrder update for Falabella",
        "operationId": "getFalWoUpdObject",
        "parameters": [
          {
            "name": "SSU_SER_SUP_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfFalWoUpd"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/FASTSEARCH": {
      "get": {
        "tags": [
          "FASTSEARCH resource"
        ],
        "description": "Get quick search results",
        "operationId": "getFastsearchObject",
        "parameters": [
          {
            "name": "VAL",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfFastsearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/FNOLSEARCH": {
      "get": {
        "tags": [
          "FNOLSEARCH resource"
        ],
        "description": "Quick Launch claim search",
        "operationId": "getFnolsearchObject",
        "parameters": [
          {
            "name": "FNOL",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfFnolsearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/FNOL_LOV": {
      "get": {
        "tags": [
          "FNOL_LOV resource"
        ],
        "description": "Get list of fnol groups for client",
        "operationId": "getFnolLovObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfFnolLov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/GETNAMEID": {
      "get": {
        "tags": [
          "GETNAMEID resource"
        ],
        "description": "Get name id by user logged in",
        "operationId": "getGetnameidObject",
        "parameters": [
          {
            "name": "USERID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfGetnameid"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/HANDLERLOV": {
      "get": {
        "tags": [
          "HANDLERLOV resource"
        ],
        "description": "LOV of claim handlers",
        "operationId": "getHandlerlovObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfHandlerlov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/INF_SEARCH": {
      "get": {
        "tags": [
          "INF_SEARCH resource"
        ],
        "description": "Retrieve info for specified policy line no",
        "operationId": "getInfSearchObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfInfSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/INTUSER": {
      "get": {
        "tags": [
          "INTUSER resource"
        ],
        "description": "Get internal users",
        "operationId": "getIntuserObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfIntuser"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/INTUSERDET": {
      "get": {
        "tags": [
          "INTUSERDET resource"
        ],
        "description": "Get user details",
        "operationId": "getIntuserdetObject",
        "parameters": [
          {
            "name": "USER_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfIntuserdet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/ITYPECOMB": {
      "get": {
        "tags": [
          "ITYPECOMB resource"
        ],
        "description": "Retrieve item_type_combinations with descriptions",
        "operationId": "getItypecombObject",
        "parameters": [
          {
            "name": "CLA_EVENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfItypecomb"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MAKE_DET": {
      "get": {
        "tags": [
          "MAKE_DET resource"
        ],
        "description": "GET brands ",
        "operationId": "getMakeDetObject",
        "parameters": [
          {
            "name": "CATEGORY_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMakeDet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD": {
      "get": {
        "tags": [
          "MLD resource"
        ],
        "description": "Retrieve Mass load Totals",
        "operationId": "getMldObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMld"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLDS_LOV": {
      "get": {
        "tags": [
          "MLDS_LOV resource"
        ],
        "description": "Retrieve Mass load status LOV",
        "operationId": "getMldsLovObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldsLov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLDT_LOV": {
      "get": {
        "tags": [
          "MLDT_LOV resource"
        ],
        "description": "Retrieve Mass load type LOV",
        "operationId": "getMldtLovObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldtLov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD_CL": {
      "get": {
        "tags": [
          "MLD_CL resource"
        ],
        "description": "Retrieve Claim Massload details",
        "operationId": "getMldClObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INCIDENT_DATE_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INCIDENT_DATE_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INCIDENT_DATE_EXACT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "REFERRALS_Y_N",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "POLICY_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "COVER",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldCl"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD_CUST": {
      "get": {
        "tags": [
          "MLD_CUST resource"
        ],
        "description": "Retrieve Customer Massload details",
        "operationId": "getMldCustObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME_ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DOC_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldCust"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD_DTLS": {
      "get": {
        "tags": [
          "MLD_DTLS resource"
        ],
        "description": "Retrieve Mass load details",
        "operationId": "getMldDtlsObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldDtls"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD_LIST": {
      "get": {
        "tags": [
          "MLD_LIST resource"
        ],
        "description": "Retrieve Mass load details List",
        "operationId": "getMldListObject",
        "parameters": [
          {
            "name": "CASE_SUB_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LOAD_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WRITING_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ACTION_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RECORD_USERID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ACTION_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RECORDS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldList"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD_PAY": {
      "get": {
        "tags": [
          "MLD_PAY resource"
        ],
        "description": "Retrieve Payment Massload details",
        "operationId": "getMldPayObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INVOICE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEM_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "REFERRALS_Y_N",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEMSUB_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAYMENT_AMT_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAYMENT_AMT_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAYMENT_AMT_EXACT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PAYMENT_CURRENCY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldPay"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MLD_RSV": {
      "get": {
        "tags": [
          "MLD_RSV resource"
        ],
        "description": "Retrieve Reserve Massload details",
        "operationId": "getMldRsvObject",
        "parameters": [
          {
            "name": "REQUEST_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLA_CASE_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEM_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "REFERRALS_Y_N",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SUBITEM_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NEW_RESERVE_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NEW_RESERVE_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NEW_RESERVE_EXACT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMldRsv"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MM_DET": {
      "get": {
        "tags": [
          "MM_DET resource"
        ],
        "description": "GET brands and models",
        "operationId": "getMmDetObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfMmDet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/MODEL_DET": {
      "get": {
        "tags": [
          "MODEL_DET resource"
        ],
        "description": "Get models",
        "operationId": "getModelDetObject",
        "parameters": [
          {
            "name": "MAKE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CATEGORY_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfModelDet"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/NAMEIDCRC": {
      "get": {
        "tags": [
          "NAMEIDCRC resource"
        ],
        "description": "Get party IDs by civilreg",
        "operationId": "getNameidcrcObject",
        "parameters": [
          {
            "name": "CIVIL_REG_CODE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfNameidcrc"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/ORDERBY": {
      "get": {
        "tags": [
          "ORDERBY resource"
        ],
        "description": "ORDERBY",
        "operationId": "getOrderbyObject",
        "parameters": [
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "COLUMN",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ORDER",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfOrderby"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/ORDERBY2": {
      "get": {
        "tags": [
          "ORDERBY2 resource"
        ],
        "description": "ORDERBY2",
        "operationId": "getOrderby2Object",
        "parameters": [
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ORDER",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfOrderby2"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/OWN_DATA": {
      "get": {
        "tags": [
          "OWN_DATA resource"
        ],
        "description": "Customers Own Data",
        "operationId": "getOwnDataObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "Identification of the Party.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfOwnData"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PAYMETHOD": {
      "get": {
        "tags": [
          "PAYMETHOD resource"
        ],
        "description": "LOV for payment methods",
        "operationId": "getPaymethodObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPaymethod"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PDOCHIST": {
      "get": {
        "tags": [
          "PDOCHIST resource"
        ],
        "description": "Retrieve history docs",
        "operationId": "getPdochistObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdochist"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PD_ACST": {
      "get": {
        "tags": [
          "PD_ACST resource"
        ],
        "description": "Portal dashboard activity status detail",
        "operationId": "getPdAcstObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdAcst"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PD_CLCL": {
      "get": {
        "tags": [
          "PD_CLCL resource"
        ],
        "description": "Portal dashboard closed claim counts",
        "operationId": "getPdClclObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdClcl"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PD_CLST": {
      "get": {
        "tags": [
          "PD_CLST resource"
        ],
        "description": "Portal dashboard Claim status detail",
        "operationId": "getPdClstObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdClst"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PD_RCNT": {
      "get": {
        "tags": [
          "PD_RCNT resource"
        ],
        "description": "Portal dashboard referral  count",
        "operationId": "getPdRcntObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdRcnt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PD_ROLES": {
      "get": {
        "tags": [
          "PD_ROLES resource"
        ],
        "description": "Get list of roles for logged user",
        "operationId": "getPdRolesObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdRoles"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PD_VIEW": {
      "get": {
        "tags": [
          "PD_VIEW resource"
        ],
        "description": "Portal dashboard overview",
        "operationId": "getPdViewObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPdView"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PGE_SEARCH": {
      "get": {
        "tags": [
          "PGE_SEARCH resource"
        ],
        "description": "PGE provider list search",
        "operationId": "getPgeSearchObject",
        "parameters": [
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EMAIL",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "REGION",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CATEGORY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SS_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPgeSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POLHOLDER": {
      "get": {
        "tags": [
          "POLHOLDER resource"
        ],
        "description": "Get policy holder for policy",
        "operationId": "getPolholderObject",
        "parameters": [
          {
            "name": "POLICY_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INCIDENT_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolholder"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POLICY": {
      "get": {
        "tags": [
          "POLICY resource"
        ],
        "description": "Policy information",
        "operationId": "getPolicyObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TRANS_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolicy"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POL_CLAIMS": {
      "get": {
        "tags": [
          "POL_CLAIMS resource"
        ],
        "description": "Retrieve claims for given policy",
        "operationId": "getPolClaimsObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLAIM_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RISK_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INC_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IND_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IND_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "COST_FROM",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "COST_TO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolClaims"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POL_CLAIMT": {
      "get": {
        "tags": [
          "POL_CLAIMT resource"
        ],
        "description": "Retrieve claim totals for given policy",
        "operationId": "getPolClaimtObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolClaimt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POL_FIELDS": {
      "get": {
        "tags": [
          "POL_FIELDS resource"
        ],
        "description": "Get specific policy fields for integration",
        "operationId": "getPolFieldsObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolFields"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POL_MTAS": {
      "get": {
        "tags": [
          "POL_MTAS resource"
        ],
        "description": "Retrieve endorsements for given policy",
        "operationId": "getPolMtasObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolMtas"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POL_SEARCH": {
      "get": {
        "tags": [
          "POL_SEARCH resource"
        ],
        "description": "Search policy",
        "operationId": "getPolSearchObject",
        "parameters": [
          {
            "name": "POLICY_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CIVIL_REG_CODE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SERVICE_AGENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PROD_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PROD_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ACTIVEONLY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "INCIDENT_DATE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SORT_BY",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPolSearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/POST_AREA": {
      "get": {
        "tags": [
          "POST_AREA resource"
        ],
        "description": "LOV for post areas",
        "operationId": "getPostAreaObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfPostArea"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PRODEVECAU": {
      "get": {
        "tags": [
          "PRODEVECAU resource"
        ],
        "description": "Product cover codes for event and cause",
        "operationId": "getProdevecauObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfProdevecau"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/PROF_COMP": {
      "get": {
        "tags": [
          "PROF_COMP resource"
        ],
        "description": "Get list of Portal profiles for user",
        "operationId": "getProfCompObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfProfComp"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/REGION": {
      "get": {
        "tags": [
          "REGION resource"
        ],
        "description": "Get list of Regions",
        "operationId": "getRegionObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfRegion"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/RELAT_LOV": {
      "get": {
        "tags": [
          "RELAT_LOV resource"
        ],
        "description": "Get Relation details for third party and service_supplier",
        "operationId": "getRelatLovObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfRelatLov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/RES_AMT": {
      "get": {
        "tags": [
          "RES_AMT resource"
        ],
        "description": "Get reservas default amounts",
        "operationId": "getResAmtObject",
        "parameters": [
          {
            "name": "PRODUCT_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EVENT_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CAUSE_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RISK_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfResAmt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/RISK_DESC": {
      "get": {
        "tags": [
          "RISK_DESC resource"
        ],
        "description": "Product Risk Description",
        "operationId": "getRiskDescObject",
        "parameters": [
          {
            "name": "PROD_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LANGUAGE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RISK_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfRiskDesc"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SAP_ADR": {
      "get": {
        "tags": [
          "SAP_ADR resource"
        ],
        "description": "Get address for given name id",
        "operationId": "getSapAdrObject",
        "parameters": [
          {
            "name": "ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSapAdr"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SAP_BANK": {
      "get": {
        "tags": [
          "SAP_BANK resource"
        ],
        "description": "Get bank details for given name id",
        "operationId": "getSapBankObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSapBank"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SAP_PER": {
      "get": {
        "tags": [
          "SAP_PER resource"
        ],
        "description": "Get client details for given name id",
        "operationId": "getSapPerObject",
        "parameters": [
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSapPer"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SCO_CUOTA": {
      "get": {
        "tags": [
          "SCO_CUOTA resource"
        ],
        "description": "Get instalments for policy_no",
        "operationId": "getScoCuotaObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfScoCuota"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SCO_CUOTA2": {
      "get": {
        "tags": [
          "SCO_CUOTA2 resource"
        ],
        "description": "Get instalments for policy_no and trans_id",
        "operationId": "getScoCuota2Object",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TRANS_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfScoCuota2"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SCO_PAY": {
      "get": {
        "tags": [
          "SCO_PAY resource"
        ],
        "description": "Get payments for policy_no",
        "operationId": "getScoPayObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfScoPay"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SCO_POL": {
      "get": {
        "tags": [
          "SCO_POL resource"
        ],
        "description": "Get latest policy data",
        "operationId": "getScoPolObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfScoPol"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SCO_PRESIN": {
      "get": {
        "tags": [
          "SCO_PRESIN resource"
        ],
        "description": "Get claims for cla_case_no",
        "operationId": "getScoPresinObject",
        "parameters": [
          {
            "name": "CLA_CASE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfScoPresin"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SCO_RISKS": {
      "get": {
        "tags": [
          "SCO_RISKS resource"
        ],
        "description": "Get risk breakdown for given policyId",
        "operationId": "getScoRisksObject",
        "parameters": [
          {
            "name": "POLICY_SEQ_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfScoRisks"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SL_INSTL": {
      "get": {
        "tags": [
          "SL_INSTL resource"
        ],
        "description": "Returns installments for given policy",
        "operationId": "getSlInstlObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ONLY_NEWEST",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSlInstl"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SL_LOC": {
      "get": {
        "tags": [
          "SL_LOC resource"
        ],
        "description": "Get linked addresses for given name id",
        "operationId": "getSlLocObject",
        "parameters": [
          {
            "name": "OWNER",
            "in": "query",
            "required": true,
            "schema": {}
          },
          {
            "name": "POST_AREA",
            "in": "query",
            "required": true,
            "schema": {}
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSlLoc"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SL_POL_AL2": {
      "get": {
        "tags": [
          "SL_POL_AL2 resource"
        ],
        "description": "Get policy no for given policy_no_alt, year and mta",
        "operationId": "getSlPolAl2Object",
        "parameters": [
          {
            "name": "POLICY_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RENEWAL_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENDORSEMENT_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSlPolAl2"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SL_POL_ALT": {
      "get": {
        "tags": [
          "SL_POL_ALT resource"
        ],
        "description": "Get policy no for given policy_no_alt",
        "operationId": "getSlPolAltObject",
        "parameters": [
          {
            "name": "POLICY_NO_ALT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSlPolAlt"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SL_POL_DAT": {
      "get": {
        "tags": [
          "SL_POL_DAT resource"
        ],
        "description": "Get next cover_start_date for given policy_no",
        "operationId": "getSlPolDatObject",
        "parameters": [
          {
            "name": "POLICY_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSlPolDat"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SL_RUT_POL": {
      "get": {
        "tags": [
          "SL_RUT_POL resource"
        ],
        "description": "Get policies for given RUT",
        "operationId": "getSlRutPolObject",
        "parameters": [
          {
            "name": "CIVIL_REG_CODE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSlRutPol"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SPONLOV": {
      "get": {
        "tags": [
          "SPONLOV resource"
        ],
        "description": "Sponsor/broker list of values",
        "operationId": "getSponlovObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSponlov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SS_LOV": {
      "get": {
        "tags": [
          "SS_LOV resource"
        ],
        "description": "LOV of service suppliers",
        "operationId": "getSsLovObject",
        "parameters": [
          {
            "name": "PROD_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SSU_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSsLov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/SUBSTLOV": {
      "get": {
        "tags": [
          "SUBSTLOV resource"
        ],
        "description": "Get claims substatus for status",
        "operationId": "getSubstlovObject",
        "parameters": [
          {
            "name": "STATUS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfSubstlov"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/TARIFF": {
      "get": {
        "tags": [
          "TARIFF resource"
        ],
        "description": "Get tariff lookup",
        "operationId": "getTariffObject",
        "parameters": [
          {
            "name": "PRODUCT_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CLASS",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VALUE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RESULT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WHERE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfTariff"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/TARIFFCUBE": {
      "get": {
        "tags": [
          "TARIFFCUBE resource"
        ],
        "description": "Get tariff lookup",
        "operationId": "getTariffcubeObject",
        "parameters": [
          {
            "name": "PRODUCT_LINE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM01",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM02",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM03",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM04",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM05",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM06",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM07",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM08",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM09",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DIM10",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfTariffcube"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/TOTCLAIM": {
      "get": {
        "tags": [
          "TOTCLAIM resource"
        ],
        "description": "Calc total liability amounts",
        "operationId": "getTotclaimObject",
        "parameters": [
          {
            "name": "CERTIFICATE_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfTotclaim"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/USERSEARCH": {
      "get": {
        "tags": [
          "USERSEARCH resource"
        ],
        "description": "Get users",
        "operationId": "getUsersearchObject",
        "parameters": [
          {
            "name": "USER_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID_NO",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EMAIL",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RUT",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "USER_TYPE",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PROFILE_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfUsersearch"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/USER_PROF": {
      "get": {
        "tags": [
          "USER_PROF resource"
        ],
        "description": "Get Profiles",
        "operationId": "getUserProfObject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfUserProf"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/VAL_ACCESS": {
      "get": {
        "tags": [
          "VAL_ACCESS resource"
        ],
        "description": "Verify that the user has access to the resource",
        "operationId": "getValAccessObject",
        "parameters": [
          {
            "name": "PORTAL_ID",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfValAccess"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    },
    "/v1/dynamic-output/group-data/XLA_FILTER": {
      "get": {
        "tags": [
          "XLA_FILTER resource"
        ],
        "description": "Xla reference lookup filtered by codes",
        "operationId": "getXlaFilterObject",
        "parameters": [
          {
            "name": "TABLE_NAME",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CSV_FILTER",
            "in": "query",
            "description": "The table dynamic_output_column does not contain information regarding the attribute. Please update the column swagger_attr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to start at",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Maximum numbers of element on one page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object returned ok.",
            "headers": {
              "Cache-Control": {
                "description": "max-age=3600",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseOfXlaFilter"
                }
              }
            }
          },
          "404": {
            "description": "A Data Output Group does not match the group name or user is not allowed",
            "content": {}
          },
          "500": {
            "description": "An error occurred in the Dynamic Output API ",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Annotation": {
        "type": "object"
      },
      "PageResponseOfAccBanks": {
        "title": "PageResponseOfAccBanks",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AccBanks"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "AccBanks": {
        "required": [
          "accBanks",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "ACC_BANKS"
          },
          "description": {
            "type": "string",
            "example": "LOV for banks"
          },
          "accBanks": {
            "$ref": "#/components/schemas/AccBanksDef"
          }
        }
      },
      "AccBanksDef": {
        "required": [
          "dodAccBanksArray"
        ],
        "type": "object",
        "properties": {
          "dodAccBanksArray": {
            "$ref": "#/components/schemas/AccBanksDodAccBanksArray"
          }
        }
      },
      "AccBanksDodAccBanksArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AccBanksDodAccBanks"
        }
      },
      "AccBanksDodAccBanks": {
        "type": "object",
        "properties": {
          "bankIdNo": {
            "type": "object"
          },
          "bankDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfAgtPay": {
        "title": "PageResponseOfAgtPay",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AgtPay"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "AgtPay": {
        "required": [
          "agtPay",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "AGT_PAY"
          },
          "description": {
            "type": "string",
            "example": "Get payments"
          },
          "agtPay": {
            "$ref": "#/components/schemas/AgtPayDef"
          }
        }
      },
      "AgtPayDef": {
        "required": [
          "agtLovArray"
        ],
        "type": "object",
        "properties": {
          "agtLovArray": {
            "$ref": "#/components/schemas/AgtPayAgtLovArray"
          }
        }
      },
      "AgtPayAgtLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AgtPayAgtLov"
        }
      },
      "AgtPayAgtLov": {
        "type": "object",
        "properties": {
          "accPaymentNo": {
            "type": "object"
          },
          "dueDate": {
            "type": "object"
          },
          "amount": {
            "type": "object"
          },
          "currency": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "paymentText": {
            "type": "object"
          },
          "flexDate01": {
            "type": "object"
          },
          "flexDate02": {
            "type": "object"
          },
          "flexDate03": {
            "type": "object"
          },
          "flexDate04": {
            "type": "object"
          },
          "flexDate05": {
            "type": "object"
          },
          "flexDate06": {
            "type": "object"
          },
          "flexDate07": {
            "type": "object"
          },
          "flexDate08": {
            "type": "object"
          },
          "flexDate09": {
            "type": "object"
          },
          "flexDate10": {
            "type": "object"
          },
          "flexString01": {
            "type": "object"
          },
          "flexString02": {
            "type": "object"
          },
          "flexString03": {
            "type": "object"
          },
          "flexString04": {
            "type": "object"
          },
          "flexString05": {
            "type": "object"
          },
          "flexString06": {
            "type": "object"
          },
          "flexString07": {
            "type": "object"
          },
          "flexString08": {
            "type": "object"
          },
          "flexString09": {
            "type": "object"
          },
          "flexString10": {
            "type": "object"
          },
          "flexNumber01": {
            "type": "object"
          },
          "flexNumber02": {
            "type": "object"
          },
          "flexNumber03": {
            "type": "object"
          },
          "flexNumber04": {
            "type": "object"
          },
          "flexNumber05": {
            "type": "object"
          },
          "flexNumber06": {
            "type": "object"
          },
          "flexNumber07": {
            "type": "object"
          },
          "flexNumber08": {
            "type": "object"
          },
          "flexNumber09": {
            "type": "object"
          },
          "flexNumber10": {
            "type": "object"
          }
        }
      },
      "PageResponseOfArchLst": {
        "title": "PageResponseOfArchLst",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ArchLst"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ArchLst": {
        "required": [
          "archLst",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "ARCH_LST"
          },
          "description": {
            "type": "string",
            "example": "Get list of archives related to a case item"
          },
          "archLst": {
            "$ref": "#/components/schemas/ArchLstDef"
          }
        }
      },
      "ArchLstDef": {
        "required": [
          "dodArchLstArray"
        ],
        "type": "object",
        "properties": {
          "dodArchLstArray": {
            "$ref": "#/components/schemas/ArchLstDodArchLstArray"
          }
        }
      },
      "ArchLstDodArchLstArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ArchLstDodArchLst"
        }
      },
      "ArchLstDodArchLst": {
        "type": "object",
        "properties": {
          "attachmentId": {
            "type": "object"
          },
          "fileName": {
            "type": "object"
          },
          "attachmentDescription": {
            "type": "object"
          },
          "attachmentDescriptionLibre": {
            "type": "object"
          },
          "obsolete": {
            "type": "object"
          },
          "sensitiveFaCode": {
            "type": "object"
          }
        }
      },
      "PageResponseOfAutoProv": {
        "title": "PageResponseOfAutoProv",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AutoProv"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "AutoProv": {
        "required": [
          "autoProv",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "AUTO_PROV"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Ato provider"
          },
          "autoProv": {
            "$ref": "#/components/schemas/AutoProvDef"
          }
        }
      },
      "AutoProvDef": {
        "required": [
          "dodAutoProvArray"
        ],
        "type": "object",
        "properties": {
          "dodAutoProvArray": {
            "$ref": "#/components/schemas/AutoProvDodAutoProvArray"
          }
        }
      },
      "AutoProvDodAutoProvArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AutoProvDodAutoProv"
        }
      },
      "AutoProvDodAutoProv": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "serviceSupplierType": {
            "type": "object"
          }
        }
      },
      "PageResponseOfAwdSin": {
        "title": "PageResponseOfAwdSin",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/AwdSin"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "AwdSin": {
        "required": [
          "awdSin",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "AWD_SIN"
          },
          "description": {
            "type": "string",
            "example": "Get claims for cla_case_no"
          },
          "awdSin": {
            "$ref": "#/components/schemas/AwdSinDef"
          }
        }
      },
      "AwdSinDef": {
        "required": [
          "sbv92DodAwdSiniestroArray"
        ],
        "type": "object",
        "properties": {
          "sbv92DodAwdSiniestroArray": {
            "$ref": "#/components/schemas/AwdSinSbv92DodAwdSiniestroArray"
          }
        }
      },
      "AwdSinSbv92DodAwdSiniestroArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AwdSinSbv92DodAwdSiniestro"
        }
      },
      "AwdSinSbv92DodAwdSiniestro": {
        "type": "object",
        "properties": {
          "nroSiniestro": {
            "type": "object"
          },
          "estado": {
            "type": "object"
          },
          "codEstado": {
            "type": "object"
          },
          "poliza": {
            "type": "object"
          },
          "certificado": {
            "type": "object"
          },
          "rutAsegurado": {
            "type": "object"
          },
          "asegurado": {
            "type": "object"
          },
          "afectado": {
            "type": "object"
          },
          "rutAfectado": {
            "type": "object"
          },
          "fechaPerdida": {
            "type": "object"
          },
          "lugarPerdida": {
            "type": "object"
          },
          "descripcionPerdida": {
            "type": "object"
          },
          "codCatastrofe": {
            "type": "object"
          },
          "idCorredor": {
            "type": "object"
          },
          "corredor": {
            "type": "object"
          },
          "idLiquidador": {
            "type": "object"
          },
          "liquidador": {
            "type": "object"
          },
          "lineaNegocio": {
            "type": "object"
          },
          "ajustador": {
            "type": "object"
          },
          "inicioVigencia": {
            "type": "object"
          },
          "terminoVigencia": {
            "type": "object"
          },
          "ramo": {
            "type": "object"
          },
          "fechaReporteSiniestro": {
            "type": "object"
          },
          "fechaCreacion": {
            "type": "object"
          },
          "moneda": {
            "type": "object"
          },
          "reservaIndemnizacion": {
            "type": "object"
          },
          "reservaHonorarios": {
            "type": "object"
          },
          "porcentajeSeguidor": {
            "type": "object"
          }
        }
      },
      "PageResponseOfBankLovs": {
        "title": "PageResponseOfBankLovs",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/BankLovs"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "BankLovs": {
        "required": [
          "bankLovs",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "BANK_LOVS"
          },
          "description": {
            "type": "string",
            "example": "Get info for Bank LOVs"
          },
          "bankLovs": {
            "$ref": "#/components/schemas/BankLovsDef"
          }
        }
      },
      "BankLovsDef": {
        "required": [
          "dodBankLovsArray"
        ],
        "type": "object",
        "properties": {
          "dodBankLovsArray": {
            "$ref": "#/components/schemas/BankLovsDodBankLovsArray"
          }
        }
      },
      "BankLovsDodBankLovsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BankLovsDodBankLovs"
        }
      },
      "BankLovsDodBankLovs": {
        "type": "object",
        "properties": {
          "dummy": {
            "type": "object"
          },
          "banksArray": {
            "$ref": "#/components/schemas/BankLovsBanksArray"
          },
          "paymentMethodsArray": {
            "$ref": "#/components/schemas/BankLovsPaymentMethodsArray"
          }
        }
      },
      "BankLovsBanksArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BankLovsBanks"
        }
      },
      "BankLovsBanks": {
        "type": "object",
        "properties": {
          "bankIdNo": {
            "type": "object"
          },
          "bankCode": {
            "type": "object"
          },
          "bankCodeType": {
            "type": "object"
          },
          "notes": {
            "type": "object"
          }
        }
      },
      "BankLovsPaymentMethodsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BankLovsPaymentMethods"
        }
      },
      "BankLovsPaymentMethods": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCaseevent": {
        "title": "PageResponseOfCaseevent",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Caseevent"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Caseevent": {
        "required": [
          "caseevent",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CASEEVENT"
          },
          "description": {
            "type": "string",
            "example": "Case with document details"
          },
          "caseevent": {
            "$ref": "#/components/schemas/CaseeventDef"
          }
        }
      },
      "CaseeventDef": {
        "required": [
          "caseItemArray"
        ],
        "type": "object",
        "properties": {
          "caseItemArray": {
            "$ref": "#/components/schemas/CaseeventCaseItemArray"
          }
        }
      },
      "CaseeventCaseItemArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseeventCaseItem"
        }
      },
      "CaseeventCaseItem": {
        "type": "object",
        "properties": {
          "caseType": {
            "type": "object"
          },
          "caseSubType": {
            "type": "object"
          },
          "programId": {
            "type": "object"
          },
          "letterDesc": {
            "type": "object"
          },
          "userComm": {
            "type": "object"
          },
          "nameIdNo": {
            "type": "object"
          },
          "receiverIdNo": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "agrLineNo": {
            "type": "object"
          },
          "objectNo": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "claSubcaseNo": {
            "type": "object"
          },
          "claItemNo": {
            "type": "object"
          },
          "accountNo": {
            "type": "object"
          },
          "accPaymentNo": {
            "type": "object"
          },
          "printRequestArray": {
            "$ref": "#/components/schemas/CaseeventPrintRequestArray"
          }
        }
      },
      "CaseeventPrintRequestArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseeventPrintRequest"
        }
      },
      "CaseeventPrintRequest": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "language": {
            "type": "object"
          },
          "userComm": {
            "type": "object"
          },
          "nameIdNo": {
            "type": "object"
          },
          "receiverIdNo": {
            "type": "object"
          },
          "transId": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "policySeqNo": {
            "type": "object"
          },
          "agrLineNo": {
            "type": "object"
          },
          "agrLineSeqNo": {
            "type": "object"
          },
          "objSeqNo": {
            "type": "object"
          },
          "claimEventNo": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "claSubcaseNo": {
            "type": "object"
          },
          "claItemNo": {
            "type": "object"
          },
          "accountNo": {
            "type": "object"
          },
          "accPaymentNo": {
            "type": "object"
          },
          "printArgumentArray": {
            "$ref": "#/components/schemas/CaseeventPrintArgumentArray"
          }
        }
      },
      "CaseeventPrintArgumentArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseeventPrintArgument"
        }
      },
      "CaseeventPrintArgument": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCaseArch": {
        "title": "PageResponseOfCaseArch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CaseArch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CaseArch": {
        "required": [
          "caseArch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CASE_ARCH"
          },
          "description": {
            "type": "string",
            "example": "Get case item info"
          },
          "caseArch": {
            "$ref": "#/components/schemas/CaseArchDef"
          }
        }
      },
      "CaseArchDef": {
        "required": [
          "dodCaseArchArray"
        ],
        "type": "object",
        "properties": {
          "dodCaseArchArray": {
            "$ref": "#/components/schemas/CaseArchDodCaseArchArray"
          }
        }
      },
      "CaseArchDodCaseArchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseArchDodCaseArch"
        }
      },
      "CaseArchDodCaseArch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "fileName": {
            "type": "object"
          },
          "date": {
            "type": "object"
          },
          "partyId": {
            "type": "object"
          },
          "caseType": {
            "type": "object"
          },
          "caseSubType": {
            "type": "object"
          },
          "receiverId": {
            "type": "object"
          },
          "dodCaseArch1Array": {
            "$ref": "#/components/schemas/CaseArchDodCaseArch1Array"
          }
        }
      },
      "CaseArchDodCaseArch1Array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseArchDodCaseArch1"
        }
      },
      "CaseArchDodCaseArch1": {
        "type": "object",
        "properties": {
          "attachementId": {
            "type": "object"
          },
          "id": {
            "type": "object"
          },
          "fileName": {
            "type": "object"
          },
          "archiveDate": {
            "type": "object"
          },
          "obsolete": {
            "type": "object"
          },
          "sensitiveFaCode": {
            "type": "object"
          },
          "attachmentDescription": {
            "type": "object"
          },
          "downloadName": {
            "type": "object"
          },
          "userName": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCaseDet": {
        "title": "PageResponseOfCaseDet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CaseDet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CaseDet": {
        "required": [
          "caseDet",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CASE_DET"
          },
          "description": {
            "type": "string",
            "example": "Get Case details with lookups"
          },
          "caseDet": {
            "$ref": "#/components/schemas/CaseDetDef"
          }
        }
      },
      "CaseDetDef": {
        "required": [
          "dodCaseDetArray"
        ],
        "type": "object",
        "properties": {
          "dodCaseDetArray": {
            "$ref": "#/components/schemas/CaseDetDodCaseDetArray"
          }
        }
      },
      "CaseDetDodCaseDetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseDetDodCaseDet"
        }
      },
      "CaseDetDodCaseDet": {
        "type": "object",
        "properties": {
          "caseType": {
            "type": "object"
          },
          "caseTypeDesc": {
            "type": "object"
          },
          "caseSubTypeDesc": {
            "type": "object"
          },
          "caseSubType": {
            "type": "object"
          },
          "recordTimestamp": {
            "type": "object"
          },
          "timestamp": {
            "type": "object"
          },
          "letterDesc": {
            "type": "object"
          },
          "claimNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCaseOdp": {
        "title": "PageResponseOfCaseOdp",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CaseOdp"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CaseOdp": {
        "required": [
          "caseOdp",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CASE_ODP"
          },
          "description": {
            "type": "string",
            "example": "Overdue case item tasks with parameter"
          },
          "caseOdp": {
            "$ref": "#/components/schemas/CaseOdpDef"
          }
        }
      },
      "CaseOdpDef": {
        "required": [
          "tasksArray"
        ],
        "type": "object",
        "properties": {
          "tasksArray": {
            "$ref": "#/components/schemas/CaseOdpTasksArray"
          }
        }
      },
      "CaseOdpTasksArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CaseOdpTasks"
        }
      },
      "CaseOdpTasks": {
        "type": "object"
      },
      "PageResponseOfCerthist": {
        "title": "PageResponseOfCerthist",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Certhist"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Certhist": {
        "required": [
          "certhist",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CERTHIST"
          },
          "description": {
            "type": "string",
            "example": "Certificate history"
          },
          "certhist": {
            "$ref": "#/components/schemas/CerthistDef"
          }
        }
      },
      "CerthistDef": {
        "required": [
          "dodCerthistArray"
        ],
        "type": "object",
        "properties": {
          "dodCerthistArray": {
            "$ref": "#/components/schemas/CerthistDodCerthistArray"
          }
        }
      },
      "CerthistDodCerthistArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CerthistDodCerthist"
        }
      },
      "CerthistDodCerthist": {
        "type": "object",
        "properties": {
          "action": {
            "type": "object"
          },
          "coverStartDate": {
            "type": "object"
          },
          "userid": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCertinfo": {
        "title": "PageResponseOfCertinfo",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Certinfo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Certinfo": {
        "required": [
          "certinfo",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CERTINFO"
          },
          "description": {
            "type": "string",
            "example": "Certificate header info"
          },
          "certinfo": {
            "$ref": "#/components/schemas/CertinfoDef"
          }
        }
      },
      "CertinfoDef": {
        "required": [
          "dodCertinfoArray"
        ],
        "type": "object",
        "properties": {
          "dodCertinfoArray": {
            "$ref": "#/components/schemas/CertinfoDodCertinfoArray"
          }
        }
      },
      "CertinfoDodCertinfoArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CertinfoDodCertinfo"
        }
      },
      "CertinfoDodCertinfo": {
        "type": "object",
        "properties": {
          "sponsor": {
            "type": "object"
          },
          "tienda": {
            "type": "object"
          },
          "tarifa": {
            "type": "object"
          },
          "plan": {
            "type": "object"
          },
          "endoso": {
            "type": "object"
          },
          "riesgo": {
            "type": "object"
          },
          "vigencia": {
            "type": "object"
          },
          "purchaseDate": {
            "type": "object"
          },
          "duductible": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "categoria": {
            "type": "object"
          },
          "precio": {
            "type": "object"
          },
          "cspc": {
            "type": "object"
          },
          "brand": {
            "type": "object"
          },
          "barcode": {
            "type": "object"
          },
          "marca": {
            "type": "object"
          },
          "modelo": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "nombre": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "phone": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "riskNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCerts": {
        "title": "PageResponseOfCerts",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Certs"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Certs": {
        "required": [
          "certs",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CERTS"
          },
          "description": {
            "type": "string",
            "example": "Certificate list with status"
          },
          "certs": {
            "$ref": "#/components/schemas/CertsDef"
          }
        }
      },
      "CertsDef": {
        "required": [
          "dodCertsArray"
        ],
        "type": "object",
        "properties": {
          "dodCertsArray": {
            "$ref": "#/components/schemas/CertsDodCertsArray"
          }
        }
      },
      "CertsDodCertsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CertsDodCerts"
        }
      },
      "CertsDodCerts": {
        "type": "object",
        "properties": {
          "claCaseNo": {
            "type": "object"
          },
          "claEventNo": {
            "type": "object"
          },
          "claItemNo": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCerSearch": {
        "title": "PageResponseOfCerSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CerSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CerSearch": {
        "required": [
          "cerSearch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CER_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "Certificate search"
          },
          "cerSearch": {
            "$ref": "#/components/schemas/CerSearchDef"
          }
        }
      },
      "CerSearchDef": {
        "required": [
          "dodCerSearchArray"
        ],
        "type": "object",
        "properties": {
          "dodCerSearchArray": {
            "$ref": "#/components/schemas/CerSearchDodCerSearchArray"
          }
        }
      },
      "CerSearchDodCerSearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CerSearchDodCerSearch"
        }
      },
      "CerSearchDodCerSearch": {
        "type": "object",
        "properties": {
          "certificateNo": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "productCategory": {
            "type": "object"
          },
          "productType": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "coverStartDate": {
            "type": "object"
          },
          "brand": {
            "type": "object"
          },
          "history": {
            "type": "object"
          },
          "namerut": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          },
          "sortBy": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCiSearch": {
        "title": "PageResponseOfCiSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CiSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CiSearch": {
        "required": [
          "ciSearch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CI_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "Case item search"
          },
          "ciSearch": {
            "$ref": "#/components/schemas/CiSearchDef"
          }
        }
      },
      "CiSearchDef": {
        "required": [
          "dodCiSearchArray"
        ],
        "type": "object",
        "properties": {
          "dodCiSearchArray": {
            "$ref": "#/components/schemas/CiSearchDodCiSearchArray"
          }
        }
      },
      "CiSearchDodCiSearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CiSearchDodCiSearch"
        }
      },
      "CiSearchDodCiSearch": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "object"
          },
          "letterDesc": {
            "type": "object"
          },
          "writingDate": {
            "type": "object"
          },
          "requestId": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCjdPol": {
        "title": "PageResponseOfCjdPol",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CjdPol"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CjdPol": {
        "required": [
          "cjdPol",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CJD_POL"
          },
          "description": {
            "type": "string",
            "example": "CJD Policy details"
          },
          "cjdPol": {
            "$ref": "#/components/schemas/CjdPolDef"
          }
        }
      },
      "CjdPolDef": {
        "required": [
          "policyArray"
        ],
        "type": "object",
        "properties": {
          "policyArray": {
            "$ref": "#/components/schemas/CjdPolPolicyArray"
          }
        }
      },
      "CjdPolPolicyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CjdPolPolicy"
        }
      },
      "CjdPolPolicy": {
        "type": "object",
        "properties": {
          "policyLinesArray": {
            "$ref": "#/components/schemas/CjdPolPolicyLinesArray"
          }
        }
      },
      "CjdPolPolicyLinesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CjdPolPolicyLines"
        }
      },
      "CjdPolPolicyLines": {
        "type": "object",
        "properties": {
          "policyObjectsArray": {
            "$ref": "#/components/schemas/CjdPolPolicyObjectsArray"
          }
        }
      },
      "CjdPolPolicyObjectsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CjdPolPolicyObjects"
        }
      },
      "CjdPolPolicyObjects": {
        "type": "object",
        "properties": {
          "objRiskSlaveArray": {
            "$ref": "#/components/schemas/CjdPolObjRiskSlaveArray"
          }
        }
      },
      "CjdPolObjRiskSlaveArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CjdPolObjRiskSlave"
        }
      },
      "CjdPolObjRiskSlave": {
        "type": "object"
      },
      "PageResponseOfClaeditres": {
        "title": "PageResponseOfClaeditres",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Claeditres"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Claeditres": {
        "required": [
          "claeditres",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAEDITRES"
          },
          "description": {
            "type": "string",
            "example": "Retrieve claim reserve details for claim no"
          },
          "claeditres": {
            "$ref": "#/components/schemas/ClaeditresDef"
          }
        }
      },
      "ClaeditresDef": {
        "required": [
          "claimArray"
        ],
        "type": "object",
        "properties": {
          "claimArray": {
            "$ref": "#/components/schemas/ClaeditresClaimArray"
          }
        }
      },
      "ClaeditresClaimArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaeditresClaim"
        }
      },
      "ClaeditresClaim": {
        "type": "object",
        "properties": {
          "itemsArray": {
            "$ref": "#/components/schemas/ClaeditresItemsArray"
          },
          "totalsArray": {
            "$ref": "#/components/schemas/ClaeditresTotalsArray"
          }
        }
      },
      "ClaeditresItemsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaeditresItems"
        }
      },
      "ClaeditresItems": {
        "type": "object",
        "properties": {
          "itemType": {
            "type": "object"
          },
          "subitemType": {
            "type": "object"
          },
          "riskNo": {
            "type": "object"
          },
          "receiverIdNo": {
            "type": "object"
          },
          "currencyCode": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "estimate": {
            "type": "object"
          },
          "paid": {
            "type": "object"
          },
          "deductible": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "riskDescription": {
            "type": "object"
          }
        }
      },
      "ClaeditresTotalsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaeditresTotals"
        }
      },
      "ClaeditresTotals": {
        "type": "object",
        "properties": {
          "totalEstimate": {
            "type": "object"
          },
          "totalPaid": {
            "type": "object"
          },
          "totalRecovery": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimCiu": {
        "title": "PageResponseOfClaimCiu",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimCiu"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimCiu": {
        "required": [
          "claimCiu",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_CIU"
          },
          "description": {
            "type": "string",
            "example": "Claim cover and risk options"
          },
          "claimCiu": {
            "$ref": "#/components/schemas/ClaimCiuDef"
          }
        }
      },
      "ClaimCiuDef": {
        "required": [
          "dodClaimCiuArray"
        ],
        "type": "object",
        "properties": {
          "dodClaimCiuArray": {
            "$ref": "#/components/schemas/ClaimCiuDodClaimCiuArray"
          }
        }
      },
      "ClaimCiuDodClaimCiuArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimCiuDodClaimCiu"
        }
      },
      "ClaimCiuDodClaimCiu": {
        "type": "object",
        "properties": {
          "riskNo": {
            "type": "object"
          },
          "riskExcess": {
            "type": "object"
          },
          "riskDisplayCode": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "riskSum": {
            "type": "object"
          },
          "currencyCode": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimEnc": {
        "title": "PageResponseOfClaimEnc",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimEnc"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimEnc": {
        "required": [
          "claimEnc",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_ENC"
          },
          "description": {
            "type": "string",
            "example": "Claims which estimate is not changed over period of time"
          },
          "claimEnc": {
            "$ref": "#/components/schemas/ClaimEncDef"
          }
        }
      },
      "ClaimEncDef": {
        "required": [
          "claimEncArray"
        ],
        "type": "object",
        "properties": {
          "claimEncArray": {
            "$ref": "#/components/schemas/ClaimEncClaimEncArray"
          }
        }
      },
      "ClaimEncClaimEncArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimEncClaimEnc"
        }
      },
      "ClaimEncClaimEnc": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "claimCaseNo": {
            "type": "object"
          },
          "claimItems": {
            "type": "object"
          },
          "inactiveItems": {
            "type": "object"
          },
          "allItems": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimNe": {
        "title": "PageResponseOfClaimNe",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimNe"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimNe": {
        "required": [
          "claimNe",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_NE"
          },
          "description": {
            "type": "string",
            "example": "List of claims with total negative estimate"
          },
          "claimNe": {
            "$ref": "#/components/schemas/ClaimNeDef"
          }
        }
      },
      "ClaimNeDef": {
        "required": [
          "totalNegativeEstimateArray"
        ],
        "type": "object",
        "properties": {
          "totalNegativeEstimateArray": {
            "$ref": "#/components/schemas/ClaimNeTotalNegativeEstimateArray"
          }
        }
      },
      "ClaimNeTotalNegativeEstimateArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimNeTotalNegativeEstimate"
        }
      },
      "ClaimNeTotalNegativeEstimate": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "claimCaseNo": {
            "type": "object"
          },
          "claimTotalEstimate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimOdt": {
        "title": "PageResponseOfClaimOdt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimOdt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimOdt": {
        "required": [
          "claimOdt",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_ODT"
          },
          "description": {
            "type": "string",
            "example": "Claims with overdue tasks over period of time"
          },
          "claimOdt": {
            "$ref": "#/components/schemas/ClaimOdtDef"
          }
        }
      },
      "ClaimOdtDef": {
        "required": [
          "claimOdtArray"
        ],
        "type": "object",
        "properties": {
          "claimOdtArray": {
            "$ref": "#/components/schemas/ClaimOdtClaimOdtArray"
          }
        }
      },
      "ClaimOdtClaimOdtArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimOdtClaimOdt"
        }
      },
      "ClaimOdtClaimOdt": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "claimCaseNo": {
            "type": "object"
          },
          "claimSubcaseNo": {
            "type": "object"
          },
          "taskSeqNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimPr": {
        "title": "PageResponseOfClaimPr",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimPr"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimPr": {
        "required": [
          "claimPr",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_PR"
          },
          "description": {
            "type": "string",
            "example": "Claim item payments that are received in full"
          },
          "claimPr": {
            "$ref": "#/components/schemas/ClaimPrDef"
          }
        }
      },
      "ClaimPrDef": {
        "required": [
          "claimPrArray"
        ],
        "type": "object",
        "properties": {
          "claimPrArray": {
            "$ref": "#/components/schemas/ClaimPrClaimPrArray"
          }
        }
      },
      "ClaimPrClaimPrArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimPrClaimPr"
        }
      },
      "ClaimPrClaimPr": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "claimEventNo": {
            "type": "object"
          },
          "claimCaseNo": {
            "type": "object"
          },
          "claimItemNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimQ": {
        "title": "PageResponseOfClaimQ",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimQ"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimQ": {
        "required": [
          "claimQ",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_Q"
          },
          "description": {
            "type": "string",
            "example": "Claim questions"
          },
          "claimQ": {
            "$ref": "#/components/schemas/ClaimQDef"
          }
        }
      },
      "ClaimQDef": {
        "required": [
          "dodClaimQArray"
        ],
        "type": "object",
        "properties": {
          "dodClaimQArray": {
            "$ref": "#/components/schemas/ClaimQDodClaimQArray"
          }
        }
      },
      "ClaimQDodClaimQArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimQDodClaimQ"
        }
      },
      "ClaimQDodClaimQ": {
        "type": "object",
        "properties": {
          "question": {
            "type": "object"
          },
          "mandatory": {
            "type": "object"
          },
          "lovTable": {
            "type": "object"
          },
          "defaultValue": {
            "type": "object"
          },
          "skipCondition": {
            "type": "object"
          },
          "skipTo": {
            "type": "object"
          },
          "caseRestriction": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "columnName": {
            "type": "object"
          },
          "dodClaimQ1Array": {
            "$ref": "#/components/schemas/ClaimQDodClaimQ1Array"
          }
        }
      },
      "ClaimQDodClaimQ1Array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimQDodClaimQ1"
        }
      },
      "ClaimQDodClaimQ1": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "object"
          },
          "answerDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimRefp": {
        "title": "PageResponseOfClaimRefp",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimRefp"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimRefp": {
        "required": [
          "claimRefp",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_REFP"
          },
          "description": {
            "type": "string",
            "example": "Get all referral payments"
          },
          "claimRefp": {
            "$ref": "#/components/schemas/ClaimRefpDef"
          }
        }
      },
      "ClaimRefpDef": {
        "required": [
          "sbv92DodClaimRefpArray"
        ],
        "type": "object",
        "properties": {
          "sbv92DodClaimRefpArray": {
            "$ref": "#/components/schemas/ClaimRefpSbv92DodClaimRefpArray"
          }
        }
      },
      "ClaimRefpSbv92DodClaimRefpArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimRefpSbv92DodClaimRefp"
        }
      },
      "ClaimRefpSbv92DodClaimRefp": {
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "claEventNo": {
            "type": "object"
          },
          "claSubcaseNo": {
            "type": "object"
          },
          "referralNo": {
            "type": "object"
          },
          "referralCode": {
            "type": "object"
          },
          "referralName": {
            "type": "object"
          },
          "raisedByUserid": {
            "type": "object"
          },
          "raisedDate": {
            "type": "object"
          },
          "amount": {
            "type": "object"
          },
          "referralname1": {
            "type": "object"
          },
          "amountClp": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "accItemId": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimRefr": {
        "title": "PageResponseOfClaimRefr",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimRefr"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimRefr": {
        "required": [
          "claimRefr",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_REFR"
          },
          "description": {
            "type": "string",
            "example": "Get all referral reservations"
          },
          "claimRefr": {
            "$ref": "#/components/schemas/ClaimRefrDef"
          }
        }
      },
      "ClaimRefrDef": {
        "required": [
          "sbv92DodClaimRefrArray"
        ],
        "type": "object",
        "properties": {
          "sbv92DodClaimRefrArray": {
            "$ref": "#/components/schemas/ClaimRefrSbv92DodClaimRefrArray"
          }
        }
      },
      "ClaimRefrSbv92DodClaimRefrArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimRefrSbv92DodClaimRefr"
        }
      },
      "ClaimRefrSbv92DodClaimRefr": {
        "type": "object",
        "properties": {
          "claCaseNo": {
            "type": "object"
          },
          "claEventNo": {
            "type": "object"
          },
          "claSubcaseNo": {
            "type": "object"
          },
          "referralNo": {
            "type": "object"
          },
          "referralCode": {
            "type": "object"
          },
          "referralName": {
            "type": "object"
          },
          "raisedByUserid": {
            "type": "object"
          },
          "raisedDate": {
            "type": "object"
          },
          "estimate": {
            "type": "object"
          },
          "referralname1": {
            "type": "object"
          },
          "prevEstimate": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "accItemId": {
            "type": "object"
          },
          "sortBy": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaimZe": {
        "title": "PageResponseOfClaimZe",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaimZe"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaimZe": {
        "required": [
          "claimZe",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAIM_ZE"
          },
          "description": {
            "type": "string",
            "example": "List of claims with total zero estimate"
          },
          "claimZe": {
            "$ref": "#/components/schemas/ClaimZeDef"
          }
        }
      },
      "ClaimZeDef": {
        "required": [
          "zeroEstimateArray"
        ],
        "type": "object",
        "properties": {
          "zeroEstimateArray": {
            "$ref": "#/components/schemas/ClaimZeZeroEstimateArray"
          }
        }
      },
      "ClaimZeZeroEstimateArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaimZeZeroEstimate"
        }
      },
      "ClaimZeZeroEstimate": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "claimCaseNo": {
            "type": "object"
          },
          "claimSubcaseNo": {
            "type": "object"
          },
          "estimate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClapay": {
        "title": "PageResponseOfClapay",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Clapay"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Clapay": {
        "required": [
          "clapay",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAPAY"
          },
          "description": {
            "type": "string",
            "example": "Retrieve claim number"
          },
          "clapay": {
            "$ref": "#/components/schemas/ClapayDef"
          }
        }
      },
      "ClapayDef": {
        "required": [
          "claimArray"
        ],
        "type": "object",
        "properties": {
          "claimArray": {
            "$ref": "#/components/schemas/ClapayClaimArray"
          }
        }
      },
      "ClapayClaimArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClapayClaim"
        }
      },
      "ClapayClaim": {
        "type": "object",
        "properties": {
          "receiversArray": {
            "$ref": "#/components/schemas/ClapayReceiversArray"
          }
        }
      },
      "ClapayReceiversArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClapayReceivers"
        }
      },
      "ClapayReceivers": {
        "type": "object",
        "properties": {
          "claItemNo": {
            "type": "object"
          },
          "currencyName": {
            "type": "object"
          },
          "nameIdNo": {
            "type": "object"
          },
          "currency": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "detailsArray": {
            "$ref": "#/components/schemas/ClapayDetailsArray"
          }
        }
      },
      "ClapayDetailsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClapayDetails"
        }
      },
      "ClapayDetails": {
        "type": "object",
        "properties": {
          "itemType": {
            "type": "object"
          },
          "subitemType": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "currencyEstimate": {
            "type": "object"
          },
          "estimate": {
            "type": "object"
          },
          "newReserve": {
            "type": "object"
          },
          "taxDeductibles": {
            "type": "object"
          },
          "taxPercentage": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClareserve": {
        "title": "PageResponseOfClareserve",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Clareserve"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Clareserve": {
        "required": [
          "clareserve",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLARESERVE"
          },
          "description": {
            "type": "string",
            "example": "Retrieve claim reserves for claim no"
          },
          "clareserve": {
            "$ref": "#/components/schemas/ClareserveDef"
          }
        }
      },
      "ClareserveDef": {
        "required": [
          "claimArray"
        ],
        "type": "object",
        "properties": {
          "claimArray": {
            "$ref": "#/components/schemas/ClareserveClaimArray"
          }
        }
      },
      "ClareserveClaimArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClareserveClaim"
        }
      },
      "ClareserveClaim": {
        "type": "object",
        "properties": {
          "itemsArray": {
            "$ref": "#/components/schemas/ClareserveItemsArray"
          },
          "totalsArray": {
            "$ref": "#/components/schemas/ClareserveTotalsArray"
          },
          "coinsuranceArray": {
            "$ref": "#/components/schemas/ClareserveCoinsuranceArray"
          },
          "reinsuranceArray": {
            "$ref": "#/components/schemas/ClareserveReinsuranceArray"
          }
        }
      },
      "ClareserveItemsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClareserveItems"
        }
      },
      "ClareserveItems": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object"
          },
          "totalEstimate": {
            "type": "object"
          },
          "totalPaid": {
            "type": "object"
          },
          "totalRecovery": {
            "type": "object"
          }
        }
      },
      "ClareserveTotalsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClareserveTotals"
        }
      },
      "ClareserveTotals": {
        "type": "object",
        "properties": {
          "totalEstimate": {
            "type": "object"
          },
          "totalPaid": {
            "type": "object"
          },
          "totalDeductible": {
            "type": "object"
          }
        }
      },
      "ClareserveCoinsuranceArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClareserveCoinsurance"
        }
      },
      "ClareserveCoinsurance": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "participation": {
            "type": "object"
          },
          "itemsArray": {
            "$ref": "#/components/schemas/ClareserveItemsArray"
          }
        }
      },
      "ClareserveReinsuranceArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClareserveReinsurance"
        }
      },
      "ClareserveReinsurance": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "participation": {
            "type": "object"
          },
          "itemsArray": {
            "$ref": "#/components/schemas/ClareserveItemsArray"
          }
        }
      },
      "PageResponseOfClastatus": {
        "title": "PageResponseOfClastatus",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Clastatus"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Clastatus": {
        "required": [
          "clastatus",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLASTATUS"
          },
          "description": {
            "type": "string",
            "example": "Get custom claim status"
          },
          "clastatus": {
            "$ref": "#/components/schemas/ClastatusDef"
          }
        }
      },
      "ClastatusDef": {
        "required": [
          "dodClastatusArray"
        ],
        "type": "object",
        "properties": {
          "dodClastatusArray": {
            "$ref": "#/components/schemas/ClastatusDodClastatusArray"
          }
        }
      },
      "ClastatusDodClastatusArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClastatusDodClastatus"
        }
      },
      "ClastatusDodClastatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClavarconf": {
        "title": "PageResponseOfClavarconf",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Clavarconf"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Clavarconf": {
        "required": [
          "clavarconf1",
          "clavarconf10",
          "clavarconf11",
          "clavarconf12",
          "clavarconf13",
          "clavarconf2",
          "clavarconf3",
          "clavarconf4",
          "clavarconf5",
          "clavarconf6",
          "clavarconf7",
          "clavarconf8",
          "clavarconf9",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLAVARCONF"
          },
          "description": {
            "type": "string",
            "example": "Claim Variables Configuration"
          },
          "clavarconf1": {
            "$ref": "#/components/schemas/Clavarconf1Def"
          },
          "clavarconf2": {
            "$ref": "#/components/schemas/Clavarconf2Def"
          },
          "clavarconf3": {
            "$ref": "#/components/schemas/Clavarconf3Def"
          },
          "clavarconf4": {
            "$ref": "#/components/schemas/Clavarconf4Def"
          },
          "clavarconf5": {
            "$ref": "#/components/schemas/Clavarconf5Def"
          },
          "clavarconf6": {
            "$ref": "#/components/schemas/Clavarconf6Def"
          },
          "clavarconf7": {
            "$ref": "#/components/schemas/Clavarconf7Def"
          },
          "clavarconf8": {
            "$ref": "#/components/schemas/Clavarconf8Def"
          },
          "clavarconf9": {
            "$ref": "#/components/schemas/Clavarconf9Def"
          },
          "clavarconf10": {
            "$ref": "#/components/schemas/Clavarconf10Def"
          },
          "clavarconf11": {
            "$ref": "#/components/schemas/Clavarconf11Def"
          },
          "clavarconf12": {
            "$ref": "#/components/schemas/Clavarconf12Def"
          },
          "clavarconf13": {
            "$ref": "#/components/schemas/Clavarconf13Def"
          }
        }
      },
      "Clavarconf1Def": {
        "required": [
          "claClassArray"
        ],
        "type": "object",
        "properties": {
          "claClassArray": {
            "$ref": "#/components/schemas/Clavarconf1ClaClassArray"
          }
        }
      },
      "Clavarconf1ClaClassArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf1ClaClass"
        }
      },
      "Clavarconf1ClaClass": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "claClassListArray": {
            "$ref": "#/components/schemas/Clavarconf1ClaClassListArray"
          }
        }
      },
      "Clavarconf1ClaClassListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf1ClaClassList"
        }
      },
      "Clavarconf1ClaClassList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf2Def": {
        "required": [
          "informerTypeArray"
        ],
        "type": "object",
        "properties": {
          "informerTypeArray": {
            "$ref": "#/components/schemas/Clavarconf2InformerTypeArray"
          }
        }
      },
      "Clavarconf2InformerTypeArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf2InformerType"
        }
      },
      "Clavarconf2InformerType": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "informerTypeListArray": {
            "$ref": "#/components/schemas/Clavarconf2InformerTypeListArray"
          }
        }
      },
      "Clavarconf2InformerTypeListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf2InformerTypeList"
        }
      },
      "Clavarconf2InformerTypeList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf3Def": {
        "required": [
          "paymentArray"
        ],
        "type": "object",
        "properties": {
          "paymentArray": {
            "$ref": "#/components/schemas/Clavarconf3PaymentArray"
          }
        }
      },
      "Clavarconf3PaymentArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf3Payment"
        }
      },
      "Clavarconf3Payment": {
        "type": "object"
      },
      "Clavarconf4Def": {
        "required": [
          "firstEstimateArray"
        ],
        "type": "object",
        "properties": {
          "firstEstimateArray": {
            "$ref": "#/components/schemas/Clavarconf4FirstEstimateArray"
          }
        }
      },
      "Clavarconf4FirstEstimateArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf4FirstEstimate"
        }
      },
      "Clavarconf4FirstEstimate": {
        "type": "object"
      },
      "Clavarconf5Def": {
        "required": [
          "estimateArray"
        ],
        "type": "object",
        "properties": {
          "estimateArray": {
            "$ref": "#/components/schemas/Clavarconf5EstimateArray"
          }
        }
      },
      "Clavarconf5EstimateArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf5Estimate"
        }
      },
      "Clavarconf5Estimate": {
        "type": "object"
      },
      "Clavarconf6Def": {
        "required": [
          "deductibleArray"
        ],
        "type": "object",
        "properties": {
          "deductibleArray": {
            "$ref": "#/components/schemas/Clavarconf6DeductibleArray"
          }
        }
      },
      "Clavarconf6DeductibleArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf6Deductible"
        }
      },
      "Clavarconf6Deductible": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          }
        }
      },
      "Clavarconf7Def": {
        "required": [
          "filedByArray"
        ],
        "type": "object",
        "properties": {
          "filedByArray": {
            "$ref": "#/components/schemas/Clavarconf7FiledByArray"
          }
        }
      },
      "Clavarconf7FiledByArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf7FiledBy"
        }
      },
      "Clavarconf7FiledBy": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "filedByListArray": {
            "$ref": "#/components/schemas/Clavarconf7FiledByListArray"
          }
        }
      },
      "Clavarconf7FiledByListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf7FiledByList"
        }
      },
      "Clavarconf7FiledByList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf8Def": {
        "required": [
          "closeCodeArray"
        ],
        "type": "object",
        "properties": {
          "closeCodeArray": {
            "$ref": "#/components/schemas/Clavarconf8CloseCodeArray"
          }
        }
      },
      "Clavarconf8CloseCodeArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf8CloseCode"
        }
      },
      "Clavarconf8CloseCode": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "closeCodeListArray": {
            "$ref": "#/components/schemas/Clavarconf8CloseCodeListArray"
          }
        }
      },
      "Clavarconf8CloseCodeListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf8CloseCodeList"
        }
      },
      "Clavarconf8CloseCodeList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf9Def": {
        "required": [
          "uncompletedTasksArray"
        ],
        "type": "object",
        "properties": {
          "uncompletedTasksArray": {
            "$ref": "#/components/schemas/Clavarconf9UncompletedTasksArray"
          }
        }
      },
      "Clavarconf9UncompletedTasksArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf9UncompletedTasks"
        }
      },
      "Clavarconf9UncompletedTasks": {
        "type": "object",
        "properties": {
          "uncompletedTasksListArray": {
            "$ref": "#/components/schemas/Clavarconf9UncompletedTasksListArray"
          }
        }
      },
      "Clavarconf9UncompletedTasksListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf9UncompletedTasksList"
        }
      },
      "Clavarconf9UncompletedTasksList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf10Def": {
        "required": [
          "fraudScoreArray"
        ],
        "type": "object",
        "properties": {
          "fraudScoreArray": {
            "$ref": "#/components/schemas/Clavarconf10FraudScoreArray"
          }
        }
      },
      "Clavarconf10FraudScoreArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf10FraudScore"
        }
      },
      "Clavarconf10FraudScore": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "fraudScoreListArray": {
            "$ref": "#/components/schemas/Clavarconf10FraudScoreListArray"
          }
        }
      },
      "Clavarconf10FraudScoreListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf10FraudScoreList"
        }
      },
      "Clavarconf10FraudScoreList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf11Def": {
        "required": [
          "statusArray"
        ],
        "type": "object",
        "properties": {
          "statusArray": {
            "$ref": "#/components/schemas/Clavarconf11StatusArray"
          }
        }
      },
      "Clavarconf11StatusArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf11Status"
        }
      },
      "Clavarconf11Status": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "statusListArray": {
            "$ref": "#/components/schemas/Clavarconf11StatusListArray"
          }
        }
      },
      "Clavarconf11StatusListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf11StatusList"
        }
      },
      "Clavarconf11StatusList": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "Clavarconf12Def": {
        "required": [
          "handlerArray"
        ],
        "type": "object",
        "properties": {
          "handlerArray": {
            "$ref": "#/components/schemas/Clavarconf12HandlerArray"
          }
        }
      },
      "Clavarconf12HandlerArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf12Handler"
        }
      },
      "Clavarconf12Handler": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "handlerListArray": {
            "$ref": "#/components/schemas/Clavarconf12HandlerListArray"
          }
        }
      },
      "Clavarconf12HandlerListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf12HandlerList"
        }
      },
      "Clavarconf12HandlerList": {
        "type": "object",
        "properties": {
          "handlerId": {
            "type": "object"
          },
          "handler": {
            "type": "object"
          }
        }
      },
      "Clavarconf13Def": {
        "required": [
          "letterTemplateArray"
        ],
        "type": "object",
        "properties": {
          "letterTemplateArray": {
            "$ref": "#/components/schemas/Clavarconf13LetterTemplateArray"
          }
        }
      },
      "Clavarconf13LetterTemplateArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf13LetterTemplate"
        }
      },
      "Clavarconf13LetterTemplate": {
        "type": "object",
        "properties": {
          "variableName": {
            "type": "object"
          },
          "dataType": {
            "type": "object"
          },
          "colLength": {
            "type": "object"
          },
          "letterTemplateListArray": {
            "$ref": "#/components/schemas/Clavarconf13LetterTemplateListArray"
          }
        }
      },
      "Clavarconf13LetterTemplateListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Clavarconf13LetterTemplateList"
        }
      },
      "Clavarconf13LetterTemplateList": {
        "type": "object",
        "properties": {
          "letterTemplateId": {
            "type": "object"
          },
          "letterTemplateDescription": {
            "type": "object"
          },
          "businessArea": {
            "type": "object"
          },
          "businessAreaDescription": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaDocs": {
        "title": "PageResponseOfClaDocs",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaDocs"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaDocs": {
        "required": [
          "claDocs",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLA_DOCS"
          },
          "description": {
            "type": "string",
            "example": "Retrieve case items for claim no"
          },
          "claDocs": {
            "$ref": "#/components/schemas/ClaDocsDef"
          }
        }
      },
      "ClaDocsDef": {
        "required": [
          "dodClaDocsArray"
        ],
        "type": "object",
        "properties": {
          "dodClaDocsArray": {
            "$ref": "#/components/schemas/ClaDocsDodClaDocsArray"
          }
        }
      },
      "ClaDocsDodClaDocsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaDocsDodClaDocs"
        }
      },
      "ClaDocsDodClaDocs": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "object"
          },
          "caseType": {
            "type": "object"
          },
          "caseSubType": {
            "type": "object"
          },
          "letterDesc": {
            "type": "object"
          },
          "writingDate": {
            "type": "object"
          },
          "recordTimestamp": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaInfmnt": {
        "title": "PageResponseOfClaInfmnt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaInfmnt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaInfmnt": {
        "required": [
          "claInfmnt",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLA_INFMNT"
          },
          "description": {
            "type": "string",
            "example": "Retrieve informer details for claim no"
          },
          "claInfmnt": {
            "$ref": "#/components/schemas/ClaInfmntDef"
          }
        }
      },
      "ClaInfmntDef": {
        "required": [
          "dodClaInformerArray"
        ],
        "type": "object",
        "properties": {
          "dodClaInformerArray": {
            "$ref": "#/components/schemas/ClaInfmntDodClaInformerArray"
          }
        }
      },
      "ClaInfmntDodClaInformerArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaInfmntDodClaInformer"
        }
      },
      "ClaInfmntDodClaInformer": {
        "type": "object",
        "properties": {
          "insuredYn": {
            "type": "object"
          },
          "informerType": {
            "type": "object"
          },
          "informerTypeDesc": {
            "type": "object"
          },
          "filedBy": {
            "type": "object"
          },
          "filedByDesc": {
            "type": "object"
          },
          "informerName": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "phone": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "insName": {
            "type": "object"
          },
          "insRut": {
            "type": "object"
          },
          "insTelephone": {
            "type": "object"
          },
          "insEmail": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaPlace": {
        "title": "PageResponseOfClaPlace",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaPlace"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaPlace": {
        "required": [
          "claPlace",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLA_PLACE"
          },
          "description": {
            "type": "string",
            "example": "Retrieve place details for claim no"
          },
          "claPlace": {
            "$ref": "#/components/schemas/ClaPlaceDef"
          }
        }
      },
      "ClaPlaceDef": {
        "required": [
          "dodClaPlaceArray"
        ],
        "type": "object",
        "properties": {
          "dodClaPlaceArray": {
            "$ref": "#/components/schemas/ClaPlaceDodClaPlaceArray"
          }
        }
      },
      "ClaPlaceDodClaPlaceArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaPlaceDodClaPlace"
        }
      },
      "ClaPlaceDodClaPlace": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "object"
          },
          "latitude": {
            "type": "object"
          },
          "placeType": {
            "type": "object"
          },
          "placeTypeDesc": {
            "type": "object"
          },
          "address": {
            "type": "object"
          },
          "placeDesc": {
            "type": "object"
          },
          "claEventNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaPolicy": {
        "title": "PageResponseOfClaPolicy",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaPolicy"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaPolicy": {
        "required": [
          "claPolicy",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLA_POLICY"
          },
          "description": {
            "type": "string",
            "example": "Retrieve policy details for claim no"
          },
          "claPolicy": {
            "$ref": "#/components/schemas/ClaPolicyDef"
          }
        }
      },
      "ClaPolicyDef": {
        "required": [
          "dodClaPolicyArray"
        ],
        "type": "object",
        "properties": {
          "dodClaPolicyArray": {
            "$ref": "#/components/schemas/ClaPolicyDodClaPolicyArray"
          }
        }
      },
      "ClaPolicyDodClaPolicyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaPolicyDodClaPolicy"
        }
      },
      "ClaPolicyDodClaPolicy": {
        "type": "object"
      },
      "PageResponseOfClaSearch": {
        "title": "PageResponseOfClaSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaSearch": {
        "required": [
          "claSearch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLA_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "Search claims for given criteria"
          },
          "claSearch": {
            "$ref": "#/components/schemas/ClaSearchDef"
          }
        }
      },
      "ClaSearchDef": {
        "required": [
          "claimsArray"
        ],
        "type": "object",
        "properties": {
          "claimsArray": {
            "$ref": "#/components/schemas/ClaSearchClaimsArray"
          }
        }
      },
      "ClaSearchClaimsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaSearchClaims"
        }
      },
      "ClaSearchClaims": {
        "type": "object",
        "properties": {
          "claEventNo": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "claCaseNoAlt": {
            "type": "object"
          },
          "handler": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "incidentDate": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "policyNoAlt": {
            "type": "object"
          },
          "fnolDescription": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "extendYn": {
            "type": "object"
          },
          "receiversArray": {
            "$ref": "#/components/schemas/ClaSearchReceiversArray"
          },
          "detailsArray": {
            "$ref": "#/components/schemas/ClaSearchDetailsArray"
          }
        }
      },
      "ClaSearchReceiversArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaSearchReceivers"
        }
      },
      "ClaSearchReceivers": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          }
        }
      },
      "ClaSearchDetailsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaSearchDetails"
        }
      },
      "ClaSearchDetails": {
        "type": "object",
        "properties": {
          "notificationDate": {
            "type": "object"
          },
          "incidentDesc": {
            "type": "object"
          },
          "product": {
            "type": "object"
          },
          "liquidator": {
            "type": "object"
          },
          "liqrut": {
            "type": "object"
          },
          "claMajorEventNo": {
            "type": "object"
          },
          "agentName": {
            "type": "object"
          },
          "coiLeadCaseNo": {
            "type": "object"
          },
          "coiAgrId": {
            "type": "object"
          },
          "indemnityStatus": {
            "type": "object"
          },
          "costStatus": {
            "type": "object"
          },
          "coinsuranceArray": {
            "$ref": "#/components/schemas/ClaSearchCoinsuranceArray"
          },
          "reinsuranceArray": {
            "$ref": "#/components/schemas/ClaSearchReinsuranceArray"
          }
        }
      },
      "ClaSearchCoinsuranceArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaSearchCoinsurance"
        }
      },
      "ClaSearchCoinsurance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          }
        }
      },
      "ClaSearchReinsuranceArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaSearchReinsurance"
        }
      },
      "ClaSearchReinsurance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClaVar": {
        "title": "PageResponseOfClaVar",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClaVar"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClaVar": {
        "required": [
          "claVar1",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLA_VAR"
          },
          "description": {
            "type": "string",
            "example": "Claim Variables"
          },
          "claVar1": {
            "$ref": "#/components/schemas/ClaVar1Def"
          }
        }
      },
      "ClaVar1Def": {
        "required": [
          "claimVarArray"
        ],
        "type": "object",
        "properties": {
          "claimVarArray": {
            "$ref": "#/components/schemas/ClaVar1ClaimVarArray"
          }
        }
      },
      "ClaVar1ClaimVarArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClaVar1ClaimVar"
        }
      },
      "ClaVar1ClaimVar": {
        "type": "object",
        "properties": {
          "claimClass": {
            "type": "object"
          },
          "informerType": {
            "type": "object"
          },
          "payment": {
            "type": "object"
          },
          "firstEstimate": {
            "type": "object"
          },
          "estimate": {
            "type": "object"
          },
          "deductible": {
            "type": "object"
          },
          "filedBy": {
            "type": "object"
          },
          "closeCode": {
            "type": "object"
          },
          "uncompletedTasks": {
            "type": "object"
          },
          "fraudScore": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "totalEstimate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClpSrch": {
        "title": "PageResponseOfClpSrch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClpSrch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClpSrch": {
        "required": [
          "clpSrch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLP_SRCH"
          },
          "description": {
            "type": "string",
            "example": "Perform Claim Payments Search"
          },
          "clpSrch": {
            "$ref": "#/components/schemas/ClpSrchDef"
          }
        }
      },
      "ClpSrchDef": {
        "required": [
          "dodClaPaySrchArray"
        ],
        "type": "object",
        "properties": {
          "dodClaPaySrchArray": {
            "$ref": "#/components/schemas/ClpSrchDodClaPaySrchArray"
          }
        }
      },
      "ClpSrchDodClaPaySrchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClpSrchDodClaPaySrch"
        }
      },
      "ClpSrchDodClaPaySrch": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "policyNoAlt": {
            "type": "object"
          },
          "invoiceNo": {
            "type": "object"
          },
          "payDate": {
            "type": "object"
          },
          "curPayAmtExact": {
            "type": "object"
          },
          "payCurCode": {
            "type": "object"
          },
          "payStatus": {
            "type": "object"
          },
          "payAmtClpExact": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClrisklov": {
        "title": "PageResponseOfClrisklov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Clrisklov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Clrisklov": {
        "required": [
          "clrisklov",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLRISKLOV"
          },
          "description": {
            "type": "string",
            "example": "Retrieve possible covers for specified claim"
          },
          "clrisklov": {
            "$ref": "#/components/schemas/ClrisklovDef"
          }
        }
      },
      "ClrisklovDef": {
        "required": [
          "dodClrisklovArray"
        ],
        "type": "object",
        "properties": {
          "dodClrisklovArray": {
            "$ref": "#/components/schemas/ClrisklovDodClrisklovArray"
          }
        }
      },
      "ClrisklovDodClrisklovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClrisklovDodClrisklov"
        }
      },
      "ClrisklovDodClrisklov": {
        "type": "object",
        "properties": {
          "riskNo": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClrSearch": {
        "title": "PageResponseOfClrSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClrSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClrSearch": {
        "required": [
          "clrSearch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLR_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "Receiver search"
          },
          "clrSearch": {
            "$ref": "#/components/schemas/ClrSearchDef"
          }
        }
      },
      "ClrSearchDef": {
        "required": [
          "dodClrSearchArray"
        ],
        "type": "object",
        "properties": {
          "dodClrSearchArray": {
            "$ref": "#/components/schemas/ClrSearchDodClrSearchArray"
          }
        }
      },
      "ClrSearchDodClrSearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClrSearchDodClrSearch"
        }
      },
      "ClrSearchDodClrSearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          },
          "role": {
            "type": "object"
          },
          "roleDesc": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "nameIdNo": {
            "type": "object"
          },
          "relation": {
            "type": "object"
          },
          "relationDesc": {
            "type": "object"
          },
          "seqNo": {
            "type": "object"
          },
          "thirdPartyNo": {
            "type": "object"
          },
          "claimantIdNo": {
            "type": "object"
          },
          "handler": {
            "type": "object"
          },
          "statusCode": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCltypecoex": {
        "title": "PageResponseOfCltypecoex",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Cltypecoex"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Cltypecoex": {
        "required": [
          "cltypecoex",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLTYPECOEX"
          },
          "description": {
            "type": "string",
            "example": "Retrieve item_type_combinations with descriptions for EXWAR"
          },
          "cltypecoex": {
            "$ref": "#/components/schemas/CltypecoexDef"
          }
        }
      },
      "CltypecoexDef": {
        "required": [
          "dodCltypecoexArray"
        ],
        "type": "object",
        "properties": {
          "dodCltypecoexArray": {
            "$ref": "#/components/schemas/CltypecoexDodCltypecoexArray"
          }
        }
      },
      "CltypecoexDodCltypecoexArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CltypecoexDodCltypecoex"
        }
      },
      "CltypecoexDodCltypecoex": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "object"
          },
          "eventTypeDesc": {
            "type": "object"
          },
          "causeType": {
            "type": "object"
          },
          "causeTypeDesc": {
            "type": "object"
          },
          "subcauseType": {
            "type": "object"
          },
          "subcauseTypeDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCltypecomb": {
        "title": "PageResponseOfCltypecomb",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Cltypecomb"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Cltypecomb": {
        "required": [
          "cltypecomb",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CLTYPECOMB"
          },
          "description": {
            "type": "string",
            "example": "Retrieve item_type_combinations with descriptions"
          },
          "cltypecomb": {
            "$ref": "#/components/schemas/CltypecombDef"
          }
        }
      },
      "CltypecombDef": {
        "required": [
          "dodCltypecombArray"
        ],
        "type": "object",
        "properties": {
          "dodCltypecombArray": {
            "$ref": "#/components/schemas/CltypecombDodCltypecombArray"
          }
        }
      },
      "CltypecombDodCltypecombArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CltypecombDodCltypecomb"
        }
      },
      "CltypecombDodCltypecomb": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "object"
          },
          "eventTypeDesc": {
            "type": "object"
          },
          "causeType": {
            "type": "object"
          },
          "causeTypeDesc": {
            "type": "object"
          },
          "subcauseType": {
            "type": "object"
          },
          "subcauseTypeDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClCasealt": {
        "title": "PageResponseOfClCasealt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClCasealt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClCasealt": {
        "required": [
          "clCasealt",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_CASEALT"
          },
          "description": {
            "type": "string",
            "example": "Get Claim case number alternate"
          },
          "clCasealt": {
            "$ref": "#/components/schemas/ClCasealtDef"
          }
        }
      },
      "ClCasealtDef": {
        "required": [
          "dodClCasealtArray"
        ],
        "type": "object",
        "properties": {
          "dodClCasealtArray": {
            "$ref": "#/components/schemas/ClCasealtDodClCasealtArray"
          }
        }
      },
      "ClCasealtDodClCasealtArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClCasealtDodClCasealt"
        }
      },
      "ClCasealtDodClCasealt": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "requestId": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClConsum": {
        "title": "PageResponseOfClConsum",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClConsum"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClConsum": {
        "required": [
          "clConsum",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_CONSUM"
          },
          "description": {
            "type": "string",
            "example": "Get Consumer info"
          },
          "clConsum": {
            "$ref": "#/components/schemas/ClConsumDef"
          }
        }
      },
      "ClConsumDef": {
        "required": [
          "dodClConsumArray"
        ],
        "type": "object",
        "properties": {
          "dodClConsumArray": {
            "$ref": "#/components/schemas/ClConsumDodClConsumArray"
          }
        }
      },
      "ClConsumDodClConsumArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClConsumDodClConsum"
        }
      },
      "ClConsumDodClConsum": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "direction": {
            "type": "object"
          },
          "region": {
            "type": "object"
          },
          "commune": {
            "type": "object"
          },
          "city": {
            "type": "object"
          },
          "telephone": {
            "type": "object"
          },
          "altTelephone": {
            "type": "object"
          },
          "email": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClFrdkeep": {
        "title": "PageResponseOfClFrdkeep",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClFrdkeep"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClFrdkeep": {
        "required": [
          "clFrdkeep",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_FRDKEEP"
          },
          "description": {
            "type": "string",
            "example": "Get Claim details for FraudKeeper"
          },
          "clFrdkeep": {
            "$ref": "#/components/schemas/ClFrdkeepDef"
          }
        }
      },
      "ClFrdkeepDef": {
        "required": [
          "claimArray"
        ],
        "type": "object",
        "properties": {
          "claimArray": {
            "$ref": "#/components/schemas/ClFrdkeepClaimArray"
          }
        }
      },
      "ClFrdkeepClaimArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClFrdkeepClaim"
        }
      },
      "ClFrdkeepClaim": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "created": {
            "type": "object"
          },
          "publicId": {
            "type": "object"
          },
          "number": {
            "type": "object"
          },
          "incidentDate": {
            "type": "object"
          },
          "openDate": {
            "type": "object"
          },
          "notificationDate": {
            "type": "object"
          },
          "statement": {
            "type": "object"
          },
          "primaryCause": {
            "type": "object"
          },
          "address": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "hasMatters": {
            "type": "object"
          },
          "coverageInQuestion": {
            "type": "object"
          },
          "additionalNotes": {
            "type": "object"
          },
          "claimAdministrator": {
            "type": "object"
          },
          "numberOfVehicles": {
            "type": "object"
          },
          "numberOfWitnesses": {
            "type": "object"
          },
          "totalClaimAmount": {
            "type": "object"
          },
          "policyArray": {
            "$ref": "#/components/schemas/ClFrdkeepPolicyArray"
          },
          "exposuresArray": {
            "$ref": "#/components/schemas/ClFrdkeepExposuresArray"
          }
        }
      },
      "ClFrdkeepPolicyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClFrdkeepPolicy"
        }
      },
      "ClFrdkeepPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "policyNumber": {
            "type": "object"
          },
          "created": {
            "type": "object"
          },
          "effectiveDate": {
            "type": "object"
          },
          "expirationDate": {
            "type": "object"
          },
          "cancelationDate": {
            "type": "object"
          },
          "rehabilitationDate": {
            "type": "object"
          },
          "producerCode": {
            "type": "object"
          },
          "productCode": {
            "type": "object"
          },
          "additionalText": {
            "type": "object"
          },
          "sellMethod": {
            "type": "object"
          },
          "premium": {
            "type": "object"
          },
          "premiumPlusTaxes": {
            "type": "object"
          },
          "insuredArray": {
            "$ref": "#/components/schemas/ClFrdkeepInsuredArray"
          }
        }
      },
      "ClFrdkeepInsuredArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClFrdkeepInsured"
        }
      },
      "ClFrdkeepInsured": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          },
          "taxId": {
            "type": "object"
          },
          "address": {
            "type": "object"
          },
          "city": {
            "type": "object"
          },
          "state": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "personType": {
            "type": "object"
          },
          "displayName": {
            "type": "object"
          },
          "id": {
            "type": "object"
          }
        }
      },
      "ClFrdkeepExposuresArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClFrdkeepExposures"
        }
      },
      "ClFrdkeepExposures": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "coverageDescription": {
            "type": "object"
          },
          "coverageCode": {
            "type": "object"
          },
          "coverageCurrency": {
            "type": "object"
          },
          "currentInsuredAmount": {
            "type": "object"
          },
          "originalInsuredAmount": {
            "type": "object"
          },
          "reserves": {
            "type": "object"
          },
          "payments": {
            "type": "object"
          },
          "reservesLocalCurrency": {
            "type": "object"
          },
          "paymentsLocalCurrency": {
            "type": "object"
          },
          "firstParty": {
            "type": "object"
          },
          "claimantArray": {
            "$ref": "#/components/schemas/ClFrdkeepClaimantArray"
          },
          "riskArray": {
            "$ref": "#/components/schemas/ClFrdkeepRiskArray"
          }
        }
      },
      "ClFrdkeepClaimantArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClFrdkeepClaimant"
        }
      },
      "ClFrdkeepClaimant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "taxId": {
            "type": "object"
          },
          "address": {
            "type": "object"
          },
          "city": {
            "type": "object"
          },
          "state": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "personType": {
            "type": "object"
          },
          "displayName": {
            "type": "object"
          },
          "id1": {
            "type": "object"
          }
        }
      },
      "ClFrdkeepRiskArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClFrdkeepRisk"
        }
      },
      "ClFrdkeepRisk": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "riskNumber": {
            "type": "object"
          },
          "riskCode": {
            "type": "object"
          },
          "riskDescription": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClHdet": {
        "title": "PageResponseOfClHdet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClHdet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClHdet": {
        "required": [
          "clHdet",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_HDET"
          },
          "description": {
            "type": "string",
            "example": "Get claim header details"
          },
          "clHdet": {
            "$ref": "#/components/schemas/ClHdetDef"
          }
        }
      },
      "ClHdetDef": {
        "required": [
          "dodClHdetArray"
        ],
        "type": "object",
        "properties": {
          "dodClHdetArray": {
            "$ref": "#/components/schemas/ClHdetDodClHdetArray"
          }
        }
      },
      "ClHdetDodClHdetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClHdetDodClHdet"
        }
      },
      "ClHdetDodClHdet": {
        "type": "object",
        "properties": {
          "rut": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "eventType": {
            "type": "object"
          },
          "causeType": {
            "type": "object"
          },
          "subcauseType": {
            "type": "object"
          },
          "riskNo": {
            "type": "object"
          },
          "riskDesc": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "firstOpenDate": {
            "type": "object"
          },
          "notificationDate": {
            "type": "object"
          },
          "incidentDate": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "substatus": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "claEventNo": {
            "type": "object"
          },
          "claCaseNoAlt": {
            "type": "object"
          },
          "referralCount": {
            "type": "object"
          },
          "refForm": {
            "type": "object"
          },
          "proposalCount": {
            "type": "object"
          },
          "propForm": {
            "type": "object"
          },
          "handler": {
            "type": "object"
          },
          "currency": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClIntpart": {
        "title": "PageResponseOfClIntpart",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClIntpart"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClIntpart": {
        "required": [
          "clIntpart",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_INTPART"
          },
          "description": {
            "type": "string",
            "example": "Get interested parties for claim no"
          },
          "clIntpart": {
            "$ref": "#/components/schemas/ClIntpartDef"
          }
        }
      },
      "ClIntpartDef": {
        "required": [
          "dodClIntpartArray"
        ],
        "type": "object",
        "properties": {
          "dodClIntpartArray": {
            "$ref": "#/components/schemas/ClIntpartDodClIntpartArray"
          }
        }
      },
      "ClIntpartDodClIntpartArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClIntpartDodClIntpart"
        }
      },
      "ClIntpartDodClIntpart": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "civilRegCode": {
            "type": "object"
          },
          "role": {
            "type": "object"
          },
          "roleDescription": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClPtask": {
        "title": "PageResponseOfClPtask",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClPtask"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClPtask": {
        "required": [
          "clPtask",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_PTASK"
          },
          "description": {
            "type": "string",
            "example": "Get Payment task detail"
          },
          "clPtask": {
            "$ref": "#/components/schemas/ClPtaskDef"
          }
        }
      },
      "ClPtaskDef": {
        "required": [
          "dodClPtaskArray"
        ],
        "type": "object",
        "properties": {
          "dodClPtaskArray": {
            "$ref": "#/components/schemas/ClPtaskDodClPtaskArray"
          }
        }
      },
      "ClPtaskDodClPtaskArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClPtaskDodClPtask"
        }
      },
      "ClPtaskDodClPtask": {
        "type": "object",
        "properties": {
          "invoiceDate": {
            "type": "object"
          },
          "paymentType": {
            "type": "object"
          },
          "referenceNo": {
            "type": "object"
          },
          "amount": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClRephist": {
        "title": "PageResponseOfClRephist",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClRephist"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClRephist": {
        "required": [
          "clRephist",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_REPHIST"
          },
          "description": {
            "type": "string",
            "example": "Get extended warranty repairer history"
          },
          "clRephist": {
            "$ref": "#/components/schemas/ClRephistDef"
          }
        }
      },
      "ClRephistDef": {
        "required": [
          "dodClRephistArray"
        ],
        "type": "object",
        "properties": {
          "dodClRephistArray": {
            "$ref": "#/components/schemas/ClRephistDodClRephistArray"
          }
        }
      },
      "ClRephistDodClRephistArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClRephistDodClRephist"
        }
      },
      "ClRephistDodClRephist": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "sponsor": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "sponsorName": {
            "type": "object"
          },
          "statusDesc": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClRtask": {
        "title": "PageResponseOfClRtask",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClRtask"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClRtask": {
        "required": [
          "clRtask",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_RTASK"
          },
          "description": {
            "type": "string",
            "example": "Get Reserve task detail"
          },
          "clRtask": {
            "$ref": "#/components/schemas/ClRtaskDef"
          }
        }
      },
      "ClRtaskDef": {
        "required": [
          "dodClRtaskArray"
        ],
        "type": "object",
        "properties": {
          "dodClRtaskArray": {
            "$ref": "#/components/schemas/ClRtaskDodClRtaskArray"
          }
        }
      },
      "ClRtaskDodClRtaskArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClRtaskDodClRtask"
        }
      },
      "ClRtaskDodClRtask": {
        "type": "object",
        "properties": {
          "indemnification": {
            "type": "object"
          },
          "liquidator": {
            "type": "object"
          },
          "deductible": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClSsuSup": {
        "title": "PageResponseOfClSsuSup",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClSsuSup"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClSsuSup": {
        "required": [
          "clSsuSup",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_SSU_SUP"
          },
          "description": {
            "type": "string",
            "example": "Get Provider Info"
          },
          "clSsuSup": {
            "$ref": "#/components/schemas/ClSsuSupDef"
          }
        }
      },
      "ClSsuSupDef": {
        "required": [
          "dodClSsuSupArray"
        ],
        "type": "object",
        "properties": {
          "dodClSsuSupArray": {
            "$ref": "#/components/schemas/ClSsuSupDodClSsuSupArray"
          }
        }
      },
      "ClSsuSupDodClSsuSupArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClSsuSupDodClSsuSup"
        }
      },
      "ClSsuSupDodClSsuSup": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          }
        }
      },
      "PageResponseOfClTimeln": {
        "title": "PageResponseOfClTimeln",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ClTimeln"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ClTimeln": {
        "required": [
          "clTimeln",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CL_TIMELN"
          },
          "description": {
            "type": "string",
            "example": "Get claims timeline for claim no"
          },
          "clTimeln": {
            "$ref": "#/components/schemas/ClTimelnDef"
          }
        }
      },
      "ClTimelnDef": {
        "required": [
          "dodClTimelnArray"
        ],
        "type": "object",
        "properties": {
          "dodClTimelnArray": {
            "$ref": "#/components/schemas/ClTimelnDodClTimelnArray"
          }
        }
      },
      "ClTimelnDodClTimelnArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClTimelnDodClTimeln"
        }
      },
      "ClTimelnDodClTimeln": {
        "type": "object",
        "properties": {
          "description": {
            "type": "object"
          },
          "reference": {
            "type": "object"
          },
          "text": {
            "type": "object"
          },
          "linkType": {
            "type": "object"
          },
          "requestId": {
            "type": "object"
          },
          "userId": {
            "type": "object"
          },
          "timestamp": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCommPay": {
        "title": "PageResponseOfCommPay",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CommPay"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CommPay": {
        "required": [
          "commPay",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "COMM_PAY"
          },
          "description": {
            "type": "string",
            "example": "Get commission payment details"
          },
          "commPay": {
            "$ref": "#/components/schemas/CommPayDef"
          }
        }
      },
      "CommPayDef": {
        "required": [
          "commPayAllPrdArray"
        ],
        "type": "object",
        "properties": {
          "commPayAllPrdArray": {
            "$ref": "#/components/schemas/CommPayCommPayAllPrdArray"
          }
        }
      },
      "CommPayCommPayAllPrdArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CommPayCommPayAllPrd"
        }
      },
      "CommPayCommPayAllPrd": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "sociedad": {
            "type": "object"
          },
          "ejercicio": {
            "type": "object"
          },
          "nrodocumento": {
            "type": "object"
          },
          "rutcorredor": {
            "type": "object"
          },
          "ramo": {
            "type": "object"
          },
          "poliza": {
            "type": "object"
          },
          "certificado": {
            "type": "object"
          },
          "renovacion": {
            "type": "object"
          },
          "endoso": {
            "type": "object"
          },
          "nrocuota": {
            "type": "object"
          },
          "rutasegurado": {
            "type": "object"
          },
          "nombreasegurado": {
            "type": "object"
          },
          "moneda": {
            "type": "object"
          },
          "primaneta": {
            "type": "object"
          },
          "porccomision": {
            "type": "object"
          },
          "montooriginal": {
            "type": "object"
          },
          "montocomision": {
            "type": "object"
          },
          "montopesos": {
            "type": "object"
          },
          "indregistro": {
            "type": "object"
          },
          "montoivaafecto": {
            "type": "object"
          },
          "montoivaexcento": {
            "type": "object"
          },
          "montoretencion": {
            "type": "object"
          },
          "valorcambio": {
            "type": "object"
          },
          "primaafecta": {
            "type": "object"
          },
          "primaexenta": {
            "type": "object"
          },
          "tieneclausulapago": {
            "type": "object"
          },
          "primeracuotapagada": {
            "type": "object"
          },
          "esliberada": {
            "type": "object"
          },
          "clasedocumento": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCompDept": {
        "title": "PageResponseOfCompDept",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CompDept"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CompDept": {
        "required": [
          "compDept",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "COMP_DEPT"
          },
          "description": {
            "type": "string",
            "example": "Companies and departments"
          },
          "compDept": {
            "$ref": "#/components/schemas/CompDeptDef"
          }
        }
      },
      "CompDeptDef": {
        "required": [
          "companyArray"
        ],
        "type": "object",
        "properties": {
          "companyArray": {
            "$ref": "#/components/schemas/CompDeptCompanyArray"
          }
        }
      },
      "CompDeptCompanyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CompDeptCompany"
        }
      },
      "CompDeptCompany": {
        "type": "object",
        "properties": {
          "companyNo": {
            "type": "object"
          },
          "companyName": {
            "type": "object"
          },
          "departmentArray": {
            "$ref": "#/components/schemas/CompDeptDepartmentArray"
          }
        }
      },
      "CompDeptDepartmentArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CompDeptDepartment"
        }
      },
      "CompDeptDepartment": {
        "type": "object",
        "properties": {
          "deptNo": {
            "type": "object"
          },
          "deptName": {
            "type": "object"
          }
        }
      },
      "PageResponseOfComuna": {
        "title": "PageResponseOfComuna",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Comuna"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Comuna": {
        "required": [
          "comuna",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "COMUNA"
          },
          "description": {
            "type": "string",
            "example": "Get list of Comunas for given region"
          },
          "comuna": {
            "$ref": "#/components/schemas/ComunaDef"
          }
        }
      },
      "ComunaDef": {
        "required": [
          "dodComunaArray"
        ],
        "type": "object",
        "properties": {
          "dodComunaArray": {
            "$ref": "#/components/schemas/ComunaDodComunaArray"
          }
        }
      },
      "ComunaDodComunaArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ComunaDodComuna"
        }
      },
      "ComunaDodComuna": {
        "type": "object",
        "properties": {
          "postArea": {
            "type": "object"
          },
          "comuna": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCustsearch": {
        "title": "PageResponseOfCustsearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Custsearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Custsearch": {
        "required": [
          "custsearch",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CUSTSEARCH"
          },
          "description": {
            "type": "string",
            "example": "Get Customers"
          },
          "custsearch": {
            "$ref": "#/components/schemas/CustsearchDef"
          }
        }
      },
      "CustsearchDef": {
        "required": [
          "dodCustsearchArray"
        ],
        "type": "object",
        "properties": {
          "dodCustsearchArray": {
            "$ref": "#/components/schemas/CustsearchDodCustsearchArray"
          }
        }
      },
      "CustsearchDodCustsearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustsearchDodCustsearch"
        }
      },
      "CustsearchDodCustsearch": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "nameType": {
            "type": "object"
          },
          "birthDate": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfCustDtls": {
        "title": "PageResponseOfCustDtls",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/CustDtls"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CustDtls": {
        "required": [
          "custDtls",
          "description",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "CUST_DTLS"
          },
          "description": {
            "type": "string",
            "example": "Get Customer details"
          },
          "custDtls": {
            "$ref": "#/components/schemas/CustDtlsDef"
          }
        }
      },
      "CustDtlsDef": {
        "required": [
          "customerDtlsArray"
        ],
        "type": "object",
        "properties": {
          "customerDtlsArray": {
            "$ref": "#/components/schemas/CustDtlsCustomerDtlsArray"
          }
        }
      },
      "CustDtlsCustomerDtlsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustDtlsCustomerDtls"
        }
      },
      "CustDtlsCustomerDtls": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "documentType": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "birthDate": {
            "type": "object"
          },
          "phoneNo": {
            "type": "object"
          },
          "employee": {
            "type": "object"
          },
          "street": {
            "type": "object"
          },
          "streetNo": {
            "type": "object"
          },
          "floor": {
            "type": "object"
          },
          "floorExt": {
            "type": "object"
          },
          "city": {
            "type": "object"
          },
          "region": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "bankDtlsArray": {
            "$ref": "#/components/schemas/CustDtlsBankDtlsArray"
          }
        }
      },
      "CustDtlsBankDtlsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CustDtlsBankDtls"
        }
      },
      "CustDtlsBankDtls": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "object"
          },
          "bankAccountNo": {
            "type": "object"
          },
          "bankName": {
            "type": "object"
          },
          "suspensionDate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfDevRut": {
        "title": "PageResponseOfDevRut",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DevRut"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "DevRut": {
        "required": [
          "description",
          "devRut",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "DEV_RUT"
          },
          "description": {
            "type": "string",
            "example": "Get RUT for testing"
          },
          "devRut": {
            "$ref": "#/components/schemas/DevRutDef"
          }
        }
      },
      "DevRutDef": {
        "required": [
          "dodDevRutArray"
        ],
        "type": "object",
        "properties": {
          "dodDevRutArray": {
            "$ref": "#/components/schemas/DevRutDodDevRutArray"
          }
        }
      },
      "DevRutDodDevRutArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DevRutDodDevRut"
        }
      },
      "DevRutDodDevRut": {
        "type": "object",
        "properties": {
          "rut": {
            "type": "object"
          }
        }
      },
      "PageResponseOfDscMark": {
        "title": "PageResponseOfDscMark",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DscMark"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "DscMark": {
        "required": [
          "description",
          "dscMark",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "DSC_MARK"
          },
          "description": {
            "type": "string",
            "example": "Get camp_act_no (policy.campaign) and mark_no for campaign"
          },
          "dscMark": {
            "$ref": "#/components/schemas/DscMarkDef"
          }
        }
      },
      "DscMarkDef": {
        "required": [
          "markNoArray"
        ],
        "type": "object",
        "properties": {
          "markNoArray": {
            "$ref": "#/components/schemas/DscMarkMarkNoArray"
          }
        }
      },
      "DscMarkMarkNoArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DscMarkMarkNo"
        }
      },
      "DscMarkMarkNo": {
        "type": "object",
        "properties": {
          "campActNo": {
            "type": "object"
          },
          "markNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwwbSrch": {
        "title": "PageResponseOfEwwbSrch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwwbSrch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwwbSrch": {
        "required": [
          "description",
          "ewwbSrch",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EWWB_SRCH"
          },
          "description": {
            "type": "string",
            "example": "Perform extended warranty workbasket Search"
          },
          "ewwbSrch": {
            "$ref": "#/components/schemas/EwwbSrchDef"
          }
        }
      },
      "EwwbSrchDef": {
        "required": [
          "dodEwwbSrchArray"
        ],
        "type": "object",
        "properties": {
          "dodEwwbSrchArray": {
            "$ref": "#/components/schemas/EwwbSrchDodEwwbSrchArray"
          }
        }
      },
      "EwwbSrchDodEwwbSrchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwwbSrchDodEwwbSrch"
        }
      },
      "EwwbSrchDodEwwbSrch": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "invoiceNo": {
            "type": "object"
          },
          "sponsor": {
            "type": "object"
          },
          "serviceAgentName": {
            "type": "object"
          },
          "repair": {
            "type": "object"
          },
          "repairName": {
            "type": "object"
          },
          "riskNo": {
            "type": "object"
          },
          "riskDesc": {
            "type": "object"
          },
          "action": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "statusDesc": {
            "type": "object"
          },
          "buyOrder": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwBoPdtl": {
        "title": "PageResponseOfEwBoPdtl",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwBoPdtl"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwBoPdtl": {
        "required": [
          "description",
          "ewBoPdtl",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_BO_PDTL"
          },
          "description": {
            "type": "string",
            "example": "Get Buy order payment details"
          },
          "ewBoPdtl": {
            "$ref": "#/components/schemas/EwBoPdtlDef"
          }
        }
      },
      "EwBoPdtlDef": {
        "required": [
          "dodEwBoPdtlArray"
        ],
        "type": "object",
        "properties": {
          "dodEwBoPdtlArray": {
            "$ref": "#/components/schemas/EwBoPdtlDodEwBoPdtlArray"
          }
        }
      },
      "EwBoPdtlDodEwBoPdtlArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwBoPdtlDodEwBoPdtl"
        }
      },
      "EwBoPdtlDodEwBoPdtl": {
        "type": "object",
        "properties": {
          "claCaseNo": {
            "type": "object"
          },
          "claCaseNoAlt": {
            "type": "object"
          },
          "receiverIdNo": {
            "type": "object"
          },
          "receiverName": {
            "type": "object"
          },
          "reCurrencyEstimate": {
            "type": "object"
          },
          "reCurrencyCode": {
            "type": "object"
          },
          "reEstimate": {
            "type": "object"
          },
          "reClaItemNo": {
            "type": "object"
          },
          "exCurrencyEstimate": {
            "type": "object"
          },
          "exCurrencyCode": {
            "type": "object"
          },
          "exEstimate": {
            "type": "object"
          },
          "exClaItemNo": {
            "type": "object"
          },
          "currencyPaymentAmt": {
            "type": "object"
          },
          "paymentAmt": {
            "type": "object"
          },
          "paymentMethod": {
            "type": "object"
          },
          "meansPayNo": {
            "type": "object"
          },
          "accountNo": {
            "type": "object"
          },
          "compName": {
            "type": "object"
          },
          "compAddress": {
            "type": "object"
          },
          "compCity": {
            "type": "object"
          },
          "compAuth": {
            "type": "object"
          },
          "compRut": {
            "type": "object"
          },
          "compGiro": {
            "type": "object"
          },
          "compPhone": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwBoSum": {
        "title": "PageResponseOfEwBoSum",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwBoSum"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwBoSum": {
        "required": [
          "description",
          "ewBoSum",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_BO_SUM"
          },
          "description": {
            "type": "string",
            "example": "Get Buy order summary"
          },
          "ewBoSum": {
            "$ref": "#/components/schemas/EwBoSumDef"
          }
        }
      },
      "EwBoSumDef": {
        "required": [
          "dodEwBoSumArray"
        ],
        "type": "object",
        "properties": {
          "dodEwBoSumArray": {
            "$ref": "#/components/schemas/EwBoSumDodEwBoSumArray"
          }
        }
      },
      "EwBoSumDodEwBoSumArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwBoSumDodEwBoSum"
        }
      },
      "EwBoSumDodEwBoSum": {
        "type": "object",
        "properties": {
          "claItemNo": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "currencyEstimate": {
            "type": "object"
          },
          "currencyCode": {
            "type": "object"
          },
          "companyName": {
            "type": "object"
          },
          "address": {
            "type": "object"
          },
          "ciudad": {
            "type": "object"
          },
          "auth": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "giro": {
            "type": "object"
          },
          "telefono": {
            "type": "object"
          },
          "nameId": {
            "type": "object"
          },
          "itemReference": {
            "type": "object"
          },
          "accountNo": {
            "type": "object"
          },
          "amount": {
            "type": "object"
          },
          "currencyAmount": {
            "type": "object"
          },
          "paymentMethod": {
            "type": "object"
          },
          "meansPayNo": {
            "type": "object"
          },
          "payee": {
            "type": "object"
          },
          "specification": {
            "type": "object"
          },
          "partyId": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "agrLineNo": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "itemid": {
            "type": "object"
          },
          "firstOpenDate": {
            "type": "object"
          },
          "firstCloseDate": {
            "type": "object"
          },
          "claSubcaseNo": {
            "type": "object"
          },
          "role": {
            "type": "object"
          },
          "claitemno1": {
            "type": "object"
          },
          "itemType": {
            "type": "object"
          },
          "subitemType": {
            "type": "object"
          },
          "requestId": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwClAct": {
        "title": "PageResponseOfEwClAct",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwClAct"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwClAct": {
        "required": [
          "description",
          "ewClAct",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_CL_ACT"
          },
          "description": {
            "type": "string",
            "example": "Get Activities"
          },
          "ewClAct": {
            "$ref": "#/components/schemas/EwClActDef"
          }
        }
      },
      "EwClActDef": {
        "required": [
          "dodEwClActArray"
        ],
        "type": "object",
        "properties": {
          "dodEwClActArray": {
            "$ref": "#/components/schemas/EwClActDodEwClActArray"
          }
        }
      },
      "EwClActDodEwClActArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwClActDodEwClAct"
        }
      },
      "EwClActDodEwClAct": {
        "type": "object",
        "properties": {
          "claCaseNo": {
            "type": "object"
          },
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "trabajoStatus": {
            "type": "object"
          },
          "claItemNo": {
            "type": "object"
          },
          "compraStatus": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwClDet": {
        "title": "PageResponseOfEwClDet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwClDet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwClDet": {
        "required": [
          "description",
          "ewClDet",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_CL_DET"
          },
          "description": {
            "type": "string",
            "example": "Get extended header detail"
          },
          "ewClDet": {
            "$ref": "#/components/schemas/EwClDetDef"
          }
        }
      },
      "EwClDetDef": {
        "required": [
          "dodEwClDetArray"
        ],
        "type": "object",
        "properties": {
          "dodEwClDetArray": {
            "$ref": "#/components/schemas/EwClDetDodEwClDetArray"
          }
        }
      },
      "EwClDetDodEwClDetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwClDetDodEwClDet"
        }
      },
      "EwClDetDodEwClDet": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "sponsor": {
            "type": "object"
          },
          "tienda": {
            "type": "object"
          },
          "compra": {
            "type": "object"
          },
          "duductible": {
            "type": "object"
          },
          "marca": {
            "type": "object"
          },
          "modelo": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "price ": {
            "type": "object"
          },
          "notificationDate": {
            "type": "object"
          },
          "incidentDate": {
            "type": "object"
          },
          "firstOpenDate": {
            "type": "object"
          },
          "tipoDeReclamo": {
            "type": "object"
          },
          "falla": {
            "type": "object"
          },
          "repair": {
            "type": "object"
          },
          "repairName": {
            "type": "object"
          },
          "statusDesc": {
            "type": "object"
          },
          "consumidor": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "phone": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "altPhone": {
            "type": "object"
          },
          "address": {
            "type": "object"
          },
          "region": {
            "type": "object"
          },
          "comuna": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "certificateNo": {
            "type": "object"
          },
          "riskNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwClObs": {
        "title": "PageResponseOfEwClObs",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwClObs"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwClObs": {
        "required": [
          "description",
          "ewClObs",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_CL_OBS"
          },
          "description": {
            "type": "string",
            "example": "Get observation"
          },
          "ewClObs": {
            "$ref": "#/components/schemas/EwClObsDef"
          }
        }
      },
      "EwClObsDef": {
        "required": [
          "dodEwClObsArray"
        ],
        "type": "object",
        "properties": {
          "dodEwClObsArray": {
            "$ref": "#/components/schemas/EwClObsDodEwClObsArray"
          }
        }
      },
      "EwClObsDodEwClObsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwClObsDodEwClObs"
        }
      },
      "EwClObsDodEwClObs": {
        "type": "object",
        "properties": {
          "writingDate": {
            "type": "object"
          },
          "userid": {
            "type": "object"
          },
          "userComm": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          },
          "claimitemno": {
            "type": "object"
          },
          "suppliercaseid": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwInvDtl": {
        "title": "PageResponseOfEwInvDtl",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwInvDtl"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwInvDtl": {
        "required": [
          "description",
          "ewInvDtl",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_INV_DTL"
          },
          "description": {
            "type": "string",
            "example": "Get pre billing summary"
          },
          "ewInvDtl": {
            "$ref": "#/components/schemas/EwInvDtlDef"
          }
        }
      },
      "EwInvDtlDef": {
        "required": [
          "dodEwInvDtlArray"
        ],
        "type": "object",
        "properties": {
          "dodEwInvDtlArray": {
            "$ref": "#/components/schemas/EwInvDtlDodEwInvDtlArray"
          }
        }
      },
      "EwInvDtlDodEwInvDtlArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwInvDtlDodEwInvDtl"
        }
      },
      "EwInvDtlDodEwInvDtl": {
        "type": "object",
        "properties": {
          "invoiceNo": {
            "type": "object"
          },
          "invoiceDate": {
            "type": "object"
          },
          "grossAmt": {
            "type": "object"
          },
          "tax": {
            "type": "object"
          },
          "netAmt": {
            "type": "object"
          },
          "serviceSupplier": {
            "type": "object"
          },
          "invoicedComp": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwInvInf": {
        "title": "PageResponseOfEwInvInf",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwInvInf"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwInvInf": {
        "required": [
          "description",
          "ewInvInf",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_INV_INF"
          },
          "description": {
            "type": "string",
            "example": "Get billing information for Pre-Invoice Creation"
          },
          "ewInvInf": {
            "$ref": "#/components/schemas/EwInvInfDef"
          }
        }
      },
      "EwInvInfDef": {
        "required": [
          "dodEwInvInfArray"
        ],
        "type": "object",
        "properties": {
          "dodEwInvInfArray": {
            "$ref": "#/components/schemas/EwInvInfDodEwInvInfArray"
          }
        }
      },
      "EwInvInfDodEwInvInfArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwInvInfDodEwInvInf"
        }
      },
      "EwInvInfDodEwInvInf": {
        "type": "object",
        "properties": {
          "compName": {
            "type": "object"
          },
          "street": {
            "type": "object"
          },
          "city": {
            "type": "object"
          },
          "signature": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "giro": {
            "type": "object"
          },
          "phoneNo": {
            "type": "object"
          },
          "netAmt": {
            "type": "object"
          },
          "tax": {
            "type": "object"
          },
          "grossAmt": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwInvLst": {
        "title": "PageResponseOfEwInvLst",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwInvLst"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwInvLst": {
        "required": [
          "description",
          "ewInvLst",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_INV_LST"
          },
          "description": {
            "type": "string",
            "example": "Get list of work orders on an invoice"
          },
          "ewInvLst": {
            "$ref": "#/components/schemas/EwInvLstDef"
          }
        }
      },
      "EwInvLstDef": {
        "required": [
          "dodEwInvLstArray"
        ],
        "type": "object",
        "properties": {
          "dodEwInvLstArray": {
            "$ref": "#/components/schemas/EwInvLstDodEwInvLstArray"
          }
        }
      },
      "EwInvLstDodEwInvLstArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwInvLstDodEwInvLst"
        }
      },
      "EwInvLstDodEwInvLst": {
        "type": "object",
        "properties": {
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "workOrderNo": {
            "type": "object"
          },
          "labor": {
            "type": "object"
          },
          "spareParts": {
            "type": "object"
          },
          "transport": {
            "type": "object"
          },
          "others": {
            "type": "object"
          },
          "grossAmt": {
            "type": "object"
          },
          "tax": {
            "type": "object"
          },
          "netAmt": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwInvTot": {
        "title": "PageResponseOfEwInvTot",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwInvTot"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwInvTot": {
        "required": [
          "description",
          "ewInvTot",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_INV_TOT"
          },
          "description": {
            "type": "string",
            "example": "Get total amounts of work orders on an invoice"
          },
          "ewInvTot": {
            "$ref": "#/components/schemas/EwInvTotDef"
          }
        }
      },
      "EwInvTotDef": {
        "required": [
          "dodEwInvTotArray"
        ],
        "type": "object",
        "properties": {
          "dodEwInvTotArray": {
            "$ref": "#/components/schemas/EwInvTotDodEwInvTotArray"
          }
        }
      },
      "EwInvTotDodEwInvTotArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwInvTotDodEwInvTot"
        }
      },
      "EwInvTotDodEwInvTot": {
        "type": "object",
        "properties": {
          "totLab": {
            "type": "object"
          },
          "totParts": {
            "type": "object"
          },
          "totTrans": {
            "type": "object"
          },
          "totOth": {
            "type": "object"
          },
          "totGross": {
            "type": "object"
          },
          "ssuSerSupCaseNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwOcAmt": {
        "title": "PageResponseOfEwOcAmt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwOcAmt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwOcAmt": {
        "required": [
          "description",
          "ewOcAmt",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_OC_AMT"
          },
          "description": {
            "type": "string",
            "example": "Get Buy order amounts to edit"
          },
          "ewOcAmt": {
            "$ref": "#/components/schemas/EwOcAmtDef"
          }
        }
      },
      "EwOcAmtDef": {
        "required": [
          "dodOcAmtArray"
        ],
        "type": "object",
        "properties": {
          "dodOcAmtArray": {
            "$ref": "#/components/schemas/EwOcAmtDodOcAmtArray"
          }
        }
      },
      "EwOcAmtDodOcAmtArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwOcAmtDodOcAmt"
        }
      },
      "EwOcAmtDodOcAmt": {
        "type": "object",
        "properties": {
          "replaceItemNo": {
            "type": "object"
          },
          "replaceAmt": {
            "type": "object"
          },
          "deductibleAmt": {
            "type": "object"
          },
          "deductiblePrct": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwOwQuo": {
        "title": "PageResponseOfEwOwQuo",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwOwQuo"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwOwQuo": {
        "required": [
          "description",
          "ewOwQuo",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_OW_QUO"
          },
          "description": {
            "type": "string",
            "example": "Get Work Order Quote"
          },
          "ewOwQuo": {
            "$ref": "#/components/schemas/EwOwQuoDef"
          }
        }
      },
      "EwOwQuoDef": {
        "required": [
          "quoteArray"
        ],
        "type": "object",
        "properties": {
          "quoteArray": {
            "$ref": "#/components/schemas/EwOwQuoQuoteArray"
          }
        }
      },
      "EwOwQuoQuoteArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwOwQuoQuote"
        }
      },
      "EwOwQuoQuote": {
        "type": "object",
        "properties": {
          "quoteTotalsArray": {
            "$ref": "#/components/schemas/EwOwQuoQuoteTotalsArray"
          },
          "quoteDetailsArray": {
            "$ref": "#/components/schemas/EwOwQuoQuoteDetailsArray"
          },
          "quoteCountArray": {
            "$ref": "#/components/schemas/EwOwQuoQuoteCountArray"
          }
        }
      },
      "EwOwQuoQuoteTotalsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwOwQuoQuoteTotals"
        }
      },
      "EwOwQuoQuoteTotals": {
        "type": "object",
        "properties": {
          "totalAmt": {
            "type": "object"
          },
          "labor": {
            "type": "object"
          },
          "parts": {
            "type": "object"
          },
          "transportation": {
            "type": "object"
          },
          "others": {
            "type": "object"
          }
        }
      },
      "EwOwQuoQuoteDetailsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwOwQuoQuoteDetails"
        }
      },
      "EwOwQuoQuoteDetails": {
        "type": "object",
        "properties": {
          "quoteType": {
            "type": "object"
          },
          "repairer": {
            "type": "object"
          },
          "ctgTrf": {
            "type": "object"
          },
          "parts": {
            "type": "object"
          },
          "quatity": {
            "type": "object"
          },
          "cost": {
            "type": "object"
          },
          "totalAmt": {
            "type": "object"
          }
        }
      },
      "EwOwQuoQuoteCountArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwOwQuoQuoteCount"
        }
      },
      "EwOwQuoQuoteCount": {
        "type": "object",
        "properties": {
          "totRecords": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwOwSum": {
        "title": "PageResponseOfEwOwSum",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwOwSum"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwOwSum": {
        "required": [
          "description",
          "ewOwSum",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_OW_SUM"
          },
          "description": {
            "type": "string",
            "example": "Get Work Order summary"
          },
          "ewOwSum": {
            "$ref": "#/components/schemas/EwOwSumDef"
          }
        }
      },
      "EwOwSumDef": {
        "required": [
          "dodEwOwSumArray"
        ],
        "type": "object",
        "properties": {
          "dodEwOwSumArray": {
            "$ref": "#/components/schemas/EwOwSumDodEwOwSumArray"
          }
        }
      },
      "EwOwSumDodEwOwSumArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwOwSumDodEwOwSum"
        }
      },
      "EwOwSumDodEwOwSum": {
        "type": "object",
        "properties": {
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "lastUpdate": {
            "type": "object"
          },
          "origQuote": {
            "type": "object"
          },
          "authQuote": {
            "type": "object"
          },
          "buyOrder": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwPreInv": {
        "title": "PageResponseOfEwPreInv",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwPreInv"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwPreInv": {
        "required": [
          "description",
          "ewPreInv",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_PRE_INV"
          },
          "description": {
            "type": "string",
            "example": "Get pre billing invoices for Extended Warranty"
          },
          "ewPreInv": {
            "$ref": "#/components/schemas/EwPreInvDef"
          }
        }
      },
      "EwPreInvDef": {
        "required": [
          "dodEwPreInvArray"
        ],
        "type": "object",
        "properties": {
          "dodEwPreInvArray": {
            "$ref": "#/components/schemas/EwPreInvDodEwPreInvArray"
          }
        }
      },
      "EwPreInvDodEwPreInvArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwPreInvDodEwPreInv"
        }
      },
      "EwPreInvDodEwPreInv": {
        "type": "object",
        "properties": {
          "invoiceNo": {
            "type": "object"
          },
          "supplierName": {
            "type": "object"
          },
          "invoicedComp": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "invoiceDate": {
            "type": "object"
          },
          "grossAmt": {
            "type": "object"
          },
          "tax": {
            "type": "object"
          },
          "netAmt": {
            "type": "object"
          },
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwProtinv": {
        "title": "PageResponseOfEwProtinv",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwProtinv"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwProtinv": {
        "required": [
          "description",
          "ewProtinv",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_PROTINV"
          },
          "description": {
            "type": "string",
            "example": "Get totals for provider payment invoice"
          },
          "ewProtinv": {
            "$ref": "#/components/schemas/EwProtinvDef"
          }
        }
      },
      "EwProtinvDef": {
        "required": [
          "dodEwProtinvArray"
        ],
        "type": "object",
        "properties": {
          "dodEwProtinvArray": {
            "$ref": "#/components/schemas/EwProtinvDodEwProtinvArray"
          }
        }
      },
      "EwProtinvDodEwProtinvArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwProtinvDodEwProtinv"
        }
      },
      "EwProtinvDodEwProtinv": {
        "type": "object",
        "properties": {
          "grandTot": {
            "type": "object"
          },
          "grandTax": {
            "type": "object"
          },
          "grandTtottax": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwProInv": {
        "title": "PageResponseOfEwProInv",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwProInv"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwProInv": {
        "required": [
          "description",
          "ewProInv",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_PRO_INV"
          },
          "description": {
            "type": "string",
            "example": "Get provider payment invoice"
          },
          "ewProInv": {
            "$ref": "#/components/schemas/EwProInvDef"
          }
        }
      },
      "EwProInvDef": {
        "required": [
          "dodEwProInvArray"
        ],
        "type": "object",
        "properties": {
          "dodEwProInvArray": {
            "$ref": "#/components/schemas/EwProInvDodEwProInvArray"
          }
        }
      },
      "EwProInvDodEwProInvArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwProInvDodEwProInv"
        }
      },
      "EwProInvDodEwProInv": {
        "type": "object",
        "properties": {
          "ssuSerSupCaseNo": {
            "type": "object"
          },
          "labour": {
            "type": "object"
          },
          "parts": {
            "type": "object"
          },
          "transport": {
            "type": "object"
          },
          "other": {
            "type": "object"
          },
          "tot": {
            "type": "object"
          },
          "tax": {
            "type": "object"
          },
          "tottax": {
            "type": "object"
          },
          "rn": {
            "type": "object"
          },
          "invoiceNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwQtEdit": {
        "title": "PageResponseOfEwQtEdit",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwQtEdit"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwQtEdit": {
        "required": [
          "description",
          "ewQtEdit",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_QT_EDIT"
          },
          "description": {
            "type": "string",
            "example": "Get Quote items to edit"
          },
          "ewQtEdit": {
            "$ref": "#/components/schemas/EwQtEditDef"
          }
        }
      },
      "EwQtEditDef": {
        "required": [
          "dodEwQtEditArray"
        ],
        "type": "object",
        "properties": {
          "dodEwQtEditArray": {
            "$ref": "#/components/schemas/EwQtEditDodEwQtEditArray"
          }
        }
      },
      "EwQtEditDodEwQtEditArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtEditDodEwQtEdit"
        }
      },
      "EwQtEditDodEwQtEdit": {
        "type": "object",
        "properties": {
          "type": {
            "type": "object"
          },
          "repairerId": {
            "type": "object"
          },
          "tariffType": {
            "type": "object"
          },
          "category": {
            "type": "object"
          },
          "part": {
            "type": "object"
          },
          "quantity": {
            "type": "object"
          },
          "cost": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwQtLovs": {
        "title": "PageResponseOfEwQtLovs",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwQtLovs"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwQtLovs": {
        "required": [
          "description",
          "ewQtLovs",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_QT_LOVS"
          },
          "description": {
            "type": "string",
            "example": "Get LOVs for EW Quotes"
          },
          "ewQtLovs": {
            "$ref": "#/components/schemas/EwQtLovsDef"
          }
        }
      },
      "EwQtLovsDef": {
        "required": [
          "lovDetailsArray"
        ],
        "type": "object",
        "properties": {
          "lovDetailsArray": {
            "$ref": "#/components/schemas/EwQtLovsLovDetailsArray"
          }
        }
      },
      "EwQtLovsLovDetailsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsLovDetails"
        }
      },
      "EwQtLovsLovDetails": {
        "type": "object",
        "properties": {
          "repairersArray": {
            "$ref": "#/components/schemas/EwQtLovsRepairersArray"
          },
          "laborTariffsArray": {
            "$ref": "#/components/schemas/EwQtLovsLaborTariffsArray"
          },
          "repairerLabTariffCombArray": {
            "$ref": "#/components/schemas/EwQtLovsRepairerLabTariffCombArray"
          },
          "partsCategoryArray": {
            "$ref": "#/components/schemas/EwQtLovsPartsCategoryArray"
          },
          "partsArray": {
            "$ref": "#/components/schemas/EwQtLovsPartsArray"
          },
          "partsCategoryCombArray": {
            "$ref": "#/components/schemas/EwQtLovsPartsCategoryCombArray"
          },
          "transportTariffsArray": {
            "$ref": "#/components/schemas/EwQtLovsTransportTariffsArray"
          },
          "repairerTrsTariffCombArray": {
            "$ref": "#/components/schemas/EwQtLovsRepairerTrsTariffCombArray"
          },
          "ewQuoteRejectReasonArray": {
            "$ref": "#/components/schemas/EwQtLovsEwQuoteRejectReasonArray"
          }
        }
      },
      "EwQtLovsRepairersArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsRepairers"
        }
      },
      "EwQtLovsRepairers": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "repairerName": {
            "type": "object"
          }
        }
      },
      "EwQtLovsLaborTariffsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsLaborTariffs"
        }
      },
      "EwQtLovsLaborTariffs": {
        "type": "object",
        "properties": {
          "tariffId": {
            "type": "object"
          },
          "tariffName": {
            "type": "object"
          }
        }
      },
      "EwQtLovsRepairerLabTariffCombArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsRepairerLabTariffComb"
        }
      },
      "EwQtLovsRepairerLabTariffComb": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "laborTariffId": {
            "type": "object"
          },
          "laborTariffCost": {
            "type": "object"
          }
        }
      },
      "EwQtLovsPartsCategoryArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsPartsCategory"
        }
      },
      "EwQtLovsPartsCategory": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "object"
          },
          "categoryName": {
            "type": "object"
          }
        }
      },
      "EwQtLovsPartsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsParts"
        }
      },
      "EwQtLovsParts": {
        "type": "object",
        "properties": {
          "partId": {
            "type": "object"
          },
          "partName": {
            "type": "object"
          }
        }
      },
      "EwQtLovsPartsCategoryCombArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsPartsCategoryComb"
        }
      },
      "EwQtLovsPartsCategoryComb": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "object"
          },
          "partId": {
            "type": "object"
          }
        }
      },
      "EwQtLovsTransportTariffsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsTransportTariffs"
        }
      },
      "EwQtLovsTransportTariffs": {
        "type": "object",
        "properties": {
          "transportTariffId": {
            "type": "object"
          },
          "transportTariffName": {
            "type": "object"
          }
        }
      },
      "EwQtLovsRepairerTrsTariffCombArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsRepairerTrsTariffComb"
        }
      },
      "EwQtLovsRepairerTrsTariffComb": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "transportTariffId": {
            "type": "object"
          },
          "transportTariffCost": {
            "type": "object"
          }
        }
      },
      "EwQtLovsEwQuoteRejectReasonArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwQtLovsEwQuoteRejectReason"
        }
      },
      "EwQtLovsEwQuoteRejectReason": {
        "type": "object",
        "properties": {
          "quoteRejReason": {
            "type": "object"
          }
        }
      },
      "PageResponseOfEwSpPay": {
        "title": "PageResponseOfEwSpPay",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/EwSpPay"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "EwSpPay": {
        "required": [
          "description",
          "ewSpPay",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EW_SP_PAY"
          },
          "description": {
            "type": "string",
            "example": "Get Sponsor payment list"
          },
          "ewSpPay": {
            "$ref": "#/components/schemas/EwSpPayDef"
          }
        }
      },
      "EwSpPayDef": {
        "required": [
          "dodEwSpPayArray"
        ],
        "type": "object",
        "properties": {
          "dodEwSpPayArray": {
            "$ref": "#/components/schemas/EwSpPayDodEwSpPayArray"
          }
        }
      },
      "EwSpPayDodEwSpPayArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EwSpPayDodEwSpPay"
        }
      },
      "EwSpPayDodEwSpPay": {
        "type": "object",
        "properties": {
          "sponsor": {
            "type": "object"
          },
          "claCaseNoAlt": {
            "type": "object"
          },
          "claItemNo": {
            "type": "object"
          },
          "invoicedcomp": {
            "type": "object"
          },
          "currencyEstimate": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfExtusera": {
        "title": "PageResponseOfExtusera",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Extusera"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Extusera": {
        "required": [
          "description",
          "extusera",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EXTUSERA"
          },
          "description": {
            "type": "string",
            "example": "Get External users including created in digital"
          },
          "extusera": {
            "$ref": "#/components/schemas/ExtuseraDef"
          }
        }
      },
      "ExtuseraDef": {
        "required": [
          "dodExtuseraArray"
        ],
        "type": "object",
        "properties": {
          "dodExtuseraArray": {
            "$ref": "#/components/schemas/ExtuseraDodExtuseraArray"
          }
        }
      },
      "ExtuseraDodExtuseraArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtuseraDodExtusera"
        }
      },
      "ExtuseraDodExtusera": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "forename": {
            "type": "object"
          },
          "surname": {
            "type": "object"
          },
          "documentType": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          }
        }
      },
      "PageResponseOfExtuserdet": {
        "title": "PageResponseOfExtuserdet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Extuserdet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Extuserdet": {
        "required": [
          "description",
          "extuserdet",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EXTUSERDET"
          },
          "description": {
            "type": "string",
            "example": "Get user details"
          },
          "extuserdet": {
            "$ref": "#/components/schemas/ExtuserdetDef"
          }
        }
      },
      "ExtuserdetDef": {
        "required": [
          "dodExtuserdetArray"
        ],
        "type": "object",
        "properties": {
          "dodExtuserdetArray": {
            "$ref": "#/components/schemas/ExtuserdetDodExtuserdetArray"
          }
        }
      },
      "ExtuserdetDodExtuserdetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtuserdetDodExtuserdet"
        }
      },
      "ExtuserdetDodExtuserdet": {
        "type": "object",
        "properties": {
          "type": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "forename": {
            "type": "object"
          },
          "surname": {
            "type": "object"
          },
          "documentType": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "phoneExtent": {
            "type": "object"
          },
          "userId": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "locked": {
            "type": "object"
          },
          "compLocked": {
            "type": "object"
          },
          "profileArray": {
            "$ref": "#/components/schemas/ExtuserdetProfileArray"
          }
        }
      },
      "ExtuserdetProfileArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtuserdetProfile"
        }
      },
      "ExtuserdetProfile": {
        "type": "object",
        "properties": {
          "profId": {
            "type": "object"
          },
          "profText": {
            "type": "object"
          }
        }
      },
      "PageResponseOfExtUser": {
        "title": "PageResponseOfExtUser",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ExtUser"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ExtUser": {
        "required": [
          "description",
          "extUser",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EXT_USER"
          },
          "description": {
            "type": "string",
            "example": "Get External users"
          },
          "extUser": {
            "$ref": "#/components/schemas/ExtUserDef"
          }
        }
      },
      "ExtUserDef": {
        "required": [
          "dodExtUserArray"
        ],
        "type": "object",
        "properties": {
          "dodExtUserArray": {
            "$ref": "#/components/schemas/ExtUserDodExtUserArray"
          }
        }
      },
      "ExtUserDodExtUserArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtUserDodExtUser"
        }
      },
      "ExtUserDodExtUser": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "forename": {
            "type": "object"
          },
          "surname": {
            "type": "object"
          },
          "documentType": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          }
        }
      },
      "PageResponseOfExSubitem": {
        "title": "PageResponseOfExSubitem",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ExSubitem"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ExSubitem": {
        "required": [
          "description",
          "exSubitem",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "EX_SUBITEM"
          },
          "description": {
            "type": "string",
            "example": "List of excess subitem types"
          },
          "exSubitem": {
            "$ref": "#/components/schemas/ExSubitemDef"
          }
        }
      },
      "ExSubitemDef": {
        "required": [
          "excessSubitemArray"
        ],
        "type": "object",
        "properties": {
          "excessSubitemArray": {
            "$ref": "#/components/schemas/ExSubitemExcessSubitemArray"
          }
        }
      },
      "ExSubitemExcessSubitemArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExSubitemExcessSubitem"
        }
      },
      "ExSubitemExcessSubitem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfFalWoUpd": {
        "title": "PageResponseOfFalWoUpd",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/FalWoUpd"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "FalWoUpd": {
        "required": [
          "description",
          "falWoUpd",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "FAL_WO_UPD"
          },
          "description": {
            "type": "string",
            "example": "Get WorkOrder update for Falabella"
          },
          "falWoUpd": {
            "$ref": "#/components/schemas/FalWoUpdDef"
          }
        }
      },
      "FalWoUpdDef": {
        "required": [
          "dodFalWoUpdArray"
        ],
        "type": "object",
        "properties": {
          "dodFalWoUpdArray": {
            "$ref": "#/components/schemas/FalWoUpdDodFalWoUpdArray"
          }
        }
      },
      "FalWoUpdDodFalWoUpdArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FalWoUpdDodFalWoUpd"
        }
      },
      "FalWoUpdDodFalWoUpd": {
        "type": "object",
        "properties": {
          "numeroServicioTecnico": {
            "type": "object"
          },
          "numeroF11": {
            "type": "object"
          },
          "codigoServicioTecnico": {
            "type": "object"
          },
          "nombreServicioTecnico": {
            "type": "object"
          },
          "telefonoServicioTecnico": {
            "type": "object"
          },
          "sucursalServicioTecnico": {
            "type": "object"
          },
          "estadoOrdenTrabajo": {
            "type": "object"
          },
          "fechaModificacionEstado": {
            "type": "object"
          },
          "fechaRecepcionProducto": {
            "type": "object"
          },
          "numeroGuiaRecepcion": {
            "type": "object"
          },
          "fechaEntregaProducto": {
            "type": "object"
          },
          "numeroGuiaDespacho": {
            "type": "object"
          },
          "descripcionRechazoOReparacion": {
            "type": "object"
          },
          "fechaCreacionOT": {
            "type": "object"
          },
          "numeroOTServicioTecnico": {
            "type": "object"
          },
          "skuProducto": {
            "type": "object"
          },
          "precioProducto": {
            "type": "object"
          }
        }
      },
      "PageResponseOfFastsearch": {
        "title": "PageResponseOfFastsearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Fastsearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Fastsearch": {
        "required": [
          "description",
          "fastsearch",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "FASTSEARCH"
          },
          "description": {
            "type": "string",
            "example": "Get quick search results"
          },
          "fastsearch": {
            "$ref": "#/components/schemas/FastsearchDef"
          }
        }
      },
      "FastsearchDef": {
        "required": [
          "resultsArray"
        ],
        "type": "object",
        "properties": {
          "resultsArray": {
            "$ref": "#/components/schemas/FastsearchResultsArray"
          }
        }
      },
      "FastsearchResultsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FastsearchResults"
        }
      },
      "FastsearchResults": {
        "type": "object",
        "properties": {
          "policiesArray": {
            "$ref": "#/components/schemas/FastsearchPoliciesArray"
          },
          "claimsArray": {
            "$ref": "#/components/schemas/FastsearchClaimsArray"
          },
          "certificatesArray": {
            "$ref": "#/components/schemas/FastsearchCertificatesArray"
          },
          "warrantyClaimsArray": {
            "$ref": "#/components/schemas/FastsearchWarrantyClaimsArray"
          },
          "tasksArray": {
            "$ref": "#/components/schemas/FastsearchTasksArray"
          }
        }
      },
      "FastsearchPoliciesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FastsearchPolicies"
        }
      },
      "FastsearchPolicies": {
        "type": "object",
        "properties": {
          "policyNumber": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "period": {
            "type": "object"
          },
          "agreementLineNo": {
            "type": "object"
          }
        }
      },
      "FastsearchClaimsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FastsearchClaims"
        }
      },
      "FastsearchClaims": {
        "type": "object",
        "properties": {
          "claimNumber": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "policyNumber": {
            "type": "object"
          },
          "incidentDate": {
            "type": "object"
          },
          "fnolDescription": {
            "type": "object"
          }
        }
      },
      "FastsearchCertificatesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FastsearchCertificates"
        }
      },
      "FastsearchCertificates": {
        "type": "object",
        "properties": {
          "certificateNumber": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "period": {
            "type": "object"
          },
          "product": {
            "type": "object"
          }
        }
      },
      "FastsearchWarrantyClaimsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FastsearchWarrantyClaims"
        }
      },
      "FastsearchWarrantyClaims": {
        "type": "object",
        "properties": {
          "claimNumber": {
            "type": "object"
          },
          "claCaseNo": {
            "type": "object"
          },
          "certificateNumber": {
            "type": "object"
          },
          "incidentDate": {
            "type": "object"
          },
          "product": {
            "type": "object"
          }
        }
      },
      "FastsearchTasksArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FastsearchTasks"
        }
      },
      "FastsearchTasks": {
        "type": "object",
        "properties": {
          "serviceSupplierCaseNumber": {
            "type": "object"
          },
          "certificateNumber": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      },
      "PageResponseOfFnolsearch": {
        "title": "PageResponseOfFnolsearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Fnolsearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Fnolsearch": {
        "required": [
          "description",
          "fnolsearch",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "FNOLSEARCH"
          },
          "description": {
            "type": "string",
            "example": "Quick Launch claim search"
          },
          "fnolsearch": {
            "$ref": "#/components/schemas/FnolsearchDef"
          }
        }
      },
      "FnolsearchDef": {
        "required": [
          "dodFnolsearchArray"
        ],
        "type": "object",
        "properties": {
          "dodFnolsearchArray": {
            "$ref": "#/components/schemas/FnolsearchDodFnolsearchArray"
          }
        }
      },
      "FnolsearchDodFnolsearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FnolsearchDodFnolsearch"
        }
      },
      "FnolsearchDodFnolsearch": {
        "type": "object",
        "properties": {
          "fnol": {
            "type": "object"
          },
          "fnolDescription": {
            "type": "object"
          },
          "productLineId": {
            "type": "object"
          },
          "policyLineDesc": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "objectType": {
            "type": "object"
          },
          "agrLineNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfFnolLov": {
        "title": "PageResponseOfFnolLov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/FnolLov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "FnolLov": {
        "required": [
          "description",
          "fnolLov",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "FNOL_LOV"
          },
          "description": {
            "type": "string",
            "example": "Get list of fnol groups for client"
          },
          "fnolLov": {
            "$ref": "#/components/schemas/FnolLovDef"
          }
        }
      },
      "FnolLovDef": {
        "required": [
          "dodFnolLovArray"
        ],
        "type": "object",
        "properties": {
          "dodFnolLovArray": {
            "$ref": "#/components/schemas/FnolLovDodFnolLovArray"
          }
        }
      },
      "FnolLovDodFnolLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FnolLovDodFnolLov"
        }
      },
      "FnolLovDodFnolLov": {
        "type": "object",
        "properties": {
          "fnol": {
            "type": "object"
          },
          "fnolDescription": {
            "type": "object"
          }
        }
      },
      "PageResponseOfGetnameid": {
        "title": "PageResponseOfGetnameid",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Getnameid"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Getnameid": {
        "required": [
          "description",
          "getnameid",
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "GETNAMEID"
          },
          "description": {
            "type": "string",
            "example": "Get name id by user logged in"
          },
          "getnameid": {
            "$ref": "#/components/schemas/GetnameidDef"
          }
        }
      },
      "GetnameidDef": {
        "required": [
          "dodGetnameidArray"
        ],
        "type": "object",
        "properties": {
          "dodGetnameidArray": {
            "$ref": "#/components/schemas/GetnameidDodGetnameidArray"
          }
        }
      },
      "GetnameidDodGetnameidArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetnameidDodGetnameid"
        }
      },
      "GetnameidDodGetnameid": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          }
        }
      },
      "PageResponseOfHandlerlov": {
        "title": "PageResponseOfHandlerlov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Handlerlov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Handlerlov": {
        "required": [
          "description",
          "group",
          "handlerlov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "HANDLERLOV"
          },
          "description": {
            "type": "string",
            "example": "LOV of claim handlers"
          },
          "handlerlov": {
            "$ref": "#/components/schemas/HandlerlovDef"
          }
        }
      },
      "HandlerlovDef": {
        "required": [
          "dodHandlerLovArray"
        ],
        "type": "object",
        "properties": {
          "dodHandlerLovArray": {
            "$ref": "#/components/schemas/HandlerlovDodHandlerLovArray"
          }
        }
      },
      "HandlerlovDodHandlerLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HandlerlovDodHandlerLov"
        }
      },
      "HandlerlovDodHandlerLov": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "object"
          },
          "userName": {
            "type": "object"
          }
        }
      },
      "PageResponseOfInfSearch": {
        "title": "PageResponseOfInfSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/InfSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "InfSearch": {
        "required": [
          "description",
          "group",
          "infSearch"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "INF_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "Retrieve info for specified policy line no"
          },
          "infSearch": {
            "$ref": "#/components/schemas/InfSearchDef"
          }
        }
      },
      "InfSearchDef": {
        "required": [
          "dodInfSearchArray"
        ],
        "type": "object",
        "properties": {
          "dodInfSearchArray": {
            "$ref": "#/components/schemas/InfSearchDodInfSearchArray"
          }
        }
      },
      "InfSearchDodInfSearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InfSearchDodInfSearch"
        }
      },
      "InfSearchDodInfSearch": {
        "type": "object",
        "properties": {
          "policyNo": {
            "type": "object"
          },
          "prodDesc": {
            "type": "object"
          },
          "prodId": {
            "type": "object"
          },
          "vigencia": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "phone": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "objectNo": {
            "type": "object"
          },
          "agrLineNo": {
            "type": "object"
          },
          "seqNo": {
            "type": "object"
          },
          "agrLineSeqNo": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          },
          "printRequestId": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          },
          "policyNoAlt": {
            "type": "object"
          },
          "productLineId": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "salesChannel": {
            "type": "object"
          },
          "policyLineDesc": {
            "type": "object"
          },
          "agentName": {
            "type": "object"
          }
        }
      },
      "PageResponseOfIntuser": {
        "title": "PageResponseOfIntuser",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Intuser"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Intuser": {
        "required": [
          "description",
          "group",
          "intuser"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "INTUSER"
          },
          "description": {
            "type": "string",
            "example": "Get internal users"
          },
          "intuser": {
            "$ref": "#/components/schemas/IntuserDef"
          }
        }
      },
      "IntuserDef": {
        "required": [
          "dodIntuserArray"
        ],
        "type": "object",
        "properties": {
          "dodIntuserArray": {
            "$ref": "#/components/schemas/IntuserDodIntuserArray"
          }
        }
      },
      "IntuserDodIntuserArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IntuserDodIntuser"
        }
      },
      "IntuserDodIntuser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "object"
          },
          "userName": {
            "type": "object"
          }
        }
      },
      "PageResponseOfIntuserdet": {
        "title": "PageResponseOfIntuserdet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Intuserdet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Intuserdet": {
        "required": [
          "description",
          "group",
          "intuserdet"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "INTUSERDET"
          },
          "description": {
            "type": "string",
            "example": "Get user details"
          },
          "intuserdet": {
            "$ref": "#/components/schemas/IntuserdetDef"
          }
        }
      },
      "IntuserdetDef": {
        "required": [
          "dodIntuserdetArray"
        ],
        "type": "object",
        "properties": {
          "dodIntuserdetArray": {
            "$ref": "#/components/schemas/IntuserdetDodIntuserdetArray"
          }
        }
      },
      "IntuserdetDodIntuserdetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IntuserdetDodIntuserdet"
        }
      },
      "IntuserdetDodIntuserdet": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "object"
          },
          "locked": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "profileArray": {
            "$ref": "#/components/schemas/IntuserdetProfileArray"
          }
        }
      },
      "IntuserdetProfileArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IntuserdetProfile"
        }
      },
      "IntuserdetProfile": {
        "type": "object",
        "properties": {
          "profId": {
            "type": "object"
          },
          "profText": {
            "type": "object"
          }
        }
      },
      "PageResponseOfItypecomb": {
        "title": "PageResponseOfItypecomb",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Itypecomb"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Itypecomb": {
        "required": [
          "description",
          "group",
          "itypecomb"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "ITYPECOMB"
          },
          "description": {
            "type": "string",
            "example": "Retrieve item_type_combinations with descriptions"
          },
          "itypecomb": {
            "$ref": "#/components/schemas/ItypecombDef"
          }
        }
      },
      "ItypecombDef": {
        "required": [
          "dodItypecombArray"
        ],
        "type": "object",
        "properties": {
          "dodItypecombArray": {
            "$ref": "#/components/schemas/ItypecombDodItypecombArray"
          }
        }
      },
      "ItypecombDodItypecombArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ItypecombDodItypecomb"
        }
      },
      "ItypecombDodItypecomb": {
        "type": "object",
        "properties": {
          "itemType": {
            "type": "object"
          },
          "subitemType": {
            "type": "object"
          },
          "itemTypeDesc": {
            "type": "object"
          },
          "subitemTypeDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMakeDet": {
        "title": "PageResponseOfMakeDet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MakeDet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MakeDet": {
        "required": [
          "description",
          "group",
          "makeDet"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MAKE_DET"
          },
          "description": {
            "type": "string",
            "example": "GET brands "
          },
          "makeDet": {
            "$ref": "#/components/schemas/MakeDetDef"
          }
        }
      },
      "MakeDetDef": {
        "required": [
          "dodMakeDetArray"
        ],
        "type": "object",
        "properties": {
          "dodMakeDetArray": {
            "$ref": "#/components/schemas/MakeDetDodMakeDetArray"
          }
        }
      },
      "MakeDetDodMakeDetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MakeDetDodMakeDet"
        }
      },
      "MakeDetDodMakeDet": {
        "type": "object",
        "properties": {
          "make": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMld": {
        "title": "PageResponseOfMld",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Mld"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Mld": {
        "required": [
          "description",
          "group",
          "mld"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Mass load Totals"
          },
          "mld": {
            "$ref": "#/components/schemas/MldDef"
          }
        }
      },
      "MldDef": {
        "required": [
          "caseItemArray"
        ],
        "type": "object",
        "properties": {
          "caseItemArray": {
            "$ref": "#/components/schemas/MldCaseItemArray"
          }
        }
      },
      "MldCaseItemArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldCaseItem"
        }
      },
      "MldCaseItem": {
        "type": "object",
        "properties": {
          "cnt": {
            "type": "object"
          },
          "caseSubType": {
            "type": "object"
          },
          "caseSubTypeDesc": {
            "type": "object"
          },
          "caseItemDetArray": {
            "$ref": "#/components/schemas/MldCaseItemDetArray"
          }
        }
      },
      "MldCaseItemDetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldCaseItemDet"
        }
      },
      "MldCaseItemDet": {
        "type": "object",
        "properties": {
          "cnt": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "statusDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldsLov": {
        "title": "PageResponseOfMldsLov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldsLov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldsLov": {
        "required": [
          "description",
          "group",
          "mldsLov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLDS_LOV"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Mass load status LOV"
          },
          "mldsLov": {
            "$ref": "#/components/schemas/MldsLovDef"
          }
        }
      },
      "MldsLovDef": {
        "required": [
          "dodMldsLovArray"
        ],
        "type": "object",
        "properties": {
          "dodMldsLovArray": {
            "$ref": "#/components/schemas/MldsLovDodMldsLovArray"
          }
        }
      },
      "MldsLovDodMldsLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldsLovDodMldsLov"
        }
      },
      "MldsLovDodMldsLov": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldtLov": {
        "title": "PageResponseOfMldtLov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldtLov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldtLov": {
        "required": [
          "description",
          "group",
          "mldtLov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLDT_LOV"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Mass load type LOV"
          },
          "mldtLov": {
            "$ref": "#/components/schemas/MldtLovDef"
          }
        }
      },
      "MldtLovDef": {
        "required": [
          "dodMldtLovArray"
        ],
        "type": "object",
        "properties": {
          "dodMldtLovArray": {
            "$ref": "#/components/schemas/MldtLovDodMldtLovArray"
          }
        }
      },
      "MldtLovDodMldtLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldtLovDodMldtLov"
        }
      },
      "MldtLovDodMldtLov": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldCl": {
        "title": "PageResponseOfMldCl",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldCl"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldCl": {
        "required": [
          "description",
          "group",
          "mldCl"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD_CL"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Claim Massload details"
          },
          "mldCl": {
            "$ref": "#/components/schemas/MldClDef"
          }
        }
      },
      "MldClDef": {
        "required": [
          "dodMldClArray"
        ],
        "type": "object",
        "properties": {
          "dodMldClArray": {
            "$ref": "#/components/schemas/MldClDodMldClArray"
          }
        }
      },
      "MldClDodMldClArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldClDodMldCl"
        }
      },
      "MldClDodMldCl": {
        "type": "object",
        "properties": {
          "lineNo": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "notes": {
            "type": "object"
          },
          "claCaseNoAlt": {
            "type": "object"
          },
          "incidentDateExact": {
            "type": "object"
          },
          "notificationDate": {
            "type": "object"
          },
          "referralsYN": {
            "type": "object"
          },
          "policyNoAlt": {
            "type": "object"
          },
          "event": {
            "type": "object"
          },
          "cause": {
            "type": "object"
          },
          "cover": {
            "type": "object"
          },
          "handler": {
            "type": "object"
          },
          "liquidator": {
            "type": "object"
          },
          "majorEvent": {
            "type": "object"
          },
          "incidentPlace": {
            "type": "object"
          },
          "placeDesc": {
            "type": "object"
          },
          "incidentAddress": {
            "type": "object"
          },
          "informantType": {
            "type": "object"
          },
          "informantName": {
            "type": "object"
          },
          "filedBy": {
            "type": "object"
          },
          "compensationAmt": {
            "type": "object"
          },
          "costAmt": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldCust": {
        "title": "PageResponseOfMldCust",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldCust"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldCust": {
        "required": [
          "description",
          "group",
          "mldCust"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD_CUST"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Customer Massload details"
          },
          "mldCust": {
            "$ref": "#/components/schemas/MldCustDef"
          }
        }
      },
      "MldCustDef": {
        "required": [
          "dodMldCustArray"
        ],
        "type": "object",
        "properties": {
          "dodMldCustArray": {
            "$ref": "#/components/schemas/MldCustDodMldCustArray"
          }
        }
      },
      "MldCustDodMldCustArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldCustDodMldCust"
        }
      },
      "MldCustDodMldCust": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "docType": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "lineNo": {
            "type": "object"
          },
          "notes": {
            "type": "object"
          },
          "nameType": {
            "type": "object"
          },
          "forename": {
            "type": "object"
          },
          "surname": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "bank": {
            "type": "object"
          },
          "bankAcc": {
            "type": "object"
          },
          "swift": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldDtls": {
        "title": "PageResponseOfMldDtls",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldDtls"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldDtls": {
        "required": [
          "description",
          "group",
          "mldDtls"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD_DTLS"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Mass load details"
          },
          "mldDtls": {
            "$ref": "#/components/schemas/MldDtlsDef"
          }
        }
      },
      "MldDtlsDef": {
        "required": [
          "dodMldDtlsArray"
        ],
        "type": "object",
        "properties": {
          "dodMldDtlsArray": {
            "$ref": "#/components/schemas/MldDtlsDodMldDtlsArray"
          }
        }
      },
      "MldDtlsDodMldDtlsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldDtlsDodMldDtls"
        }
      },
      "MldDtlsDodMldDtls": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "object"
          },
          "uploadBy": {
            "type": "object"
          },
          "massloadType": {
            "type": "object"
          },
          "uploadDate": {
            "type": "object"
          },
          "processingDate": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "totalRecords": {
            "type": "object"
          },
          "successRecords": {
            "type": "object"
          },
          "errorRecords": {
            "type": "object"
          },
          "notProcessedRecords": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldList": {
        "title": "PageResponseOfMldList",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldList"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldList": {
        "required": [
          "description",
          "group",
          "mldList"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD_LIST"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Mass load details List"
          },
          "mldList": {
            "$ref": "#/components/schemas/MldListDef"
          }
        }
      },
      "MldListDef": {
        "required": [
          "dodMldListArray"
        ],
        "type": "object",
        "properties": {
          "dodMldListArray": {
            "$ref": "#/components/schemas/MldListDodMldListArray"
          }
        }
      },
      "MldListDodMldListArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldListDodMldList"
        }
      },
      "MldListDodMldList": {
        "type": "object",
        "properties": {
          "caseSubTypeDesc": {
            "type": "object"
          },
          "caseSubType": {
            "type": "object"
          },
          "loadNo": {
            "type": "object"
          },
          "writingDate": {
            "type": "object"
          },
          "actionDate": {
            "type": "object"
          },
          "recordUserid": {
            "type": "object"
          },
          "records": {
            "type": "object"
          },
          "actionId": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "records1": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldPay": {
        "title": "PageResponseOfMldPay",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldPay"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldPay": {
        "required": [
          "description",
          "group",
          "mldPay"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD_PAY"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Payment Massload details"
          },
          "mldPay": {
            "$ref": "#/components/schemas/MldPayDef"
          }
        }
      },
      "MldPayDef": {
        "required": [
          "dodMldPayArray"
        ],
        "type": "object",
        "properties": {
          "dodMldPayArray": {
            "$ref": "#/components/schemas/MldPayDodMldPayArray"
          }
        }
      },
      "MldPayDodMldPayArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldPayDodMldPay"
        }
      },
      "MldPayDodMldPay": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "invoiceNo": {
            "type": "object"
          },
          "itemType": {
            "type": "object"
          },
          "referralsYN": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "itemsubType": {
            "type": "object"
          },
          "paymentAmtExact": {
            "type": "object"
          },
          "paymentCurrency": {
            "type": "object"
          },
          "lineNo": {
            "type": "object"
          },
          "notes": {
            "type": "object"
          },
          "paymentType": {
            "type": "object"
          },
          "taxPct": {
            "type": "object"
          },
          "paymentNo": {
            "type": "object"
          },
          "invoiceDate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMldRsv": {
        "title": "PageResponseOfMldRsv",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MldRsv"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MldRsv": {
        "required": [
          "description",
          "group",
          "mldRsv"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MLD_RSV"
          },
          "description": {
            "type": "string",
            "example": "Retrieve Reserve Massload details"
          },
          "mldRsv": {
            "$ref": "#/components/schemas/MldRsvDef"
          }
        }
      },
      "MldRsvDef": {
        "required": [
          "dodMldRsvArray"
        ],
        "type": "object",
        "properties": {
          "dodMldRsvArray": {
            "$ref": "#/components/schemas/MldRsvDodMldRsvArray"
          }
        }
      },
      "MldRsvDodMldRsvArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MldRsvDodMldRsv"
        }
      },
      "MldRsvDodMldRsv": {
        "type": "object",
        "properties": {
          "claCaseNoAlt": {
            "type": "object"
          },
          "itemType": {
            "type": "object"
          },
          "referralsYN": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "subitemType": {
            "type": "object"
          },
          "newReserveExact": {
            "type": "object"
          },
          "lineNo": {
            "type": "object"
          },
          "notes": {
            "type": "object"
          }
        }
      },
      "PageResponseOfMmDet": {
        "title": "PageResponseOfMmDet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/MmDet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "MmDet": {
        "required": [
          "description",
          "group",
          "mmDet"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MM_DET"
          },
          "description": {
            "type": "string",
            "example": "GET brands and models"
          },
          "mmDet": {
            "$ref": "#/components/schemas/MmDetDef"
          }
        }
      },
      "MmDetDef": {
        "required": [
          "dodMmDetArray"
        ],
        "type": "object",
        "properties": {
          "dodMmDetArray": {
            "$ref": "#/components/schemas/MmDetDodMmDetArray"
          }
        }
      },
      "MmDetDodMmDetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MmDetDodMmDet"
        }
      },
      "MmDetDodMmDet": {
        "type": "object",
        "properties": {
          "make": {
            "type": "object"
          },
          "model": {
            "type": "object"
          }
        }
      },
      "PageResponseOfModelDet": {
        "title": "PageResponseOfModelDet",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ModelDet"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ModelDet": {
        "required": [
          "description",
          "group",
          "modelDet"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "MODEL_DET"
          },
          "description": {
            "type": "string",
            "example": "Get models"
          },
          "modelDet": {
            "$ref": "#/components/schemas/ModelDetDef"
          }
        }
      },
      "ModelDetDef": {
        "required": [
          "dodModelDetArray"
        ],
        "type": "object",
        "properties": {
          "dodModelDetArray": {
            "$ref": "#/components/schemas/ModelDetDodModelDetArray"
          }
        }
      },
      "ModelDetDodModelDetArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ModelDetDodModelDet"
        }
      },
      "ModelDetDodModelDet": {
        "type": "object",
        "properties": {
          "model": {
            "type": "object"
          }
        }
      },
      "PageResponseOfNameidcrc": {
        "title": "PageResponseOfNameidcrc",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Nameidcrc"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Nameidcrc": {
        "required": [
          "description",
          "group",
          "nameidcrc1"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "NAMEIDCRC"
          },
          "description": {
            "type": "string",
            "example": "Get party IDs by civilreg"
          },
          "nameidcrc1": {
            "$ref": "#/components/schemas/Nameidcrc1Def"
          }
        }
      },
      "Nameidcrc1Def": {
        "required": [
          "nameArray"
        ],
        "type": "object",
        "properties": {
          "nameArray": {
            "$ref": "#/components/schemas/Nameidcrc1NameArray"
          }
        }
      },
      "Nameidcrc1NameArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Nameidcrc1Name"
        }
      },
      "Nameidcrc1Name": {
        "type": "object"
      },
      "PageResponseOfOrderby": {
        "title": "PageResponseOfOrderby",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Orderby"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Orderby": {
        "required": [
          "description",
          "group",
          "orderby"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "ORDERBY"
          },
          "description": {
            "type": "string",
            "example": "ORDERBY"
          },
          "orderby": {
            "$ref": "#/components/schemas/OrderbyDef"
          }
        }
      },
      "OrderbyDef": {
        "required": [
          "orderbyArray"
        ],
        "type": "object",
        "properties": {
          "orderbyArray": {
            "$ref": "#/components/schemas/OrderbyOrderbyArray"
          }
        }
      },
      "OrderbyOrderbyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrderbyOrderby"
        }
      },
      "OrderbyOrderby": {
        "type": "object"
      },
      "PageResponseOfOrderby2": {
        "title": "PageResponseOfOrderby2",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Orderby2"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Orderby2": {
        "required": [
          "description",
          "group",
          "orderby2"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "ORDERBY2"
          },
          "description": {
            "type": "string",
            "example": "ORDERBY2"
          },
          "orderby2": {
            "$ref": "#/components/schemas/Orderby2Def"
          }
        }
      },
      "Orderby2Def": {
        "required": [
          "orderby2Array"
        ],
        "type": "object",
        "properties": {
          "orderby2Array": {
            "$ref": "#/components/schemas/Orderby2Orderby2Array"
          }
        }
      },
      "Orderby2Orderby2Array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Orderby2Orderby2"
        }
      },
      "Orderby2Orderby2": {
        "type": "object"
      },
      "PageResponseOfOwnData": {
        "title": "PageResponseOfOwnData",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/OwnData"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "OwnData": {
        "required": [
          "description",
          "group",
          "ownData1"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "OWN_DATA"
          },
          "description": {
            "type": "string",
            "example": "Customers Own Data"
          },
          "ownData1": {
            "$ref": "#/components/schemas/OwnData1Def"
          }
        }
      },
      "OwnData1Def": {
        "required": [
          "customerArray"
        ],
        "type": "object",
        "properties": {
          "customerArray": {
            "$ref": "#/components/schemas/OwnData1CustomerArray"
          }
        }
      },
      "OwnData1CustomerArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnData1Customer"
        }
      },
      "OwnData1Customer": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 20,
            "type": "string",
            "example": "Now - You have a sma"
          },
          "name": {
            "maxLength": 32,
            "type": "string",
            "example": "Now - You have a small sample of"
          },
          "street": {
            "maxLength": 70,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "streetNo": {
            "maxLength": 15,
            "type": "string",
            "example": "Now - You have "
          },
          "postArea": {
            "maxLength": 10,
            "type": "string",
            "example": "Now - You "
          },
          "city": {
            "maxLength": 70,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "civilRegCode": {
            "maxLength": 15,
            "type": "string",
            "example": "Now - You have "
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "sexDesc": {
            "maxLength": 4000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "education": {
            "maxLength": 20,
            "type": "string",
            "example": "Now - You have a sma"
          },
          "occupationDesc": {
            "maxLength": 4000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "incomeGrpDesc": {
            "maxLength": 4000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "household": {
            "multipleOf": 1,
            "maximum": 99,
            "type": "number",
            "example": 71
          },
          "maritalStateDesc": {
            "maxLength": 4000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "spouseName": {
            "maxLength": 30,
            "type": "string",
            "example": "Now - You have a small sample "
          },
          "spouseSex": {
            "maxLength": 1,
            "type": "string",
            "example": "N"
          },
          "spouseBirthDate": {
            "type": "string",
            "format": "date-time"
          },
          "children": {
            "multipleOf": 1,
            "maximum": 99,
            "type": "number",
            "example": 71
          },
          "yourRef": {
            "maxLength": 8,
            "type": "string",
            "example": "Now - Yo"
          },
          "contactTypesArray": {
            "$ref": "#/components/schemas/OwnData1ContactTypesArray"
          },
          "carsArray": {
            "$ref": "#/components/schemas/OwnData1CarsArray"
          },
          "housesArray": {
            "$ref": "#/components/schemas/OwnData1HousesArray"
          },
          "documentsArray": {
            "$ref": "#/components/schemas/OwnData1DocumentsArray"
          }
        }
      },
      "OwnData1ContactTypesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnData1ContactTypes"
        }
      },
      "OwnData1ContactTypes": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 10,
            "type": "string",
            "description": "Type of number, e.g. fax, telephone home, e-mail, etc.",
            "example": "Now - You "
          },
          "phoneNo": {
            "maxLength": 60,
            "type": "string",
            "description": "Telephone no, telefax no, e-mail no, etc.",
            "example": "Now - You have a small sample of data"
          }
        }
      },
      "OwnData1CarsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnData1Cars"
        }
      },
      "OwnData1Cars": {
        "type": "object",
        "properties": {
          "regNo": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "regDate": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "bodyNo": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "carDetailArray": {
            "$ref": "#/components/schemas/OwnData1CarDetailArray"
          }
        }
      },
      "OwnData1CarDetailArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnData1CarDetail"
        }
      },
      "OwnData1CarDetail": {
        "required": [
          "make",
          "model"
        ],
        "type": "object",
        "properties": {
          "make": {
            "maxLength": 30,
            "type": "string",
            "example": "Now - You have a small sample "
          },
          "model": {
            "maxLength": 60,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "modelDesc": {
            "maxLength": 60,
            "type": "string",
            "example": "Now - You have a small sample of data"
          }
        }
      },
      "OwnData1HousesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnData1Houses"
        }
      },
      "OwnData1Houses": {
        "type": "object",
        "properties": {
          "yearBuild": {
            "type": "number"
          },
          "area": {
            "type": "number"
          },
          "floor": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "roofType": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "heatingType": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "houseType": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          },
          "matrNr": {
            "maxLength": 2000,
            "type": "string",
            "example": "Now - You have a small sample of data"
          }
        }
      },
      "OwnData1DocumentsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OwnData1Documents"
        }
      },
      "OwnData1Documents": {
        "type": "object"
      },
      "PageResponseOfPaymethod": {
        "title": "PageResponseOfPaymethod",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Paymethod"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Paymethod": {
        "required": [
          "description",
          "group",
          "paymethod"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PAYMETHOD"
          },
          "description": {
            "type": "string",
            "example": "LOV for payment methods"
          },
          "paymethod": {
            "$ref": "#/components/schemas/PaymethodDef"
          }
        }
      },
      "PaymethodDef": {
        "required": [
          "dodPaymethodArray"
        ],
        "type": "object",
        "properties": {
          "dodPaymethodArray": {
            "$ref": "#/components/schemas/PaymethodDodPaymethodArray"
          }
        }
      },
      "PaymethodDodPaymethodArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PaymethodDodPaymethod"
        }
      },
      "PaymethodDodPaymethod": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "object"
          },
          "paymentMethodDesc": {
            "type": "object"
          },
          "paymentDetailsNeeded": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdochist": {
        "title": "PageResponseOfPdochist",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Pdochist"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Pdochist": {
        "required": [
          "description",
          "group",
          "pdochist"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PDOCHIST"
          },
          "description": {
            "type": "string",
            "example": "Retrieve history docs"
          },
          "pdochist": {
            "$ref": "#/components/schemas/PdochistDef"
          }
        }
      },
      "PdochistDef": {
        "required": [
          "dodPdochistArray"
        ],
        "type": "object",
        "properties": {
          "dodPdochistArray": {
            "$ref": "#/components/schemas/PdochistDodPdochistArray"
          }
        }
      },
      "PdochistDodPdochistArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdochistDodPdochist"
        }
      },
      "PdochistDodPdochist": {
        "type": "object",
        "properties": {
          "printRequestId": {
            "type": "object"
          },
          "attachmentSeqNo": {
            "type": "object"
          },
          "transactionType": {
            "type": "object"
          },
          "coverStartDate": {
            "type": "object"
          },
          "userid": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdAcst": {
        "title": "PageResponseOfPdAcst",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PdAcst"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PdAcst": {
        "required": [
          "description",
          "group",
          "pdAcst"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PD_ACST"
          },
          "description": {
            "type": "string",
            "example": "Portal dashboard activity status detail"
          },
          "pdAcst": {
            "$ref": "#/components/schemas/PdAcstDef"
          }
        }
      },
      "PdAcstDef": {
        "required": [
          "dodPdAcstArray"
        ],
        "type": "object",
        "properties": {
          "dodPdAcstArray": {
            "$ref": "#/components/schemas/PdAcstDodPdAcstArray"
          }
        }
      },
      "PdAcstDodPdAcstArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdAcstDodPdAcst"
        }
      },
      "PdAcstDodPdAcst": {
        "type": "object",
        "properties": {
          "numb": {
            "type": "object"
          },
          "activity": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdClcl": {
        "title": "PageResponseOfPdClcl",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PdClcl"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PdClcl": {
        "required": [
          "description",
          "group",
          "pdClcl"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PD_CLCL"
          },
          "description": {
            "type": "string",
            "example": "Portal dashboard closed claim counts"
          },
          "pdClcl": {
            "$ref": "#/components/schemas/PdClclDef"
          }
        }
      },
      "PdClclDef": {
        "required": [
          "dodPdClclArray"
        ],
        "type": "object",
        "properties": {
          "dodPdClclArray": {
            "$ref": "#/components/schemas/PdClclDodPdClclArray"
          }
        }
      },
      "PdClclDodPdClclArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdClclDodPdClcl"
        }
      },
      "PdClclDodPdClcl": {
        "type": "object",
        "properties": {
          "clclaim": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdClst": {
        "title": "PageResponseOfPdClst",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PdClst"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PdClst": {
        "required": [
          "description",
          "group",
          "pdClst"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PD_CLST"
          },
          "description": {
            "type": "string",
            "example": "Portal dashboard Claim status detail"
          },
          "pdClst": {
            "$ref": "#/components/schemas/PdClstDef"
          }
        }
      },
      "PdClstDef": {
        "required": [
          "dodPdClstArray"
        ],
        "type": "object",
        "properties": {
          "dodPdClstArray": {
            "$ref": "#/components/schemas/PdClstDodPdClstArray"
          }
        }
      },
      "PdClstDodPdClstArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdClstDodPdClst"
        }
      },
      "PdClstDodPdClst": {
        "type": "object",
        "properties": {
          "numb": {
            "type": "object"
          },
          "status": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdRcnt": {
        "title": "PageResponseOfPdRcnt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PdRcnt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PdRcnt": {
        "required": [
          "description",
          "group",
          "pdRcnt"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PD_RCNT"
          },
          "description": {
            "type": "string",
            "example": "Portal dashboard referral  count"
          },
          "pdRcnt": {
            "$ref": "#/components/schemas/PdRcntDef"
          }
        }
      },
      "PdRcntDef": {
        "required": [
          "dodPdRcntArray"
        ],
        "type": "object",
        "properties": {
          "dodPdRcntArray": {
            "$ref": "#/components/schemas/PdRcntDodPdRcntArray"
          }
        }
      },
      "PdRcntDodPdRcntArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdRcntDodPdRcnt"
        }
      },
      "PdRcntDodPdRcnt": {
        "type": "object",
        "properties": {
          "referralsCount": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdRoles": {
        "title": "PageResponseOfPdRoles",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PdRoles"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PdRoles": {
        "required": [
          "description",
          "group",
          "pdRoles"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PD_ROLES"
          },
          "description": {
            "type": "string",
            "example": "Get list of roles for logged user"
          },
          "pdRoles": {
            "$ref": "#/components/schemas/PdRolesDef"
          }
        }
      },
      "PdRolesDef": {
        "required": [
          "dodPdRolesArray"
        ],
        "type": "object",
        "properties": {
          "dodPdRolesArray": {
            "$ref": "#/components/schemas/PdRolesDodPdRolesArray"
          }
        }
      },
      "PdRolesDodPdRolesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdRolesDodPdRoles"
        }
      },
      "PdRolesDodPdRoles": {
        "type": "object",
        "properties": {
          "role": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPdView": {
        "title": "PageResponseOfPdView",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PdView"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PdView": {
        "required": [
          "description",
          "group",
          "pdView"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PD_VIEW"
          },
          "description": {
            "type": "string",
            "example": "Portal dashboard overview"
          },
          "pdView": {
            "$ref": "#/components/schemas/PdViewDef"
          }
        }
      },
      "PdViewDef": {
        "required": [
          "dodPdViewArray"
        ],
        "type": "object",
        "properties": {
          "dodPdViewArray": {
            "$ref": "#/components/schemas/PdViewDodPdViewArray"
          }
        }
      },
      "PdViewDodPdViewArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PdViewDodPdView"
        }
      },
      "PdViewDodPdView": {
        "type": "object",
        "properties": {
          "opclaim": {
            "type": "object"
          },
          "activities": {
            "type": "object"
          },
          "referrals": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPgeSearch": {
        "title": "PageResponseOfPgeSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PgeSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PgeSearch": {
        "required": [
          "description",
          "group",
          "pgeSearch"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PGE_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "PGE provider list search"
          },
          "pgeSearch": {
            "$ref": "#/components/schemas/PgeSearchDef"
          }
        }
      },
      "PgeSearchDef": {
        "required": [
          "dodPgeSearchArray"
        ],
        "type": "object",
        "properties": {
          "dodPgeSearchArray": {
            "$ref": "#/components/schemas/PgeSearchDodPgeSearchArray"
          }
        }
      },
      "PgeSearchDodPgeSearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PgeSearchDodPgeSearch"
        }
      },
      "PgeSearchDodPgeSearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "region": {
            "type": "object"
          },
          "category": {
            "type": "object"
          },
          "ssType": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPolholder": {
        "title": "PageResponseOfPolholder",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Polholder"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Polholder": {
        "required": [
          "description",
          "group",
          "polholder"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POLHOLDER"
          },
          "description": {
            "type": "string",
            "example": "Get policy holder for policy"
          },
          "polholder": {
            "$ref": "#/components/schemas/PolholderDef"
          }
        }
      },
      "PolholderDef": {
        "required": [
          "policyArray"
        ],
        "type": "object",
        "properties": {
          "policyArray": {
            "$ref": "#/components/schemas/PolholderPolicyArray"
          }
        }
      },
      "PolholderPolicyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolholderPolicy"
        }
      },
      "PolholderPolicy": {
        "type": "object",
        "properties": {
          "policyHolderId": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPolicy": {
        "title": "PageResponseOfPolicy",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Policy"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Policy": {
        "required": [
          "description",
          "group",
          "policy"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POLICY"
          },
          "description": {
            "type": "string",
            "example": "Policy information"
          },
          "policy": {
            "$ref": "#/components/schemas/PolicyDef"
          }
        }
      },
      "PolicyDef": {
        "required": [
          "policyArray"
        ],
        "type": "object",
        "properties": {
          "policyArray": {
            "$ref": "#/components/schemas/PolicyPolicyArray"
          }
        }
      },
      "PolicyPolicyArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolicyPolicy"
        }
      },
      "PolicyPolicy": {
        "type": "object",
        "properties": {
          "policyNo": {
            "type": "object"
          },
          "coverStartDate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPolClaims": {
        "title": "PageResponseOfPolClaims",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PolClaims"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PolClaims": {
        "required": [
          "description",
          "group",
          "polClaims"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POL_CLAIMS"
          },
          "description": {
            "type": "string",
            "example": "Retrieve claims for given policy"
          },
          "polClaims": {
            "$ref": "#/components/schemas/PolClaimsDef"
          }
        }
      },
      "PolClaimsDef": {
        "required": [
          "dodPolClaimsArray"
        ],
        "type": "object",
        "properties": {
          "dodPolClaimsArray": {
            "$ref": "#/components/schemas/PolClaimsDodPolClaimsArray"
          }
        }
      },
      "PolClaimsDodPolClaimsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolClaimsDodPolClaims"
        }
      },
      "PolClaimsDodPolClaims": {
        "type": "object"
      },
      "PageResponseOfPolClaimt": {
        "title": "PageResponseOfPolClaimt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PolClaimt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PolClaimt": {
        "required": [
          "description",
          "group",
          "polClaimt"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POL_CLAIMT"
          },
          "description": {
            "type": "string",
            "example": "Retrieve claim totals for given policy"
          },
          "polClaimt": {
            "$ref": "#/components/schemas/PolClaimtDef"
          }
        }
      },
      "PolClaimtDef": {
        "required": [
          "dodPolClaimtArray"
        ],
        "type": "object",
        "properties": {
          "dodPolClaimtArray": {
            "$ref": "#/components/schemas/PolClaimtDodPolClaimtArray"
          }
        }
      },
      "PolClaimtDodPolClaimtArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolClaimtDodPolClaimt"
        }
      },
      "PolClaimtDodPolClaimt": {
        "type": "object"
      },
      "PageResponseOfPolFields": {
        "title": "PageResponseOfPolFields",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PolFields"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PolFields": {
        "required": [
          "description",
          "group",
          "polFields"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POL_FIELDS"
          },
          "description": {
            "type": "string",
            "example": "Get specific policy fields for integration"
          },
          "polFields": {
            "$ref": "#/components/schemas/PolFieldsDef"
          }
        }
      },
      "PolFieldsDef": {
        "required": [
          "polAlLovArray"
        ],
        "type": "object",
        "properties": {
          "polAlLovArray": {
            "$ref": "#/components/schemas/PolFieldsPolAlLovArray"
          }
        }
      },
      "PolFieldsPolAlLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolFieldsPolAlLov"
        }
      },
      "PolFieldsPolAlLov": {
        "type": "object",
        "properties": {
          "instlPlanType": {
            "type": "object"
          },
          "paymentMethod": {
            "type": "object"
          },
          "accountNo": {
            "type": "object"
          },
          "currencyCode": {
            "type": "object"
          },
          "pricePaid": {
            "type": "object"
          },
          "tariffPrice": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPolMtas": {
        "title": "PageResponseOfPolMtas",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PolMtas"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PolMtas": {
        "required": [
          "description",
          "group",
          "polMtas"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POL_MTAS"
          },
          "description": {
            "type": "string",
            "example": "Retrieve endorsements for given policy"
          },
          "polMtas": {
            "$ref": "#/components/schemas/PolMtasDef"
          }
        }
      },
      "PolMtasDef": {
        "required": [
          "dodPolMtasArray"
        ],
        "type": "object",
        "properties": {
          "dodPolMtasArray": {
            "$ref": "#/components/schemas/PolMtasDodPolMtasArray"
          }
        }
      },
      "PolMtasDodPolMtasArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolMtasDodPolMtas"
        }
      },
      "PolMtasDodPolMtas": {
        "type": "object"
      },
      "PageResponseOfPolSearch": {
        "title": "PageResponseOfPolSearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PolSearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PolSearch": {
        "required": [
          "description",
          "group",
          "polSearch"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POL_SEARCH"
          },
          "description": {
            "type": "string",
            "example": "Search policy"
          },
          "polSearch": {
            "$ref": "#/components/schemas/PolSearchDef"
          }
        }
      },
      "PolSearchDef": {
        "required": [
          "dodPolSearchArray"
        ],
        "type": "object",
        "properties": {
          "dodPolSearchArray": {
            "$ref": "#/components/schemas/PolSearchDodPolSearchArray"
          }
        }
      },
      "PolSearchDodPolSearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PolSearchDodPolSearch"
        }
      },
      "PolSearchDodPolSearch": {
        "type": "object",
        "properties": {
          "policyNo": {
            "type": "object"
          },
          "prodId": {
            "type": "object"
          },
          "productLineId": {
            "type": "object"
          },
          "vigencia": {
            "type": "object"
          },
          "contName": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "history": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          },
          "printRequestId": {
            "type": "object"
          },
          "contRut": {
            "type": "object"
          },
          "insName": {
            "type": "object"
          },
          "insRut": {
            "type": "object"
          },
          "seqno": {
            "type": "object"
          },
          "agrlineseqno": {
            "type": "object"
          },
          "telephone": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "objectNo": {
            "type": "object"
          },
          "agrLineNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfPostArea": {
        "title": "PageResponseOfPostArea",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PostArea"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PostArea": {
        "required": [
          "description",
          "group",
          "postArea"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "POST_AREA"
          },
          "description": {
            "type": "string",
            "example": "LOV for post areas"
          },
          "postArea": {
            "$ref": "#/components/schemas/PostAreaDef"
          }
        }
      },
      "PostAreaDef": {
        "required": [
          "dodPostAreaArray"
        ],
        "type": "object",
        "properties": {
          "dodPostAreaArray": {
            "$ref": "#/components/schemas/PostAreaDodPostAreaArray"
          }
        }
      },
      "PostAreaDodPostAreaArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PostAreaDodPostArea"
        }
      },
      "PostAreaDodPostArea": {
        "type": "object",
        "properties": {
          "postArea": {
            "type": "object"
          },
          "comuna": {
            "type": "object"
          },
          "region": {
            "type": "object"
          },
          "province": {
            "type": "object"
          }
        }
      },
      "PageResponseOfProdevecau": {
        "title": "PageResponseOfProdevecau",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Prodevecau"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Prodevecau": {
        "required": [
          "description",
          "group",
          "prodevecau"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PRODEVECAU"
          },
          "description": {
            "type": "string",
            "example": "Product cover codes for event and cause"
          },
          "prodevecau": {
            "$ref": "#/components/schemas/ProdevecauDef"
          }
        }
      },
      "ProdevecauDef": {
        "required": [
          "productEventCauseConfArray"
        ],
        "type": "object",
        "properties": {
          "productEventCauseConfArray": {
            "$ref": "#/components/schemas/ProdevecauProductEventCauseConfArray"
          }
        }
      },
      "ProdevecauProductEventCauseConfArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProdevecauProductEventCauseConf"
        }
      },
      "ProdevecauProductEventCauseConf": {
        "type": "object",
        "properties": {
          "productLineId": {
            "type": "object"
          },
          "productLineDesc": {
            "type": "object"
          },
          "riskNo": {
            "type": "object"
          },
          "riskDesc": {
            "type": "object"
          },
          "eventType": {
            "type": "object"
          },
          "eventDesc": {
            "type": "object"
          },
          "causeType": {
            "type": "object"
          },
          "causeDesc": {
            "type": "object"
          },
          "subcauseType": {
            "type": "object"
          },
          "subcauseDesc": {
            "type": "object"
          }
        }
      },
      "PageResponseOfProfComp": {
        "title": "PageResponseOfProfComp",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ProfComp"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ProfComp": {
        "required": [
          "description",
          "group",
          "profComp"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "PROF_COMP"
          },
          "description": {
            "type": "string",
            "example": "Get list of Portal profiles for user"
          },
          "profComp": {
            "$ref": "#/components/schemas/ProfCompDef"
          }
        }
      },
      "ProfCompDef": {
        "required": [
          "dodProfileArray"
        ],
        "type": "object",
        "properties": {
          "dodProfileArray": {
            "$ref": "#/components/schemas/ProfCompDodProfileArray"
          }
        }
      },
      "ProfCompDodProfileArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProfCompDodProfile"
        }
      },
      "ProfCompDodProfile": {
        "type": "object",
        "properties": {
          "profId": {
            "type": "object"
          },
          "dodComponentsArray": {
            "$ref": "#/components/schemas/ProfCompDodComponentsArray"
          }
        }
      },
      "ProfCompDodComponentsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProfCompDodComponents"
        }
      },
      "ProfCompDodComponents": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "dodPremissionTypeArray": {
            "$ref": "#/components/schemas/ProfCompDodPremissionTypeArray"
          }
        }
      },
      "ProfCompDodPremissionTypeArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProfCompDodPremissionType"
        }
      },
      "ProfCompDodPremissionType": {
        "type": "object",
        "properties": {
          "permission": {
            "type": "object"
          }
        }
      },
      "PageResponseOfRegion": {
        "title": "PageResponseOfRegion",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Region"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Region": {
        "required": [
          "description",
          "group",
          "region"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "REGION"
          },
          "description": {
            "type": "string",
            "example": "Get list of Regions"
          },
          "region": {
            "$ref": "#/components/schemas/RegionDef"
          }
        }
      },
      "RegionDef": {
        "required": [
          "dodRegionArray"
        ],
        "type": "object",
        "properties": {
          "dodRegionArray": {
            "$ref": "#/components/schemas/RegionDodRegionArray"
          }
        }
      },
      "RegionDodRegionArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RegionDodRegion"
        }
      },
      "RegionDodRegion": {
        "type": "object",
        "properties": {
          "regionCd": {
            "type": "object"
          },
          "region": {
            "type": "object"
          }
        }
      },
      "PageResponseOfRelatLov": {
        "title": "PageResponseOfRelatLov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/RelatLov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "RelatLov": {
        "required": [
          "description",
          "group",
          "relatLov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "RELAT_LOV"
          },
          "description": {
            "type": "string",
            "example": "Get Relation details for third party and service_supplier"
          },
          "relatLov": {
            "$ref": "#/components/schemas/RelatLovDef"
          }
        }
      },
      "RelatLovDef": {
        "required": [
          "dodRelatLovArray"
        ],
        "type": "object",
        "properties": {
          "dodRelatLovArray": {
            "$ref": "#/components/schemas/RelatLovDodRelatLovArray"
          }
        }
      },
      "RelatLovDodRelatLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RelatLovDodRelatLov"
        }
      },
      "RelatLovDodRelatLov": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object"
          },
          "description": {
            "type": "object"
          },
          "role": {
            "type": "object"
          }
        }
      },
      "PageResponseOfResAmt": {
        "title": "PageResponseOfResAmt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ResAmt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ResAmt": {
        "required": [
          "description",
          "group",
          "resAmt"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "RES_AMT"
          },
          "description": {
            "type": "string",
            "example": "Get reservas default amounts"
          },
          "resAmt": {
            "$ref": "#/components/schemas/ResAmtDef"
          }
        }
      },
      "ResAmtDef": {
        "required": [
          "dodResAmtArray"
        ],
        "type": "object",
        "properties": {
          "dodResAmtArray": {
            "$ref": "#/components/schemas/ResAmtDodResAmtArray"
          }
        }
      },
      "ResAmtDodResAmtArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResAmtDodResAmt"
        }
      },
      "ResAmtDodResAmt": {
        "type": "object",
        "properties": {
          "riskNo": {
            "type": "object"
          },
          "currencyEstimate": {
            "type": "object"
          },
          "itemType": {
            "type": "object"
          }
        }
      },
      "PageResponseOfRiskDesc": {
        "title": "PageResponseOfRiskDesc",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/RiskDesc"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "RiskDesc": {
        "required": [
          "description",
          "group",
          "riskDesc1"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "RISK_DESC"
          },
          "description": {
            "type": "string",
            "example": "Product Risk Description"
          },
          "riskDesc1": {
            "$ref": "#/components/schemas/RiskDesc1Def"
          }
        }
      },
      "RiskDesc1Def": {
        "required": [
          "riskDescriptionArray"
        ],
        "type": "object",
        "properties": {
          "riskDescriptionArray": {
            "$ref": "#/components/schemas/RiskDesc1RiskDescriptionArray"
          }
        }
      },
      "RiskDesc1RiskDescriptionArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RiskDesc1RiskDescription"
        }
      },
      "RiskDesc1RiskDescription": {
        "type": "object",
        "properties": {
          "riskNo": {
            "type": "object"
          },
          "riskNoDisp": {
            "type": "object"
          },
          "riskDescription": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSapAdr": {
        "title": "PageResponseOfSapAdr",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SapAdr"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SapAdr": {
        "required": [
          "description",
          "group",
          "sapAdr"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SAP_ADR"
          },
          "description": {
            "type": "string",
            "example": "Get address for given name id"
          },
          "sapAdr": {
            "$ref": "#/components/schemas/SapAdrDef"
          }
        }
      },
      "SapAdrDef": {
        "required": [
          "addressLovArray"
        ],
        "type": "object",
        "properties": {
          "addressLovArray": {
            "$ref": "#/components/schemas/SapAdrAddressLovArray"
          }
        }
      },
      "SapAdrAddressLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SapAdrAddressLov"
        }
      },
      "SapAdrAddressLov": {
        "type": "object",
        "properties": {
          "city": {
            "type": "object"
          },
          "postlCod1": {
            "type": "object"
          },
          "street": {
            "type": "object"
          },
          "country": {
            "type": "object"
          },
          "region": {
            "type": "object"
          },
          "district": {
            "type": "object"
          },
          "houseNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSapBank": {
        "title": "PageResponseOfSapBank",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SapBank"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SapBank": {
        "required": [
          "description",
          "group",
          "sapBank"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SAP_BANK"
          },
          "description": {
            "type": "string",
            "example": "Get bank details for given name id"
          },
          "sapBank": {
            "$ref": "#/components/schemas/SapBankDef"
          }
        }
      },
      "SapBankDef": {
        "required": [
          "bankLovArray"
        ],
        "type": "object",
        "properties": {
          "bankLovArray": {
            "$ref": "#/components/schemas/SapBankBankLovArray"
          }
        }
      },
      "SapBankBankLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SapBankBankLov"
        }
      },
      "SapBankBankLov": {
        "type": "object",
        "properties": {
          "searchTerm1": {
            "type": "object"
          },
          "bkvid": {
            "type": "object"
          },
          "bankCntry": {
            "type": "object"
          },
          "bankKey": {
            "type": "object"
          },
          "bankAcct": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSapPer": {
        "title": "PageResponseOfSapPer",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SapPer"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SapPer": {
        "required": [
          "description",
          "group",
          "sapPer"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SAP_PER"
          },
          "description": {
            "type": "string",
            "example": "Get client details for given name id"
          },
          "sapPer": {
            "$ref": "#/components/schemas/SapPerDef"
          }
        }
      },
      "SapPerDef": {
        "required": [
          "personLovArray"
        ],
        "type": "object",
        "properties": {
          "personLovArray": {
            "$ref": "#/components/schemas/SapPerPersonLovArray"
          }
        }
      },
      "SapPerPersonLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SapPerPersonLov"
        }
      },
      "SapPerPersonLov": {
        "type": "object",
        "properties": {
          "category": {
            "type": "object"
          },
          "grouping": {
            "type": "object"
          },
          "searchTerm1": {
            "type": "object"
          },
          "searchTerm2": {
            "type": "object"
          },
          "partnerType": {
            "type": "object"
          },
          "partnerLanguage": {
            "type": "object"
          },
          "partnerLanguageIso": {
            "type": "object"
          },
          "firstName": {
            "type": "object"
          },
          "lastName": {
            "type": "object"
          },
          "telephone": {
            "type": "object"
          },
          "eMail": {
            "type": "object"
          },
          "ktokk": {
            "type": "object"
          },
          "konzs": {
            "type": "object"
          },
          "bukrs": {
            "type": "object"
          },
          "akont": {
            "type": "object"
          },
          "akont1": {
            "type": "object"
          },
          "ktokd": {
            "type": "object"
          },
          "stcd11": {
            "type": "object"
          },
          "stkzu1": {
            "type": "object"
          },
          "bukrs1": {
            "type": "object"
          },
          "sapFechaExport": {
            "type": "object"
          }
        }
      },
      "PageResponseOfScoCuota": {
        "title": "PageResponseOfScoCuota",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ScoCuota"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ScoCuota": {
        "required": [
          "description",
          "group",
          "scoCuota"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SCO_CUOTA"
          },
          "description": {
            "type": "string",
            "example": "Get instalments for policy_no"
          },
          "scoCuota": {
            "$ref": "#/components/schemas/ScoCuotaDef"
          }
        }
      },
      "ScoCuotaDef": {
        "required": [
          "scoInstalmentsArray"
        ],
        "type": "object",
        "properties": {
          "scoInstalmentsArray": {
            "$ref": "#/components/schemas/ScoCuotaScoInstalmentsArray"
          }
        }
      },
      "ScoCuotaScoInstalmentsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScoCuotaScoInstalments"
        }
      },
      "ScoCuotaScoInstalments": {
        "type": "object",
        "properties": {
          "cppPoliza": {
            "type": "object"
          },
          "cppCertificado": {
            "type": "object"
          },
          "cppRenovacion": {
            "type": "object"
          },
          "cppEndoso": {
            "type": "object"
          },
          "cppRutCorredor": {
            "type": "object"
          },
          "cppCuota": {
            "type": "object"
          },
          "cppMonedaOrigen": {
            "type": "object"
          },
          "cppValorCuota": {
            "type": "object"
          },
          "cppFechaVencimiento": {
            "type": "object"
          },
          "cppValorCambio": {
            "type": "object"
          },
          "cppFechaRegistro": {
            "type": "object"
          },
          "cppSociedad": {
            "type": "object"
          },
          "cppDocuPago": {
            "type": "object"
          },
          "cppEjePago": {
            "type": "object"
          },
          "cppFechaCargaSap": {
            "type": "object"
          },
          "cppBlart": {
            "type": "object"
          },
          "cppFormaPago": {
            "type": "object"
          }
        }
      },
      "PageResponseOfScoCuota2": {
        "title": "PageResponseOfScoCuota2",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ScoCuota2"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ScoCuota2": {
        "required": [
          "description",
          "group",
          "scoCuota2"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SCO_CUOTA2"
          },
          "description": {
            "type": "string",
            "example": "Get instalments for policy_no and trans_id"
          },
          "scoCuota2": {
            "$ref": "#/components/schemas/ScoCuota2Def"
          }
        }
      },
      "ScoCuota2Def": {
        "required": [
          "scoInstalmentsArray"
        ],
        "type": "object",
        "properties": {
          "scoInstalmentsArray": {
            "$ref": "#/components/schemas/ScoCuota2ScoInstalmentsArray"
          }
        }
      },
      "ScoCuota2ScoInstalmentsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScoCuota2ScoInstalments"
        }
      },
      "ScoCuota2ScoInstalments": {
        "type": "object",
        "properties": {
          "cppPoliza": {
            "type": "object"
          },
          "cppCertificado": {
            "type": "object"
          },
          "cppRenovacion": {
            "type": "object"
          },
          "cppEndoso": {
            "type": "object"
          },
          "cppRutCorredor": {
            "type": "object"
          },
          "cppCuota": {
            "type": "object"
          },
          "cppMonedaOrigen": {
            "type": "object"
          },
          "cppValorCuota": {
            "type": "object"
          },
          "cppFechaVencimiento": {
            "type": "object"
          },
          "cppValorCambio": {
            "type": "object"
          },
          "cppFechaRegistro": {
            "type": "object"
          },
          "cppSociedad": {
            "type": "object"
          },
          "cppDocuPago": {
            "type": "object"
          },
          "cppEjePago": {
            "type": "object"
          },
          "cppFechaCargaSap": {
            "type": "object"
          },
          "cppBlart": {
            "type": "object"
          },
          "cppFormaPago": {
            "type": "object"
          }
        }
      },
      "PageResponseOfScoPay": {
        "title": "PageResponseOfScoPay",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ScoPay"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ScoPay": {
        "required": [
          "description",
          "group",
          "scoPay"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SCO_PAY"
          },
          "description": {
            "type": "string",
            "example": "Get payments for policy_no"
          },
          "scoPay": {
            "$ref": "#/components/schemas/ScoPayDef"
          }
        }
      },
      "ScoPayDef": {
        "required": [
          "scoPaymentsArray"
        ],
        "type": "object",
        "properties": {
          "scoPaymentsArray": {
            "$ref": "#/components/schemas/ScoPayScoPaymentsArray"
          }
        }
      },
      "ScoPayScoPaymentsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScoPayScoPayments"
        }
      },
      "ScoPayScoPayments": {
        "type": "object",
        "properties": {
          "cpgRutCorredor": {
            "type": "object"
          },
          "cpgPoliza": {
            "type": "object"
          },
          "cpgCertificado": {
            "type": "object"
          },
          "cpgRenovacion": {
            "type": "object"
          },
          "cpgEndoso": {
            "type": "object"
          },
          "cpgNroCuota": {
            "type": "object"
          },
          "cpgMonedaOrigen": {
            "type": "object"
          },
          "cpgValorCuota": {
            "type": "object"
          },
          "cpgFechaVencimiento": {
            "type": "object"
          },
          "cpgValorPagado": {
            "type": "object"
          },
          "cpgFechaPago": {
            "type": "object"
          },
          "cpgFormaPagoCuota": {
            "type": "object"
          },
          "cpgEstado": {
            "type": "object"
          },
          "cpgSociedad": {
            "type": "object"
          },
          "cpgDocuPago": {
            "type": "object"
          },
          "cpgEjePago": {
            "type": "object"
          },
          "cpgFechaCargaSap": {
            "type": "object"
          },
          "cpgBlart": {
            "type": "object"
          },
          "cpgDocuCompensado": {
            "type": "object"
          },
          "cpgEjeCompensado": {
            "type": "object"
          },
          "cpgUsuarioIngresoSap": {
            "type": "object"
          }
        }
      },
      "PageResponseOfScoPol": {
        "title": "PageResponseOfScoPol",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ScoPol"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ScoPol": {
        "required": [
          "description",
          "group",
          "scoPol"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SCO_POL"
          },
          "description": {
            "type": "string",
            "example": "Get latest policy data"
          },
          "scoPol": {
            "$ref": "#/components/schemas/ScoPolDef"
          }
        }
      },
      "ScoPolDef": {
        "required": [
          "scoPoliciesArray"
        ],
        "type": "object",
        "properties": {
          "scoPoliciesArray": {
            "$ref": "#/components/schemas/ScoPolScoPoliciesArray"
          }
        }
      },
      "ScoPolScoPoliciesArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScoPolScoPolicies"
        }
      },
      "ScoPolScoPolicies": {
        "type": "object",
        "properties": {
          "polId": {
            "type": "object"
          },
          "polNroPoliza": {
            "type": "object"
          },
          "polNroCertificado": {
            "type": "object"
          },
          "polNroRenovacion": {
            "type": "object"
          },
          "polNroEndoso": {
            "type": "object"
          },
          "polCodS3Corredor": {
            "type": "object"
          },
          "polNombreCorredor": {
            "type": "object"
          },
          "polFechaEmision": {
            "type": "object"
          },
          "polFechaIniVigencia": {
            "type": "object"
          },
          "polFechaFinVigencia": {
            "type": "object"
          },
          "polEstadoPoliza": {
            "type": "object"
          },
          "polRutAsegurado": {
            "type": "object"
          },
          "polNombreAsegurado": {
            "type": "object"
          },
          "polFormaDePago": {
            "type": "object"
          },
          "polCodigoRamo": {
            "type": "object"
          },
          "polDescRamo": {
            "type": "object"
          },
          "polFechaHoraIniProc": {
            "type": "object"
          },
          "polTimeStamp": {
            "type": "object"
          },
          "polTotalCuotas": {
            "type": "object"
          },
          "polRutContratante": {
            "type": "object"
          },
          "polNombreContratante": {
            "type": "object"
          },
          "polCoaseguro": {
            "type": "object"
          },
          "polCodMoneda": {
            "type": "object"
          },
          "polDescMoneda": {
            "type": "object"
          },
          "polComisionCrr": {
            "type": "object"
          },
          "polNroPropuesta": {
            "type": "object"
          },
          "polTipoEndoso": {
            "type": "object"
          },
          "polCodProducto": {
            "type": "object"
          },
          "polDescProducto": {
            "type": "object"
          },
          "polPrimaNeta": {
            "type": "object"
          }
        }
      },
      "PageResponseOfScoPresin": {
        "title": "PageResponseOfScoPresin",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ScoPresin"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ScoPresin": {
        "required": [
          "description",
          "group",
          "scoPresin"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SCO_PRESIN"
          },
          "description": {
            "type": "string",
            "example": "Get claims for cla_case_no"
          },
          "scoPresin": {
            "$ref": "#/components/schemas/ScoPresinDef"
          }
        }
      },
      "ScoPresinDef": {
        "required": [
          "sbv92DodScoPresinArray"
        ],
        "type": "object",
        "properties": {
          "sbv92DodScoPresinArray": {
            "$ref": "#/components/schemas/ScoPresinSbv92DodScoPresinArray"
          }
        }
      },
      "ScoPresinSbv92DodScoPresinArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScoPresinSbv92DodScoPresin"
        }
      },
      "ScoPresinSbv92DodScoPresin": {
        "type": "object",
        "properties": {
          "psiNroPreSiniestro": {
            "type": "object"
          },
          "psiSiniestro": {
            "type": "object"
          },
          "crrId": {
            "type": "object"
          },
          "crrCods3": {
            "type": "object"
          },
          "crrNombreCorredor": {
            "type": "object"
          },
          "psiPoliza": {
            "type": "object"
          },
          "psiCertificado": {
            "type": "object"
          },
          "psiRenovacion": {
            "type": "object"
          },
          "psiEndoso": {
            "type": "object"
          },
          "psiIdLinNegocio": {
            "type": "object"
          },
          "parEstado": {
            "type": "object"
          },
          "psiFechaEstado": {
            "type": "object"
          },
          "psiRutAsegurado": {
            "type": "object"
          },
          "psiNombreAsegurado": {
            "type": "object"
          },
          "psiRamo": {
            "type": "object"
          },
          "psiDescripcionramo": {
            "type": "object"
          },
          "psiMismoCorredor": {
            "type": "object"
          },
          "psiNombreContacto": {
            "type": "object"
          },
          "psiEmailContacto": {
            "type": "object"
          },
          "psiTelefonoContacto": {
            "type": "object"
          },
          "psiFechaSiniestro": {
            "type": "object"
          },
          "psiHoraSiniestro": {
            "type": "object"
          },
          "psiTipoSiniestro": {
            "type": "object"
          },
          "psiLugarSiniestro": {
            "type": "object"
          },
          "psiLocacion": {
            "type": "object"
          },
          "psiSecuencia": {
            "type": "object"
          },
          "psiDescripcion": {
            "type": "object"
          },
          "psiFechaDenuncio": {
            "type": "object"
          },
          "psiIngresaCliente": {
            "type": "object"
          },
          "usrId": {
            "type": "object"
          },
          "usrNombre": {
            "type": "object"
          },
          "psiTimestamp": {
            "type": "object"
          },
          "psiLiqId": {
            "type": "object"
          },
          "psiLiqNombre": {
            "type": "object"
          }
        }
      },
      "PageResponseOfScoRisks": {
        "title": "PageResponseOfScoRisks",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ScoRisks"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ScoRisks": {
        "required": [
          "description",
          "group",
          "scoRisks"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SCO_RISKS"
          },
          "description": {
            "type": "string",
            "example": "Get risk breakdown for given policyId"
          },
          "scoRisks": {
            "$ref": "#/components/schemas/ScoRisksDef"
          }
        }
      },
      "ScoRisksDef": {
        "required": [
          "scoRisksArray"
        ],
        "type": "object",
        "properties": {
          "scoRisksArray": {
            "$ref": "#/components/schemas/ScoRisksScoRisksArray"
          }
        }
      },
      "ScoRisksScoRisksArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ScoRisksScoRisks"
        }
      },
      "ScoRisksScoRisks": {
        "type": "object",
        "properties": {
          "coberturaCodigo": {
            "type": "object"
          },
          "coberturaNombre": {
            "type": "object"
          },
          "primaNeta": {
            "type": "object"
          },
          "primaIva": {
            "type": "object"
          },
          "primaTotal": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSlInstl": {
        "title": "PageResponseOfSlInstl",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SlInstl"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SlInstl": {
        "required": [
          "description",
          "group",
          "slInstl"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SL_INSTL"
          },
          "description": {
            "type": "string",
            "example": "Returns installments for given policy"
          },
          "slInstl": {
            "$ref": "#/components/schemas/SlInstlDef"
          }
        }
      },
      "SlInstlDef": {
        "required": [
          "instalmentsArray"
        ],
        "type": "object",
        "properties": {
          "instalmentsArray": {
            "$ref": "#/components/schemas/SlInstlInstalmentsArray"
          }
        }
      },
      "SlInstlInstalmentsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SlInstlInstalments"
        }
      },
      "SlInstlInstalments": {
        "type": "object",
        "properties": {
          "instalmentPlanNo": {
            "type": "object"
          },
          "instalmentPlanId": {
            "type": "object"
          },
          "id": {
            "type": "object"
          },
          "paymentStatus": {
            "type": "object"
          },
          "instlNo": {
            "type": "object"
          },
          "currencyCode": {
            "type": "object"
          },
          "instlAmt": {
            "type": "object"
          },
          "dueDate": {
            "type": "object"
          },
          "startDate": {
            "type": "object"
          },
          "endDate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSlLoc": {
        "title": "PageResponseOfSlLoc",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SlLoc"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SlLoc": {
        "required": [
          "description",
          "group",
          "slLoc"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SL_LOC"
          },
          "description": {
            "type": "string",
            "example": "Get linked addresses for given name id"
          },
          "slLoc": {
            "$ref": "#/components/schemas/SlLocDef"
          }
        }
      },
      "SlLocDef": {
        "required": [
          "addressLovArray"
        ],
        "type": "object",
        "properties": {
          "addressLovArray": {
            "$ref": "#/components/schemas/SlLocAddressLovArray"
          }
        }
      },
      "SlLocAddressLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SlLocAddressLov"
        }
      },
      "SlLocAddressLov": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "string"
          },
          "nameType": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "streetNo": {
            "type": "string"
          },
          "postArea": {
            "type": "string"
          },
          "postalRegion": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "PageResponseOfSlPolAl2": {
        "title": "PageResponseOfSlPolAl2",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SlPolAl2"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SlPolAl2": {
        "required": [
          "description",
          "group",
          "slPolAl2"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SL_POL_AL2"
          },
          "description": {
            "type": "string",
            "example": "Get policy no for given policy_no_alt, year and mta"
          },
          "slPolAl2": {
            "$ref": "#/components/schemas/SlPolAl2Def"
          }
        }
      },
      "SlPolAl2Def": {
        "required": [
          "policyAltLovArray"
        ],
        "type": "object",
        "properties": {
          "policyAltLovArray": {
            "$ref": "#/components/schemas/SlPolAl2PolicyAltLovArray"
          }
        }
      },
      "SlPolAl2PolicyAltLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SlPolAl2PolicyAltLov"
        }
      },
      "SlPolAl2PolicyAltLov": {
        "type": "object",
        "properties": {
          "policyNo": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          },
          "policyIdNo": {
            "type": "object"
          },
          "transId": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSlPolAlt": {
        "title": "PageResponseOfSlPolAlt",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SlPolAlt"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SlPolAlt": {
        "required": [
          "description",
          "group",
          "slPolAlt"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SL_POL_ALT"
          },
          "description": {
            "type": "string",
            "example": "Get policy no for given policy_no_alt"
          },
          "slPolAlt": {
            "$ref": "#/components/schemas/SlPolAltDef"
          }
        }
      },
      "SlPolAltDef": {
        "required": [
          "policyAltLovArray"
        ],
        "type": "object",
        "properties": {
          "policyAltLovArray": {
            "$ref": "#/components/schemas/SlPolAltPolicyAltLovArray"
          }
        }
      },
      "SlPolAltPolicyAltLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SlPolAltPolicyAltLov"
        }
      },
      "SlPolAltPolicyAltLov": {
        "type": "object",
        "properties": {
          "policyNo": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSlPolDat": {
        "title": "PageResponseOfSlPolDat",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SlPolDat"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SlPolDat": {
        "required": [
          "description",
          "group",
          "slPolDat"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SL_POL_DAT"
          },
          "description": {
            "type": "string",
            "example": "Get next cover_start_date for given policy_no"
          },
          "slPolDat": {
            "$ref": "#/components/schemas/SlPolDatDef"
          }
        }
      },
      "SlPolDatDef": {
        "required": [
          "policyDateLovArray"
        ],
        "type": "object",
        "properties": {
          "policyDateLovArray": {
            "$ref": "#/components/schemas/SlPolDatPolicyDateLovArray"
          }
        }
      },
      "SlPolDatPolicyDateLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SlPolDatPolicyDateLov"
        }
      },
      "SlPolDatPolicyDateLov": {
        "type": "object",
        "properties": {
          "coverStartDate": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSlRutPol": {
        "title": "PageResponseOfSlRutPol",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SlRutPol"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SlRutPol": {
        "required": [
          "description",
          "group",
          "slRutPol"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SL_RUT_POL"
          },
          "description": {
            "type": "string",
            "example": "Get policies for given RUT"
          },
          "slRutPol": {
            "$ref": "#/components/schemas/SlRutPolDef"
          }
        }
      },
      "SlRutPolDef": {
        "required": [
          "policyLovArray"
        ],
        "type": "object",
        "properties": {
          "policyLovArray": {
            "$ref": "#/components/schemas/SlRutPolPolicyLovArray"
          }
        }
      },
      "SlRutPolPolicyLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SlRutPolPolicyLov"
        }
      },
      "SlRutPolPolicyLov": {
        "type": "object",
        "properties": {
          "custNo": {
            "type": "object"
          },
          "policyNo": {
            "type": "object"
          },
          "id": {
            "type": "object"
          },
          "paidAccountItems": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSponlov": {
        "title": "PageResponseOfSponlov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Sponlov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Sponlov": {
        "required": [
          "description",
          "group",
          "sponlov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SPONLOV"
          },
          "description": {
            "type": "string",
            "example": "Sponsor/broker list of values"
          },
          "sponlov": {
            "$ref": "#/components/schemas/SponlovDef"
          }
        }
      },
      "SponlovDef": {
        "required": [
          "dodSponlovArray"
        ],
        "type": "object",
        "properties": {
          "dodSponlovArray": {
            "$ref": "#/components/schemas/SponlovDodSponlovArray"
          }
        }
      },
      "SponlovDodSponlovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SponlovDodSponlov"
        }
      },
      "SponlovDodSponlov": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "object"
          },
          "sponsorName": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSsLov": {
        "title": "PageResponseOfSsLov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/SsLov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "SsLov": {
        "required": [
          "description",
          "group",
          "ssLov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SS_LOV"
          },
          "description": {
            "type": "string",
            "example": "LOV of service suppliers"
          },
          "ssLov": {
            "$ref": "#/components/schemas/SsLovDef"
          }
        }
      },
      "SsLovDef": {
        "required": [
          "dodSsLovArray"
        ],
        "type": "object",
        "properties": {
          "dodSsLovArray": {
            "$ref": "#/components/schemas/SsLovDodSsLovArray"
          }
        }
      },
      "SsLovDodSsLovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SsLovDodSsLov"
        }
      },
      "SsLovDodSsLov": {
        "type": "object",
        "properties": {
          "nameIdNo": {
            "type": "object"
          },
          "description": {
            "type": "object"
          }
        }
      },
      "PageResponseOfSubstlov": {
        "title": "PageResponseOfSubstlov",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Substlov"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Substlov": {
        "required": [
          "description",
          "group",
          "substlov"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "SUBSTLOV"
          },
          "description": {
            "type": "string",
            "example": "Get claims substatus for status"
          },
          "substlov": {
            "$ref": "#/components/schemas/SubstlovDef"
          }
        }
      },
      "SubstlovDef": {
        "required": [
          "dodSubstlovArray"
        ],
        "type": "object",
        "properties": {
          "dodSubstlovArray": {
            "$ref": "#/components/schemas/SubstlovDodSubstlovArray"
          }
        }
      },
      "SubstlovDodSubstlovArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubstlovDodSubstlov"
        }
      },
      "SubstlovDodSubstlov": {
        "type": "object"
      },
      "PageResponseOfTariff": {
        "title": "PageResponseOfTariff",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Tariff"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Tariff": {
        "required": [
          "description",
          "group",
          "tariff"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "TARIFF"
          },
          "description": {
            "type": "string",
            "example": "Get tariff lookup"
          },
          "tariff": {
            "$ref": "#/components/schemas/TariffDef"
          }
        }
      },
      "TariffDef": {
        "required": [
          "dodTariffArray"
        ],
        "type": "object",
        "properties": {
          "dodTariffArray": {
            "$ref": "#/components/schemas/TariffDodTariffArray"
          }
        }
      },
      "TariffDodTariffArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TariffDodTariff"
        }
      },
      "TariffDodTariff": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object"
          }
        }
      },
      "PageResponseOfTariffcube": {
        "title": "PageResponseOfTariffcube",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Tariffcube"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Tariffcube": {
        "required": [
          "description",
          "group",
          "tariffcube"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "TARIFFCUBE"
          },
          "description": {
            "type": "string",
            "example": "Get tariff lookup"
          },
          "tariffcube": {
            "$ref": "#/components/schemas/TariffcubeDef"
          }
        }
      },
      "TariffcubeDef": {
        "required": [
          "dodTariffCubeArray"
        ],
        "type": "object",
        "properties": {
          "dodTariffCubeArray": {
            "$ref": "#/components/schemas/TariffcubeDodTariffCubeArray"
          }
        }
      },
      "TariffcubeDodTariffCubeArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TariffcubeDodTariffCube"
        }
      },
      "TariffcubeDodTariffCube": {
        "type": "object",
        "properties": {
          "dim01": {
            "type": "object"
          },
          "dim02": {
            "type": "object"
          },
          "dim03": {
            "type": "object"
          },
          "dim04": {
            "type": "object"
          },
          "dim05": {
            "type": "object"
          },
          "dim06": {
            "type": "object"
          },
          "dim07": {
            "type": "object"
          },
          "dim08": {
            "type": "object"
          },
          "dim09": {
            "type": "object"
          },
          "dim10": {
            "type": "object"
          }
        }
      },
      "PageResponseOfTotclaim": {
        "title": "PageResponseOfTotclaim",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Totclaim"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Totclaim": {
        "required": [
          "description",
          "group",
          "totclaim"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "TOTCLAIM"
          },
          "description": {
            "type": "string",
            "example": "Calc total liability amounts"
          },
          "totclaim": {
            "$ref": "#/components/schemas/TotclaimDef"
          }
        }
      },
      "TotclaimDef": {
        "required": [
          "dodTotclaimArray"
        ],
        "type": "object",
        "properties": {
          "dodTotclaimArray": {
            "$ref": "#/components/schemas/TotclaimDodTotclaimArray"
          }
        }
      },
      "TotclaimDodTotclaimArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TotclaimDodTotclaim"
        }
      },
      "TotclaimDodTotclaim": {
        "type": "object",
        "properties": {
          "riskNo": {
            "type": "object"
          },
          "noClaims": {
            "type": "object"
          },
          "indemnizacion": {
            "type": "object"
          },
          "gastos": {
            "type": "object"
          },
          "total": {
            "type": "object"
          },
          "currencyCode": {
            "type": "object"
          },
          "cover": {
            "type": "object"
          }
        }
      },
      "PageResponseOfUsersearch": {
        "title": "PageResponseOfUsersearch",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Usersearch"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Usersearch": {
        "required": [
          "description",
          "group",
          "usersearch"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "USERSEARCH"
          },
          "description": {
            "type": "string",
            "example": "Get users"
          },
          "usersearch": {
            "$ref": "#/components/schemas/UsersearchDef"
          }
        }
      },
      "UsersearchDef": {
        "required": [
          "dodUsersearchArray"
        ],
        "type": "object",
        "properties": {
          "dodUsersearchArray": {
            "$ref": "#/components/schemas/UsersearchDodUsersearchArray"
          }
        }
      },
      "UsersearchDodUsersearchArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UsersearchDodUsersearch"
        }
      },
      "UsersearchDodUsersearch": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "object"
          },
          "idNo": {
            "type": "object"
          },
          "email": {
            "type": "object"
          },
          "rut": {
            "type": "object"
          },
          "name": {
            "type": "object"
          },
          "userType": {
            "type": "object"
          },
          "profileId": {
            "type": "object"
          },
          "profile": {
            "type": "object"
          }
        }
      },
      "PageResponseOfUserProf": {
        "title": "PageResponseOfUserProf",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/UserProf"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "UserProf": {
        "required": [
          "description",
          "group",
          "userProf"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "USER_PROF"
          },
          "description": {
            "type": "string",
            "example": "Get Profiles"
          },
          "userProf": {
            "$ref": "#/components/schemas/UserProfDef"
          }
        }
      },
      "UserProfDef": {
        "required": [
          "dodUserProfArray"
        ],
        "type": "object",
        "properties": {
          "dodUserProfArray": {
            "$ref": "#/components/schemas/UserProfDodUserProfArray"
          }
        }
      },
      "UserProfDodUserProfArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserProfDodUserProf"
        }
      },
      "UserProfDodUserProf": {
        "type": "object",
        "properties": {
          "profId": {
            "type": "object"
          },
          "profText": {
            "type": "object"
          }
        }
      },
      "PageResponseOfValAccess": {
        "title": "PageResponseOfValAccess",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ValAccess"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ValAccess": {
        "required": [
          "description",
          "group",
          "valAccess"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "VAL_ACCESS"
          },
          "description": {
            "type": "string",
            "example": "Verify that the user has access to the resource"
          },
          "valAccess": {
            "$ref": "#/components/schemas/ValAccessDef"
          }
        }
      },
      "ValAccessDef": {
        "required": [
          "dodValAccessArray"
        ],
        "type": "object",
        "properties": {
          "dodValAccessArray": {
            "$ref": "#/components/schemas/ValAccessDodValAccessArray"
          }
        }
      },
      "ValAccessDodValAccessArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ValAccessDodValAccess"
        }
      },
      "ValAccessDodValAccess": {
        "type": "object",
        "properties": {
          "resultYn": {
            "type": "object"
          }
        }
      },
      "PageResponseOfXlaFilter": {
        "title": "PageResponseOfXlaFilter",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/XlaFilter"
          },
          "messages": {
            "type": "array",
            "description": "Informational or warning messages",
            "items": {
              "$ref": "#/components/schemas/MessageResponse"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "XlaFilter": {
        "required": [
          "description",
          "group",
          "xlaFilter"
        ],
        "type": "object",
        "properties": {
          "group": {
            "type": "string",
            "example": "XLA_FILTER"
          },
          "description": {
            "type": "string",
            "example": "Xla reference lookup filtered by codes"
          },
          "xlaFilter": {
            "$ref": "#/components/schemas/XlaFilterDef"
          }
        }
      },
      "XlaFilterDef": {
        "required": [
          "dodXlaFilterArray"
        ],
        "type": "object",
        "properties": {
          "dodXlaFilterArray": {
            "$ref": "#/components/schemas/XlaFilterDodXlaFilterArray"
          }
        }
      },
      "XlaFilterDodXlaFilterArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/XlaFilterDodXlaFilter"
        }
      },
      "XlaFilterDodXlaFilter": {
        "type": "object"
      },
      "PageInfo": {
        "title": "PageInfo",
        "type": "object",
        "properties": {
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MessageResponse": {
        "title": "MessageResponse",
        "type": "object",
        "properties": {
          "messageCode": {
            "type": "string"
          },
          "messageText": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}